<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.AdapterFactory">
            <summary>
            A utility class used to generate platform-specific controllers from types implementing the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Contracts.IController"/> interface.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.AdapterFactory.sharedMetadataReferences">
            <summary>
            A cache containing key assembly references that remain the same between invocations of this factory.
            There is a set specifying all assemblies present in the cache, and a list containing those references in no particular order.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.AdapterFactory.GenerateControllerAdapter(Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase,System.Collections.Generic.IEnumerable{System.Type},System.Xml.Xsl.XslCompiledTransform,System.Collections.Generic.IEnumerable{System.Reflection.AssemblyName})">
            <summary>
            Serializes the controller metadata and applies the adapter template to that serialized metadata,
            the resulting source code is compiled on-the-fly and the resulting assembly is returned.
            </summary>
            <param name="controllerMetadata">A metadata object describing the controller to wrap with an adapter.</param>
            <param name="derivedControllerMetadataTypes">
            All types derived from <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase"/> and <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase"/>
            that the consuming code used to check constraints and serialize controllers.
            </param>
            <param name="adapterTemplate">An XSLT template used to generate code based on metadata describing the controller.</param>
            <param name="templateDependencies">
            An enumerable listing every non-system library reference the template needs to compile successfully.
            This includes the assembly containing the controller itself and anything else that needs to be resolved at compilation time.
            </param>
            <returns>
            The assembly generated by compiling specified template's output.
            </returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase">
            <summary>
            A utility class to make it easy to access relevant metadata for a controller endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase"/> class.
            </summary>
            <param name="endpointMethodInfo">An endpoint defined on a controller.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase.EndpointName">
            <summary>
            Gets or sets the endpoint's name.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase.ClientFacingParameters">
            <summary>
            Gets or sets or sets an ordered list of parameters clients must provide to this endpoint.
            Any parameters the framework will inject are filtered out of this list.
            </summary>
            <remarks>
            These parameters are what a client application would provide when invoking this endpoint.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase.EndpointContextParameterName">
            <summary>
            Gets or sets the name of the endpoint's context parameter.
            If the endpoint doesn't require a context parameter, this string will be null or empty.
            </summary>
            <remarks>
            This parameter is not provided by client applications,
            an adapter will need to construct an object that implements <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Contracts.IEndpointContext"/> and pass it to the endpoint as this parameter.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase.AllParameterNames">
            <summary>
            Gets or sets an ordered list of all of this endpoint's parameter names.
            </summary>
            <remarks>
            This is the full list of parameters the endpoint needs to execute.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointMetadataBase.FullReturnType">
            <summary>
            Gets or sets the return type this endpoint will pass to the generated adapter (this is the return type prior to any post-processing).
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointParameterNameAndTypeName">
            <summary>
            A utility class that describes an endpoint's parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointParameterNameAndTypeName.#ctor(System.Reflection.ParameterInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointParameterNameAndTypeName"/> class.
            </summary>
            <param name="parameterInfo">The parameter info to serialize for use in an XSLT template.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointParameterNameAndTypeName.Name">
            <summary>
            Gets or sets this parameter's name.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointParameterNameAndTypeName.Type">
            <summary>
            Gets or sets this parameter's type.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerEndpointParameterNameAndTypeName.ClrType">
            <summary>
            Gets or sets the underlying type that was serialized into the type field.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase">
            <summary>
            A utility class exposing useful metadata describing a controller.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase"/> class.
            </summary>
            <param name="controllerType">A controller to extract metadata from.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.AdapterName">
            <summary>
            Gets or sets this controller adapter's name.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.RoutePrefix">
            <summary>
            Gets or sets a URL segment to prefix endpoints defined on this controller with.
            </summary>
            <remarks>
            If no route prefix is needed, that is indicated here using a null or empty string.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.OriginalControllerNamespace">
            <summary>
            Gets or sets the controller's namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.OriginalControllerFullyQualifiedTypeDeclaration">
            <summary>
            Gets or sets the controller's fully-qualified type declaration (like one would write in code when calling its constructor).
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.HttpPostEndpoints">
            <summary>
            Gets or sets metadata that describes all of the HTTP POST endpoints exposed by the controller.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.ControllerMetadataBase.HttpGetEndpoints">
            <summary>
            Gets or sets metadata that describes all of the HTTP GET endpoints exposed by the controller.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.SerializationUtilities">
            <summary>
            A utility class that enumerates the built-in retail server controllers partner can extend, and what entity type those controllers manage.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Hosting.Framework.SerializationUtilities.SerializeTypeNameForCode(System.Type)">
            <summary>
            Returns the fully-qualified type name, with proper template syntax, for the specified type.
            </summary>
            <param name="type">The type to serialize to a fully-qualified name.</param>
            <returns>The fully qualified name for the type, with proper template syntax.</returns>
        </member>
    </members>
</doc>
