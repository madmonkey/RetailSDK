<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Dynamics.Commerce.Runtime.Workflow</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper">
            <summary>
            Encapsulates helper functions for channel availability.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.FulfillmentLocationAssignmentPolicyName">
            <summary>
            The value that will appear in the "Name" column in RetailConfigurationParameters for the fulfillment location assignment policy.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.GetChannelAvailabiltiy(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnitLocation},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnit})">
            <summary>
            Get availability of items for specified stores.
            </summary>
            <param name="context">The request context.</param>
            <param name="stores">The collection of store locations.</param>
            <param name="itemUnits">The collection of items.</param>
            <returns>
            The collection of store availability information.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.GetItemAvailabilitiesByItemWarehouses(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemWarehouse})">
            <summary>
            Gets a list of item availability given the item warehouse filters.
            </summary>
            <param name="context">The request context.</param>
            <param name="itemWarehouses">The list of item warehouse filters.</param>
            <returns>The list of item availability.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.GetAllItemAvailablitiesByItemQuantities(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemQuantity},System.Int32)">
            <summary>
            Gets all item availablities by item quantities.
            </summary>
            <param name="context">The context.</param>
            <param name="customerId">The customer identifier.</param>
            <param name="itemQuantities">The items to be queried.</param>
            <param name="maxWarehousesPerItem">The maximum number warehouse availabilities to be returned per item.</param>
            <returns>The item availabilities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.UseDefaultFulfilmentLocationForShippingCustomerOrders(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the boolean to determine if we will fetch locations from the database or use the default fulfillment location.
            </summary>
            <param name="context">The request context.</param>
            <returns>True if we wish to use the Channels Default Inventory Location, False if we wish to search for locations with avaialble inventory.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.GetRetailConfigurationParameters(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the Retail Configuration Parameters.
            </summary>
            <param name="context">The request context.</param>
            <returns>The list of Retail Configuration Parameters.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.ConvertUnitOfMeasure(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemReservation},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnitConversion})">
            <summary>
            Convert unit of measure for item reservations.
            </summary>
            <param name="context">The request context.</param>
            <param name="itemReservations">The item reservations.</param>
            <param name="itemUnitConversions">The item unit conversions.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.DataValidationException">Thrown if there is no conversion rules defined for any of item reservations.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.ConvertUnitOfMeasure(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemAvailability},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnit})">
            <summary>
            Convert unit of measure for item availabilities.
            </summary>
            <param name="context">The request context.</param>
            <param name="itemAvailabilities">The item availabilities.</param>
            <param name="itemUnits">The desired item unit of measures.</param>
            <returns>The converted item availabilities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.ConvertUnitOfMeasure(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemAvailableQuantity},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnit})">
            <summary>
            Convert unit of measure for item availabilities.
            </summary>
            <param name="context">The request context.</param>
            <param name="itemAvailableQuantities">The item availabilities.</param>
            <param name="itemUnits">The desired item unit of measures.</param>
            <returns>The converted item available quantities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.GetUnitOfMeasureConversions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnitQuantity},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnit})">
            <summary>
            Gets the unit of measure conversions.
            </summary>
            <param name="context">The context.</param>
            <param name="itemUnitQuantities">The item unit quantities.</param>
            <param name="itemUnits">The item units.</param>
            <returns>The unit of measure conversions.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelAvailabilityHelper.GetUnitOfMeasureConversions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnitConversion})">
            <summary>
            Gets the unit of measure conversions.
            </summary>
            <param name="context">The context.</param>
            <param name="itemUnitConversions">The item unit conversions.</param>
            <returns>The unit of measure conversions.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelProductAvailability.GetAvailableToPromiseInventoryRequestHandler">
            <summary>
            Encapsulates the workflow required to get inventory available to promise information.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChannelProductAvailability.GetAvailableToPromiseInventoryRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableToPromiseInventoryRequest)">
            <summary>
            Executes the workflow to get inventory available to promise information.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetItemAvailableQuantitiesRequestHandler">
            <summary>
            Encapsulates the workflow required to get item available quantities.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetItemAvailableQuantitiesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetItemAvailableQuantitiesRequest)">
            <summary>
            Executes the workflow for getting item available quantities.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityByQuantityDescendingComparer">
            <summary>
            Compare item availabilities by quantity descending then record ID ascending.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityByQuantityDescendingComparer.Compare(Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemAvailability,Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemAvailability)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeShiftStatusRequestHandler">
            <summary>
            Encapsulates the workflow required to update the status of a shift record.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeShiftStatusRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ChangeShiftStatusRequest)">
            <summary>
            Executes the create shift staging workflow.
            </summary>
            <param name="request">The new Shift request.</param>
            <returns>The new Shift response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeShiftStatusRequestHandler.PurgeSalesTransactionData(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Simple, non-critical maintenance task assigned to the shift closing event.
            </summary>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CreateShiftRequestHandler">
            <summary>
            Encapsulates the workflow required to create a shift record.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CreateShiftRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CreateShiftRequest)">
            <summary>
            Executes the create shift staging workflow.
            </summary>
            <param name="request">The new Shift request.</param>
            <returns>The new Shift response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CreateShiftRequestHandler.ValidateCanOpenShift(Microsoft.Dynamics.Commerce.Runtime.Messages.CreateShiftRequest)">
            <summary>
            Validates whether employee can open shifts.
            </summary>
            <param name="request">The create shift request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CreateShiftRequestHandler.CreateNewShift(Microsoft.Dynamics.Commerce.Runtime.Messages.CreateShiftRequest)">
            <summary>
            Creates a new shift given the request.
            </summary>
            <param name="request">The create shift request.</param>
            <returns>The created shift.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ForceDeleteShiftRequestHandler">
            <summary>
            The request handler for ForceDeleteShiftRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ForceDeleteShiftRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ForceDeleteShiftRequest)">
            <summary>
            The request handler for ForceDeleteShiftRequest.
            Deletes the shift from staging table and logs the transaction.
            </summary>
            <param name="request">ForceDeleteShiftRequest Request.</param>
            <returns>A null response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAddressRequestHandler">
            <summary>
            Gets the global address values that consists of countries/regions, counties, state provinces, cities.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAddressRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressRequest)">
            <summary>
            Executes the workflow to fetch the Address information.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAddressRequestHandler.GetCountries(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressRequest)">
            <summary>
            Executes WorkFlow associated with retrieving list of countries/regions.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAddressRequestHandler.GetAddressFromZipCode(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressRequest)">
            <summary>
            Executes Workflow associated with retrieving list of addresses according to passed zip\postal code.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetAddressResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler">
            <summary>
            Encapsulates the workflow required to get available stores for device.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableShiftsRequest)">
            <summary>
            Executes the workflow to get available Shifts.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler.GetShiftsWithStatus(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableShiftsRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions,System.Int64,System.String,System.Boolean)">
            <summary>
            Gets all shifts by status.
            Used to fetch blindclosed/suspended/invalid shift.
            </summary>
            <param name="request">The request.</param>
            <param name="employeePermission">The employeePermission.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="isManager">Whether user is manager.</param>
            <returns>Returns all shift with desired status.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler.GetOpenedShifts(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableShiftsRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Gets all opened shifts based on permissions set.
            </summary>
            <param name="request">The request.</param>
            <param name="employeePermission">The employeePermission.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="isManager">Whether user is manager.</param>
            <returns>Returns all open shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler.GetNonClosedShifts(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableShiftsRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Fetch all non closed shifts based on permissions set.
            </summary>
            <param name="request">The request.</param>
            <param name="employeePermission">The employeePermission.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="isManager">Whether user is manager.</param>
            <returns> All non closed shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler.GetCriteriaForOpenedShifts(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableShiftsRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions,System.Boolean,System.Int64,System.String,System.String)">
            <summary>
            Get the shift query criteria for fetching open shifts.
            </summary>
            <param name="request">The request.</param>
            <param name="employeePermission">The employeePermission.</param>
            <param name="isManager">Whether user is manager.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <returns> Returns shift query criteria for open shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableShiftsRequestHandler.GetCriteriaForShiftsThatAreNotOpenedOrClosed(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableShiftsRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions,System.Boolean,System.Int64,System.String)">
            <summary>
            Get the shift query criteria for fetching blindclosed/suspended/invalid shifts.
            </summary>
            <param name="request">The request.</param>
            <param name="employeePermission">The employeePermission.</param>
            <param name="isManager">Whether user is manager.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <returns> Returns shift query criteria for blindclosed/suspended/invalid shifts.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetChannelCurrencyRequestHandler">
            <summary>
            Encapsulates the workflow required to retrieve supported channel currency amounts.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetChannelCurrencyRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetChannelCurrencyAmountRequest)">
            <summary>
            Executes the workflow associated with retrieving list of supported channel currencies.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetOnlineChannelRequestHandler">
            <summary>
            Encapsulates the workflow required to retrieve the online channel.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetOnlineChannelRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetOnlineChannelRequest)">
            <summary>
            Executes the workflow associated with retrieving online channel by channel identifier.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.NumberSequenceRequestHandler">
            <summary>
            The number sequence request handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.NumberSequenceRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetNumberSequenceRequest)">
            <summary>
            Executes the workflow to get the next available number sequence value.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator">
            <summary>
            Shift calculator helps to perform end of day calculation.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.Calculate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,System.String,System.Int64)">
            <summary>
            Calculate the totals, number of transactions happened in the current shift.
            </summary>
            <param name="context">Request context.</param>
            <param name="currentShift">Current shift object.</param>
            <param name="shiftTerminalId">Shift terminal Identifier.</param>
            <param name="shiftId">Shift identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.SetShiftSalesTotals(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Sets the totals and counts of the sales transaction.
            </summary>
            <param name="currentShift">Current shift data.</param>
            <param name="shiftTotals">Calculated shift totals from end of day.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.SetShiftSalesTotals_SE(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Sets the Swedish totals and counts of the sales transaction.
            </summary>
            <param name="currentShift">Current shift data.</param>
            <param name="shiftTotals">Calculated shift totals from end of day.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.SetShiftTenderLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Sets the current shift tender line details by calculating the totals from daily operation transactions.
            </summary>
            <param name="currentShift">Current shift data.</param>
            <param name="endOfDayShiftDetails">Calculated shift details from end of day.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.SetShiftAccountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Sets the current shift account line details by calculating the totals from income expense transactions.
            </summary>
            <param name="currentShift">Current shift data.</param>
            <param name="endOfDayShiftDetails">Calculated shift details from end of day.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.SetShiftTaxLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Sets the tax line tax amounts.
            </summary>
            <param name="currentShift">Current shift data.</param>
            <param name="endOfDayShiftDetails">Calculated shift details from end of day.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.FindOrCreate(System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftTenderLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftTenderLine)">
            <summary>
            Find or create a shift tender line.
            </summary>
            <param name="shiftTenderLines">Shift tender lines.</param>
            <param name="tenderLine">Tender line.</param>
            <returns>Returns the shift tender line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftCalculator.SetRetailTransactionCount(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Sets the number of retail transactions happened in the current shift.
            Sets the rounding totals of the current shift.
            Sets the first created date/time of the transaction.
            </summary>
            <param name="currentShift">Current Shift data.</param>
            <param name="endOfDayShift">End of day shifts.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper">
            <summary>
            Helper class for shift status transition.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.#ctor(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.ChangeShiftStatusRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper"/> class.
            </summary>
            <param name="context">The request context.</param>
            <param name="request">The request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.TransitShiftStatus(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Transits the shift object status and trigger associated operations.
            </summary>
            <param name="shift">The shift object.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.GetCashTenderTypeIdentifier(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Retrieves the cash tender type identifier.
            </summary>
            <param name="context">The request context.</param>
            <returns>The tender type identifier for cash tender type.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.ValidateClose(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Validates if a shift can be closed by checking if the starting amounts and tender declaration of a closed shift have been set
            and if there are no pending shift reconciliation lines.
            </summary>
            <param name="shift">The shift object to be verified.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.GetPendingShiftReconciliationLinesCount(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Gets the number of shift reconciliation lines that are pending reconciliation.
            </summary>
            <param name="shift">The shift object to be verified.</param>
            <returns>The number of unreconciled lines associated with the shift.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.GetShiftTenderDeclareTransactionsCount">
            <summary>
            Get TenderDeclareTransactions of the shift on the terminal.
            </summary>
            <returns>The number of TenderDeclare transactions in the shift.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.GetShiftStartingAmountTransactionCount(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Gets the startingAmount transaction of the shift on the Terminal.
            </summary>
            <param name="shift">The shift object.</param>
            <returns>The number of StratingAmount transactions in the shift.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.ValidateCanChangeStatus(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Validates whether a status transition is possible on the specified shift.
            </summary>
            <param name="shift">The shift.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.BlindCloseShift(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Blind closes the shift.
            </summary>
            <param name="shift">The shift.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.CloseShift(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Closes the shift.
            </summary>
            <param name="shift">The shift.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.SuspendShift(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Suspends the shift.
            </summary>
            <param name="shift">The shift.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftTransitionHelper.CloseShift(Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift,System.Boolean)">
            <summary>
            Closes the shift.
            </summary>
            <param name="shift">The shift.</param>
            <param name="isBlindClose">If <c>true</c> the shift will be closed with a Closed status, otherwise with BlindClosed status.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CreateCustomerRequestHandler">
            <summary>
            CreateCustomerRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CreateCustomerRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CreateCustomerRequest)">
            <summary>
            Executes the workflow to create the customer.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerHelper">
            <summary>
            CustomerHelper class for the Customers workflow.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerHelper.ValidateAddresses(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.Address})">
            <summary>
            Validate customer addresses.
            </summary>
            <param name="context">The request context.</param>
            <param name="customerAddresses">The customer addresses.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerSearchRequestHandler">
            <summary>
            Customer search request handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerSearchRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CustomersSearchRequest)">
            <summary>
            Executes the workflow to retrieve customer information.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.InitiateLinkToExistingCustomerRequestHandler">
            <summary>
            Encapsulates the workflow to link the current user to an existing customer.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.InitiateLinkToExistingCustomerRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.InitiateLinkToExistingCustomerRequest)">
            <summary>
            Executes the workflow to send an e-mail to the specified customer.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendCustomerEmailRequestHandler">
            <summary>
            Encapsulates the workflow to send an e-mail to a specified user.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendCustomerEmailRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SendCustomerEmailRequest)">
            <summary>
            Executes the workflow to send an e-mail to the specified customer.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateCustomerRequestHandler">
            <summary>
            UpdateCustomerRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateCustomerRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UpdateCustomerRequest)">
            <summary>
            Executes the workflow to retrieve customer loyalty information.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeviceConfigurationRequestHandler">
            <summary>
            Request handler to get the device configurations.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeviceConfigurationRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeviceConfigurationRequest)">
            <summary>
            Gets the device configuration.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.ConfigurationException">Required Service missing.</exception>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationRequestHandler">
            <summary>
            Encapsulates the workflow to process the employee time clock registration.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.EmployeeTimeRegistrationRequest)">
            <summary>
            Workflow to process employee time clock activities.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper">
            <summary>
            Workflow helper class for employee time registration.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.BreakForLunch">
            <summary>
            Constant to break for lunch defined in AX.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.BreakFromWork">
            <summary>
            Constant to break for work defined in AX.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetLatestActivity(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the latest activity of the employee.
            </summary>
            <param name="context">The request context.</param>
            <returns>The latest employee activity.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.RegisterClockIn(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Registers the employee clock in.
            </summary>
            <param name="context">The request context.</param>
            <returns>Returns the activity DateTimeOffset in channel local time zone.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.RegisterClockOut(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Registers the employee clock out.
            </summary>
            <param name="context">The request context.</param>
            <returns>Returns the activity DateTimeOffset in channel local time zone.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.RegisterEmployeeBreak(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Register the time for employee break.
            </summary>
            <param name="context">The request context.</param>
            <param name="jobId">The job identifier.</param>
            <returns>Returns the activity DateTimeOffset in channel local time zone.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetBreakCategoryByJob(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Gets the break category name based on given job identifier.
            </summary>
            <param name="context">The request context.</param>
            <param name="jobId">The job identifier.</param>
            <returns>Returns the break category.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetBreakCategoryJobIdByActivity(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Gets the break category job identifier for the given activity.
            </summary>
            <param name="context">The request context.</param>
            <param name="activity">The activity: <c>LunchBrk</c>, <c>DailyBrks</c>.</param>
            <returns>Returns the activity job identifier.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetBreakCategoryJobIdsByActivities(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the break category job identifiers for the given activities.
            </summary>
            <param name="context">The request context.</param>
            <param name="activities">The activity list: <c>LunchBrk</c>, <c>DailyBrks</c>.</param>
            <returns>Returns the activity job identifiers list.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetEmployeeLogbookDetails(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Microsoft.Dynamics.Commerce.Runtime.DataModel.PagingInfo,Microsoft.Dynamics.Commerce.Runtime.DataModel.SortingInfo)">
            <summary>
            Gets the employee log book details.
            </summary>
            <param name="context">The request context.</param>
            <param name="storeNumber">The store number.</param>
            <param name="fromDateTimeOffset">The employee activity date and time offset lower bound.</param>
            <param name="toDateTimeOffset">The employee activity date and time offset upper bound.</param>
            <param name="pagingInfo">The paging information.</param>
            <param name="sortingInfo">The sorting information.</param>
            <returns>The results collection of employee activities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetManagerLogbookView(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeeActivityType[],System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Microsoft.Dynamics.Commerce.Runtime.DataModel.PagingInfo,Microsoft.Dynamics.Commerce.Runtime.DataModel.SortingInfo)">
            <summary>
            Gets the manager log book view for all employees for the given store and filter by activity.
            </summary>
            <param name="context">Request context.</param>
            <param name="storeNumber">Store number.</param>
            <param name="employeeActivityTypes">Employee activity types.</param>
            <param name="fromDateTimeOffset">The employee activity date and time offset lower bound.</param>
            <param name="toDateTimeOffset">The employee activity date and time offset upper bound.</param>
            <param name="pagingInfo">The paging information.</param>
            <param name="sortingInfo">The sorting information.</param>
            <returns>The results collection of employee activities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetEmployeeRegisteredStores(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings)">
            <summary>
            Gets the employee registered stores.
            </summary>
            <param name="context">The request context.</param>
            <param name="resultSettings">The query result criteria.</param>
            <returns>Returns the collection of store.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.ValidateTimeRegistrationFunctionalityProfile(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the employee registered stores.
            </summary>
            <param name="context">The request context.</param>
            <returns>Returns boolean value of time clock enabled.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.RegisterClockInAndOut(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Boolean)">
            <summary>
            Registers the clock in/ clock out request from the employee.
            </summary>
            <param name="context">The request context.</param>
            <param name="isClockIn">Whether this is a clockIn request (true) or clockOut (false).</param>
            <returns>Returns the activity DateTimeOffset in channel local time zone.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetBreakActivityJobIds(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeeActivityType[])">
            <summary>
            Gets the break activities job Ids from the employee activity type list.
            </summary>
            <param name="context">The request context.</param>
            <param name="employeeActivityTypes">The employee activity types.</param>
            <returns>The list of break activities job Ids.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeeTimeRegistrationWorkflowHelper.GetEmployeeStoreIds(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Get all store numbers of which the employee works for.
            </summary>
            <param name="context">The request context.</param>
            <returns>The store numbers of which the user works for.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCurrentEmployeeRequestHandler">
            <summary>
            Encapsulates the workflow required to get the currently logged in employee for a store.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCurrentEmployeeRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetCurrentEmployeeRequest)">
            <summary>
            Executes the workflow to get the currently logged in employee.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCurrentEmployeeRequestHandler.CalculateNumberOfDaysToPasswordExpiry(System.Int32,System.Int32,System.DateTimeOffset)">
            <summary>
            Calculate the number of days left to password expiry.
            </summary>
            <param name="passwordExpiryIntervalInDays">The password expiry interval in days.</param>
            <param name="passwordExpiryNotificationThreshold">The threshold at which notification is shown to the user.</param>
            <param name="passwordLastChangedDateTime">The date time at which the password was last changed.</param>
            <returns>The interval, in days, after which the user password will expire if it falls within the notification threshold.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetExtensionPackageDefinitionsRequestHandler">
            <summary>
            Request handler to get the extension package definitions.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetExtensionPackageDefinitionsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetExtensionPackageDefinitionsRequest)">
            <summary>
            Gets the extension package definitions.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetHardwareStationProfileRequestHandler">
            <summary>
            Request handler to get the hardware profiles.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetHardwareStationProfileRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetHardwareStationProfileRequest)">
            <summary>
            Gets the hardware station profiles from the data service.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.ConfigurationException">Required Service missing.</exception>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeleteStockCountRequestHandler">
            <summary>
            Handler for deleting StockCount journals and associated Transactions from RetailServer database.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeleteStockCountRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.DeleteStockCountRequest)">
            <summary>
            Executes the workflow to delete StockCount journal / transactions from RetailServer database.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetStockCountRequestHandler">
            <summary>
            Handler for retrieving StockCount journals and associated Transactions from RetailServer database.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetStockCountRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetStockCountRequest)">
            <summary>
            Executes the workflow to retrieve StockCount journal / transactions RetailServer database.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.PriceCheckRequestHandler">
            <summary>
            Encapsulates the workflow required to get price check information.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.PriceCheckRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.PriceCheckRequest)">
            <summary>
            Executes the workflow for a get price check for a product.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveStockCountRequestHandler">
            <summary>
            Handler for save/ commit StockCount journal Transactions.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveStockCountRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveStockCountRequest)">
            <summary>
            Executes the workflow to save/ commit StockCount journal transactions.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SyncStockCountRequestHandler">
            <summary>
            Handler for syncing StockCount journals and associated Transactions from AX to RetailServer database.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SyncStockCountRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SyncStockCountRequest)">
            <summary>
            Executes the workflow to sync StockCount journal / transactions from AX to RetailServer database.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveKitTransactionRequestHandler">
            <summary>
            Save all incoming kit (disassembly) operation transactions.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveKitTransactionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveKitTransactionRequest)">
            <summary>
            Executes the workflow to save  transactions from kit (disassembly) operation.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveKitTransactionRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveKitTransactionResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveKitTransactionRequestHandler.GetKitTransaction(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveKitTransactionRequest)">
            <summary>
            Gets transaction object of the kit operation from the request and sets context related information.
            </summary>
            <param name="request">The request object.</param>
            <returns>Returns the kit transaction object.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCustomerLoyaltyCardsRequestHandler">
            <summary>
            Handles the request for getting the loyalty cards of a customer.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCustomerLoyaltyCardsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetCustomerLoyaltyCardsRequest)">
            <summary>
            Executes the workflow to get the loyalty cards of a customer.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetLoyaltyCardTransactionsRequestHandler">
            <summary>
            Handles the request for getting the loyalty card transactions.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetLoyaltyCardTransactionsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetLoyaltyCardTransactionsRequest)">
            <summary>
            Executes the workflow to get the loyalty card transactions.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.IssueLoyaltyCardRequestHandler">
            <summary>
            Handles the request for issuing a loyalty card.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.IssueLoyaltyCardRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.IssueLoyaltyCardRequest)">
            <summary>
            Executes the workflow to issue a loyalty card.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.BeginReadChangedProductsRequestHandler">
            <summary>
            Handles request to begin read changed products.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.BeginReadChangedProductsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.BeginReadChangedProductsRequest)">
            <summary>
            Executes the workflow to retrieve changed products.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeleteListingsByCatalogsRequestHandler">
            <summary>
            Handles request to delete listings by catalogs.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeleteListingsByCatalogsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.DeleteListingsByCatalogsRequest)">
            <summary>
            Processes request to delete listings by catalogs.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeleteListingsByLanguagesRequestHandler">
            <summary>
            Handles request to delete listings by languages.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeleteListingsByLanguagesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.DeleteListingsByLanguagesRequest)">
            <summary>
            Processes the request to delete listings by languages.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.EndReadChangedProductsRequestHandler">
            <summary>
            Handles request to end read changed products.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EndReadChangedProductsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.EndReadChangedProductsRequest)">
            <summary>
            Executes the workflow to end the products read session.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetActiveProductPriceRequestHandler">
            <summary>
            Retrieves the price of an item.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetActiveProductPriceRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetActiveProductPriceRequest)">
            <summary>
            Executes the workflow to retrieve active product prices for given product ids.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetApplicableWarrantiesRequestHandler">
            <summary>
            Handles request to get applicable warranties.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetApplicableWarrantiesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetApplicableWarrantiesRequest)">
            <summary>
            Process the request to get applicable warranties.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetBarcodeRequestHandler">
            <summary>
            Workflow class helps to retrieve the Barcode details.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetBarcodeRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetBarcodeRequest)">
            <summary>
            Barcode workflow handler to process the incoming workflow requests.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetChangedProductsRequestHandler">
            <summary>
            Retrieves the collection of products.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetChangedProductsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ChangedProductsSearchRequest)">
            <summary>
            Executes the workflow to retrieve changed products.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCommerceListRequestHandler">
            <summary>
            Gets the commerce lists specified by the request.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCommerceListRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetCommerceListRequest)">
            <summary>
            Gets the commerce lists specified by the request.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetCommerceListResponse"/>Object containing the commerce lists.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCommerceListRequestHandler.IsAsyncCustomer(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Check if an account number maps to an async customer.
            </summary>
            <param name="context">The request context.</param>
            <param name="customerAccountNumber">The customer account number.</param>
            <returns>A boolean indicating whether or not the customer is an async customer.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCommerceListRequestHandler.PopulateAssortedProductLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.PagedResult{Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceList})">
            <summary>
            Populates only assorted product information for wishlist.
            </summary>
            <param name="context">The request context.</param>
            <param name="commerceLists">The wishlist.</param>
            <returns>Returns commerce list with assorted products only.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeletedCatalogsRequestHandler">
            <summary>
            Handles request to get deleted catalogs.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeletedCatalogsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeletedCatalogsRequest)">
            <summary>
            Processes the request to get deleted catalogs.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeletedLanguagesRequestHandler">
            <summary>
            Handles request to get deleted languages.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeletedLanguagesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeletedLanguagesRequest)">
            <summary>
            Processes request to get deleted languages.
            </summary>
            <param name="request">The request.</param>
            <returns>THe response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeletedListingsRequestHandler">
            <summary>
            Handles request to get deleted listings.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeletedListingsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeletedListingsRequest)">
            <summary>
            Executes the workflow to retrieve deleted listings.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetIndependentProductPriceDiscountRequestHandler">
            <summary>
            Retrieves the prices and calculated discount amount for the products.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetIndependentProductPriceDiscountRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetIndependentProductPriceDiscountRequest)">
            <summary>
            Executes the workflow to retrieve the prices and calculated discount amount for the given product identifiers.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetItemByIdRequestHandler">
            <summary>
            Encapsulates the workflow required to retrieve an item.
            </summary>
            <remarks>
            If both ItemId and RecordId have been specified, ItemId takes precedence.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetItemByIdRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetItemByIdRequest)">
            <summary>
            Executes the workflow to retrieve an item.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetProductPriceRequestHandler">
            <summary>
            Encapsulates the workflow required to retrieve a product price.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetProductPriceRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductPriceRequest)">
            <summary>
            Executes the workflow to retrieve the product price.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SearchProductsRequestHandler">
            <summary>
            Retrieves the collection of products.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SearchProductsRequestHandler.SetProductPrices(System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductPrice},System.Collections.Generic.Dictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.Product},System.Collections.Generic.Dictionary{System.Int64,System.Int64})">
            <summary>
            Sets the specified product prices on the product collection.
            </summary>
            <param name="productPrices">The product prices, calculated by the pricing service.</param>
            <param name="productMap">Products by product id.</param>
            <param name="productLookupIdMap">Product lookup map, including variant ids.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SearchProductsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ProductSearchRequest)">
            <summary>
            Executes the workflow to retrieve products using the specified criteria.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.VerifyProductExistenceRequestHandler">
            <summary>
            Handles request to verify products existence.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.VerifyProductExistenceRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.VerifyProductExistenceRequest)">
            <summary>
            Executes the workflow to verify products' existence.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AccountDepositHelper">
            <summary>
            Customer Account Deposit Helper class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AccountDepositHelper.ValidateCustomerAccountDepositTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validate customer account deposit transactions.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AccountDepositHelper.ValidateCustomerAccountDepositPaymentRestrictions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase)">
            <summary>
            Customer account deposit transactions cannot be tendered with the 'On Account' payment method.
            </summary>
            <param name="context">The context.</param>
            <param name="transaction">The transaction.</param>
            <param name="tenderLineBase">The tender line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AccountDepositHelper.ValidateCustomerInvoicingAndDeliveryOnHold(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Customer invoicing and delivery on hold cannot be tendered.
            No - Nothing blocked.
            Invoice - Customer order create/edit.
            All, Payment, Requisition, Never - Blocked.
            </summary>
            <param name="context">The context.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AccountDepositHelper.GetCustomer(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Loads customer.
            </summary>
            <param name="context">The service request context.</param>
            <param name="accountNumber">The account number.</param>
            <returns>The customer, or null if not found.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddCartLineChargeRequestHandler">
            <summary>
            Handles workflow for adding a charge to the cart line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddCartLineChargeRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.AddCartLineChargeRequest)">
            <summary>
            Executes the workflow to add a charge to the cart line.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.AddCartLineChargeRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartResponse"/> with the updated cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddChargeRequestHandler">
            <summary>
            Handles workflow for adding a charge to the cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddChargeRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.AddChargeRequest)">
            <summary>
            Executes the workflow to add a charge to the cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.AddChargeRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartResponse"/> with the updated cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddOrderInvoiceToCartRequestHandler">
            <summary>
            Handles workflow to add invoice to cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddOrderInvoiceToCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.AddOrderInvoiceToCartRequest)">
            <summary>
            Executes the workflow to add invoice to cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.AddOrderInvoiceToCartRequest"/>.</param>
            <returns>A SingleEntityDataServiceResponse containing the cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddOrRemoveDiscountCodesRequestHandler">
            <summary>
            Handles workflow for AddDiscountCodeToCart and RemoveDiscountCodeFromCart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AddOrRemoveDiscountCodesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.AddOrRemoveDiscountCodesRequest)">
            <summary>
            Executes the workflow to add or delete discount codes in cart.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CalculateTenderDiscountRequestHandler">
            <summary>
            Calculate tender discount for cart.
            </summary>
            <remarks>This is to calculate tender disocunt for the cart.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CalculateTenderDiscountRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CalculateTenderDiscountRequest)">
            <summary>
            This method processes the CalculateTenderDiscount workflow.
            </summary>
            <param name="request">The Check tender type request.</param>
            <returns>The Check tender type response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CancelOrderRequestHandler">
            <summary>
            Pick up at store request handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CancelOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CancelOrderRequest)">
            <summary>
            Process the request.
            </summary>
            <param name="request">The request object.</param>
            <returns>The response object.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper">
            <summary>
            Helper class for shopping cart related workflows.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.PaymentManagerServiceName">
            <summary>
            The payment manager service name.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ChargeUpdateCalculationModes">
            <summary>
            The calculation modes need to be applied after adding/overriding charges.
            CalculationModes.Price is not required because pricing service does not take total amount of the order in consideration.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.MaxSupportedCartLineAmount">
            <summary>
            The maximum supported cart line amount.
            </summary>
            <remarks>This value is determined to be large enough for valid transactions without causing overflow errors.</remarks>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.PropertyDelimiter">
            <summary>
            The delimiter for properties when constructing a string key out of an object.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ShouldValidateAttributesParameter">
            <summary>
            The retail parameter to enable/disable attribute validation
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LoadSalesTransactionForReturn(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TransactionOperationType)">
            <summary>
            Loads a returned sales transaction.
            </summary>
            <param name="context">The request context. It must contains sales transaction which has at least one sales lines for return.</param>
            <param name="cart">The cart object.</param>
            <param name="originalTransaction">Original transaction.</param>
            <param name="transactionOperationType">Operation type of the transaction.</param>
            <returns>The loaded returned sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LogAuditEntry(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditLogTraceLevel)">
            <summary>
            Writes an entry into the audit table.
            </summary>
            <param name="context">The request context.</param>
            <param name="source">The log source.</param>
            <param name="logEntry">The log entry.</param>
            <param name="traceLevel">The trace level.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LogAuditEntry(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditEventType,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditLogTraceLevel)">
            <summary>
            Writes an entry into the audit table.
            </summary>
            <param name="context">The request context.</param>
            <param name="eventType">The event type.</param>
            <param name="source">The log source.</param>
            <param name="logEntry">The log entry.</param>
            <param name="traceLevel">The trace level.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LogAuditEntry(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAuditEventType,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditLogTraceLevel)">
            <summary>
            Writes an entry into the audit table.
            </summary>
            <param name="context">The request context.</param>
            <param name="eventType">The event type.</param>
            <param name="source">The log source.</param>
            <param name="logEntry">The log entry.</param>
            <param name="traceLevel">The trace level.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LogAuditEntry(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAuditEventType,System.String,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditLogTraceLevel)">
            <summary>
            Writes an entry into the audit table.
            </summary>
            <param name="context">The request context.</param>
            <param name="eventType">The event type.</param>
            <param name="source">The log source.</param>
            <param name="logEntry">The log entry.</param>
            <param name="transactionId">The transaction id.</param>
            <param name="traceLevel">The trace level.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LoadSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Loads the sales transactions given the cart identifier.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartId">Cart identifier.</param>
            <returns>The loaded sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LoadSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.Boolean)">
            <summary>
            Loads the sales transactions given the cart identifier.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartId">Cart identifier.</param>
            <param name="ignoreProductDiscontinuedNotification">If set to 'true' and some products on the cart are not available notification will not be fired.</param>
            <returns>The loaded sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LoadSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.Nullable{System.Int64})">
            <summary>
            Loads the sales transactions given the cart identifier.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartId">Cart identifier.</param>
            <param name="cartVersion">The version of the cart.</param>
            <returns>The loaded sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LoadSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Loads the sales transactions given the cart identifier.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartId">Cart identifier.</param>
            <param name="ignoreProductDiscontinuedNotification">If set to 'true' and some products on the cart are not available notification will not be fired.</param>
            <param name="cartVersion">The version of the cart.</param>
            <returns>The loaded sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.CreateSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String)">
            <summary>
            Creates a sales transaction with given transaction id and customer id.
            </summary>
            <param name="context">The request context.</param>
            <param name="transactionId">The transaction id.</param>
            <param name="customerId">The customer id.</param>
            <returns>The newly created sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the context's sales transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">Transaction to validate.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SaveSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Saves the context's sales transaction to the DB.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Transaction to save.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetSalesTransactionReadOnlyStatus(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Entities.DataModel.SalesTransactionReadOnlyStatus)">
            <summary>
            Saves the context's sales transaction to the DB.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Transaction to save.</param>
            <param name="readOnlyStatus">The read-only status to be set on the sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.TransferSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Transfer the context's sales transaction to the DB.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Transaction to save.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateUpdateCartRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Boolean,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Validates the update cart request.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="returnedSalesTransaction">The returned sales transaction.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="isGiftCardOperation">True if request is a result of gift card operation.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.CartValidationException">Invalid cart.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateUpdateCartRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Boolean,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct},System.Boolean)">
            <summary>
            Validates the update cart request.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="returnedSalesTransaction">The returned sales transaction.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="isGiftCardOperation">True if request is a result of gift card operation.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
            <param name="isTransactionResume">True if request is from resume transaction.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.CartValidationException">Invalid cart.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateSaveCartLinesRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Validates the save cart lines request.
            </summary>
            <param name="context">The context.</param>
            <param name="request">The request.</param>
            <param name="transaction">Current transaction.</param>
            <param name="returnTransaction">Transaction that is being returned.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.PerformSaveCartOperations(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Performs the save cart request on the context's sales transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="request">The save cart request.</param>
            <param name="transaction">Current transaction.</param>
            <param name="returnTransaction">Transaction that is being returned.</param>
            <param name="newSalesLineIdSet">New sales line id set.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetDefaultDataOnSalesLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Sets the default data on sales lines.
            </summary>
            <param name="context">The context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="salesLines">The sales lines.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetUnitOfMeasureConversion(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Sets the unit of measure conversion for each sales lines.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLines">The sales lines to be set.</param>
            <remarks>
            Changing unit of measure is always changing from original unit of measure to the target unit of measure.
            For example: original unit of measure = Each,
            1. change it to target unit of measure Pair, then we are actually changing from Each to Pair.
            2. change it back to Each, then we are actually changing from Each to Each.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.UpdateIncomeExpenseTransactionFields(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Updates income expense transaction fields.
            </summary>
            <param name="context">Request context.</param>
            <param name="salesTransaction">Set sales transaction.</param>
            <param name="cart">Set cart received on the request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.UpdateAccountDepositTransactionFields(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Updates Account Deposit Transaction fields.
            </summary>
            <param name="context">Request context.</param>
            <param name="salesTransaction">Set sales transaction.</param>
            <param name="cart">Set cart received on the request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.RemoveHistoricalTenderLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Removes any tender lines that have the IsHistorical value set to true.
            </summary>
            <param name="cart">Cart to filter the tender lines on.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ConvertToCart(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Converts from a sales transaction to a cart.
            </summary>
            <param name="context">Request context.</param>
            <param name="salesTransaction">The sales transaction to convert from.</param>
            <returns>The populated cart.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ConvertToSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Converts from a cart to a sales transaction.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="cart">The cart to convert from.</param>
            <returns>The populated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ConvertToSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Converts from a cart to a sales transaction.
            </summary>
            <param name="cart">The cart to convert from.</param>
            <returns>The populated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ConvertToTenderLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine)">
            <summary>
            Converts CartTenderLine to TenderLine.
            </summary>
            <param name="cartTenderLine">The cart tender line.</param>
            <returns>The tender line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetProductsInCartLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine})">
            <summary>
            Gets the products in cart lines.
            </summary>
            <param name="context">The context.</param>
            <param name="cartLines">The cart lines.</param>
            <returns>A dictionary mapping product identifiers to products.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetSalesLineByNumber(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Decimal)">
            <summary>
            The a sales line from the sales transaction by the line number.
            </summary>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="lineNumber">The line number.</param>
            <returns>The sales line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetSalesLineBasedOnReturnedSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Decimal)">
            <summary>
            Sets the sales line based on returned sales line.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="returnedSalesLine">The returned sales line.</param>
            <param name="returnTransaction">The return transaction.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetSalesLineBasedOnReturnedSalesLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Decimal)">
            <summary>
            Sets the sales line based on returned sales line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="salesLine">The sales line.</param>
            <param name="returnedSalesLine">The returned sales line.</param>
            <param name="returnTransaction">The return transaction.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetSalesLineDefaultsFromOrderHeader(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Sets the default properties on the sales line from the order header.
            </summary>
            <param name="salesLine">The sales line from the sales transaction.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.LoadAllPeriodicDiscounts(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Gets all the periodic discounts on the context's sales transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.AddOrUpdateTenderLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase)">
            <summary>
            Add or updates tender lines on the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">Current transaction.</param>
            <param name="updatedTenderLine">The tender line to be updated or added.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.VoidTenderLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Voids tender lines on the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="tenderLineBase">The tender line to be updated or added.</param>
            <param name="salesTransaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetLoyaltyCardFromCustomer(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Sets the loyalty card in the cart from the customer.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart with updates or new cart from the client.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartPermissions(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Validate user permissions on cart.
            </summary>
            <param name="transaction">The sales transaction.</param>
            <param name="newCart">The new cart being updated.</param>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GenerateRandomTransactionId(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Generates a new random transaction id.
            </summary>
            <param name="context">The request context.</param>
            <returns>
            The new transaction id.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.CalculateAmountsPaidAndDue(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates the paid and due amounts for the transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The transaction to calculate the amount due for.</param>
            <returns>Updated transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateReturnPermission(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartType)">
            <summary>
            Validate whether the employee/cashier is able to perform return item or return transaction within the permissible limit.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction object.</param>
            <param name="cartType">The cart type.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.TryDeleteCart(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Tries to delete a cart represented by the <paramref name="salesTransaction"/> and traces warning in case of failure.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The transaction representing the cart.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.VoidSuspendedCarts(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.List{System.String})">
            <summary>
            Tries to void carts represented by the <paramref name="suspendedCartIds"/> and traces warning in case of failure.
            </summary>
            <param name="context">The request context.</param>
            <param name="suspendedCartIds">The transaction representing the cart.</param>
            <returns>The voided suspended sales orders.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidatePriceOverride(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates price override.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateSalesLinePrice(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Validates price on sales line.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="productsByRecordId">Products by record identifier.</param>
            <remarks>This method cannot to be executed before price calculation.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartLinesForCheckout(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Validates serial numbers on cart lines.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart.</param>
            <param name="productsByRecordId">Products by record identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartLineQuantityAndPriceSymbol(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validate Quantity and Net amount sign have to be same.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateMixedSalesAndReturn(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Boolean)">
            <summary>
            Validate the aggregated sales lines does not contain mixed sales and return.
            Where sale and return lines are lines with reverse sign of quantity.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLineByLineId">The sales lines whose quantity is to be checked.</param>
            <param name="aggregateSalesIsIncomplete">
            Flag used to to indicate that not all sales items have been entered in sales line dictionary.
            This is true when you want to do validation for adding-to, issuing, or cashing out a gift card
            before it is added to the aggregated sales lines.
            </param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetDefaultCommissionSalesGroup(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Sets the default commission sales group on the cart if configured to set the default sales group.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart object.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.AddOrUpdateAffiliationLinesFromCustomer(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Boolean)">
            <summary>
            Add or update affiliations automatically during customer added, updated or removed.
            </summary>
            <param name="context">The request context.</param>
            <param name="existingTransaction">The sales transaction.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="isTransactionResume">True if request is from resume transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCustomerAccount(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates whether the customer account can be updated.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart with updates or new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateQuantityChangeAllowed(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether the quantity change is allowed.
            </summary>
            <param name="context">Request context.</param>
            <param name="existingLine">Existing line.</param>
            <param name="updatedLine">Updated line.</param>
            <param name="validationFailures">Collection of validation failures.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.CopyAttributes(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeValueBase},Microsoft.Dynamics.Commerce.Runtime.DataModel.IAttributable,System.Boolean)">
            <summary>
            Copies attributes from a <see cref="T:System.Collections.Generic.IList`1"/> to another if there are any attribute in the new object.
            </summary>
            <param name="context">The current <see cref="T:Microsoft.Dynamics.Commerce.Runtime.RequestContext"/>.</param>
            <param name="newAttributes">The <see cref="T:System.Collections.Generic.IList`1"/> containing new attributes to update the current, if any.</param>
            <param name="attributableWithCurrentAttributes">The <see cref="T:System.Collections.Generic.IList`1"/> containing current attributes.</param>
            <param name="preserveReference">Optional parameter to define if the attribute collection will be replaced with a new instance or not. Default is to preserve the current instance.</param>
            <remarks>
            preserveReference parameter is to keep current behavior that is different between sales transaction (keep the reference) and sales line, replace with a new instance.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ShouldValidateAttributes(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Check a retail parameter to skip attribute validation.
            </summary>
            <param name="context">The current <see cref="T:Microsoft.Dynamics.Commerce.Runtime.RequestContext"/>.</param>
            <returns>True if should validate attributes, default is true.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ThrowIfNotPreProcessed(Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,System.String)">
            <summary>
            Throws an invalid payment request payment exception with the given error message if the tender line is not pre-processed.
            </summary>
            <param name="tenderLine">The tender line.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateAndGetReturnTransactionId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Boolean@)">
            <summary>
            Gets identifier of transaction that is being returned.
            </summary>
            <param name="context">The request context.</param>
            <param name="updatedCart">Updated cart (changed lines only).</param>
            <param name="originalCart">Original cart.</param>
            <param name="hasNewReturnTransactionId">Determines if a new return transaction id was added to the cart.</param>
            <returns>Transaction identifier or 'Null' if no transaction being returned.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateReturnTenderLineIsNotRestricted(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase)">
            <summary>
            Validate whether returns are allowed for current transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">Sales transaction.</param>
            <param name="updatedTenderLine">Tender line to validate.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.UpdateCartWithFilteredAffiliations(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Boolean)">
            <summary>
            Adds affiliations with the type General to the cart.
            </summary>
            <param name="existingTransaction">The sales transaction.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="isRetailStore">True is the request is done against Retail Store cart.</param>
            <remarks>If the request was done not against Retail Store cart then affiliations like Loyalty or Unknown or those who have customer assigned are not added while copying from the SalesTransaction.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.AddCustomerAffiliationsToCart(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Adds customer's affiliations to Cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.CopyAffiliationLoyaltyTierToCart(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
             Copies the sales transaction affiliations to the cart.
            </summary>
            <param name="salesTransaction">Sales transaction that contains affiliations.</param>
            <param name="cart">Cart to copy affiliations to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.CopyAffiliationLoyaltyTierToSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
             Copies the cart affiliations to the sales transaction.
            </summary>
            <param name="cart">Cart that contains affiliations.</param>
            <param name="salesTransaction">SalesTransaction to copy affiliations to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.PerformSaveCartLineOperations(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Perform save operations for cart lines.
            </summary>
            <param name="context">The request context.</param>
            <param name="request">The request object.</param>
            <param name="transaction">Current transaction.</param>
            <param name="returnTransaction">Transaction that is being returned.</param>
            <param name="salesLineByLineId">The mapping sales line id to sales line object.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.CheckChangeUnitOfMeasureOperation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Validate permission for unit of measure operation.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The Cart request.</param>
            <param name="salesLines">The sales line value.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetUnitOfMeasureConversions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnitConversion})">
            <summary>
            Set the unit of measure conversion in sales line.
            </summary>
            <param name="context">The request context.</param>
            <param name="conversions">The list of item unit conversions on sales lines.</param>
            <returns>The collection of unit of measure conversions.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetLinkedProductLineReferences(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Sets the references between parent and linked lines (if any).
            </summary>
            <param name="addedLines">The collection of added lines.</param>
            <param name="productsById">The map between the product ids and the products.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateTransactionWithInvoiceLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Performs invoice line specific validations for the transaction.
            </summary>
            <param name="newCart">The new cart.</param>
            <param name="salesTransaction">The old transaction.</param>
            <param name="validationResults">The validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.UpdateTaxOverrideCodes(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Update tax override codes on the transaction and lines.
            </summary>
            <param name="transaction">The sales transaction.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.AggregateSalesLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct)">
            <summary>
            Aggregate sales line with existing lines.
            </summary>
            <param name="context">Request context.</param>
            <param name="existingLines">Collection of existing lines.</param>
            <param name="updatedOrAddedLine">Updated or newly added line.</param>
            <param name="product">The product.</param>
            <returns>
            True if line is aggregated; False otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCommonPermissionsForCart(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Check permissions for operations that are common for both customer orders and sales orders cart types.
            Such as comment, adding a customer etc.
            </summary>
            <param name="transaction">The sales transaction.</param>
            <param name="newCart">The new cart being updated.</param>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateEmployeeDiscountPermission(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validate whether the employee/cashier is able to set discounts within the permissible limit.
            </summary>
            <param name="context">The context.</param>
            <param name="newCart">The cart containing the discounts to be validated.</param>
            <param name="salesTransaction">The old transaction.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetSalesTransactionWarehouseInformation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Gets the sales transaction inventory location and site identifiers.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateConflicts(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine},System.Collections.Generic.HashSet{System.String},Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates whether two operations are supposed to be performed on the same sales line.
            </summary>
            <param name="cartLines">The cart line collection.</param>
            <param name="lineIdSet">The line id set.</param>
            <param name="cartLineValidationResults">The cart line validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateReturnConflicts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine},Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates whether sales lines have conflicts on return transaction identifier or return line numbers.
            </summary>
            <param name="returnedSalesTransaction">The returned sales transaction.</param>
            <param name="cartLines">The cart line collection.</param>
            <param name="cartLineValidationResults">The cart line validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateSalesLineOperations(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.Dictionary{System.Decimal,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Boolean,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct},System.Boolean)">
            <summary>
            Validates whether the update operations can be performed.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="returnSalesLineByLineNumber">The dictionary of return sales lines by line number.</param>
            <param name="isGiftCardOperation">True if request is a result of gift card operation.</param>
            <param name="cartLineValidationResults">The cart line validation results.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
            <param name="isTransactionResume">True if request is from resume transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartLineForAdd(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct},System.Collections.Generic.IDictionary{System.Decimal,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Boolean)">
            <summary>
            Validates whether a line can be added.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="productsById">A dictionary mapping product identifiers to products for the items in the cart.</param>
            <param name="returnSalesLineByLineNumber">The dictionary of return sales lines by line number.</param>
            <param name="cartLine">The cart line.</param>
            <param name="isGiftCardOperation">True if request is a result of gift card operation.</param>
            <returns>Return the collection of validation failures for the line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateProductPriceForSale(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates product prices on the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="product">The product on the cart line.</param>
            <param name="cartLine">The cart line.</param>
            <param name="validationFailures">The collection of validation results.</param>
            <remarks>This method is executed before full cart price calculation and relies on product price.
            Product price is only calculated if cartLine.IsPriceKeyedIn is true, thus all validations in this method can only depend
            on product.Price if cartLine.IsPriceKeyedIn is true. For any other price validations that need price,
            please add them on <see cref="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateSalesLinePrice(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})"/> that happens after full cart price calculations.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartLineForUpdate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct},System.Collections.Generic.Dictionary{System.Decimal,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Boolean)">
            <summary>
            Validates whether a line can be updated.
            </summary>
            <param name="context">The Request context.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="productsById">A dictionary mapping product identifiers to products for the items in the cart.</param>
            <param name="returnSalesLineByLineNumber">The dictionary of return sales lines by line number.</param>
            <param name="cartLine">The cart line.</param>
            <param name="isTransactionResume">True if request is from resume transaction.</param>
            <returns>Return the collection of validation failures for the line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateNoSalesLineOnTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates that the transaction does not contain any sales lines.
            </summary>
            <param name="salesTransaction">Sales transaction.</param>
            <param name="validationFailures">Validation failures collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCashAndCarryCartLineForUpdate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.Dictionary{System.Decimal,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether a line can be updated for a cash and carry transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="returnSalesLineByLineNumber">The dictionary of return sales lines by line number.</param>
            <param name="cartLine">The cart line.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartLineUnitOfMeasureAndQuantity(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates whether the unit of measure of cart lines are set correctly.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart whose cart line's unit of measure to be validated.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="cartLineValidationResults">The cart line validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetUnitOfMeasureSymbols(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine},System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Retrieves the unit of measure symbols for the items in the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartLines">The cart lines.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <returns>The unit of measure symbols.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.VerifyQuantityDecimalPrecision(System.Decimal,System.Int32)">
            <summary>
            Verifies the decimal precision of the item's unit of measure is respected.
            </summary>
            <param name="quantity">Actual quantity value of the item from cart line.</param>
            <param name="decimalPrecision">Allowed decimal precision for the unit of measure.</param>
            <returns>Return true if the quantity's decimal precision respects the unit of measure.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateIncomeExpenseTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validate income or expense transactions.
            </summary>
            <param name="cart">Request cart.</param>
            <param name="cartLineValidationResults">Cart line validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateLoyaltyCard(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates whether the loyalty card number can be updated.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart with updates or new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="cartLineValidationResults">The cart line validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetCustomerFromLoyaltyCard(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Sets the customer in the cart from the loyalty card.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">The cart with updates or new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="cartLineValidationResults">The cart line validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateSalesLineQuantityLimit(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine})">
            <summary>
            Validates whether the quantity of each line in the aggregated cart lines is within the permissible quantity limit.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartLines">The cart lines whose quantity is to be checked.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.SetSalesLineDefaultsFromItemData(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.Item)">
            <summary>
            Sets the default properties on the sales line from the item information.
            </summary>
            <param name="salesLine">The sales line from the sales transaction.</param>
            <param name="item">The item corresponding to the sales line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetItemsForSalesLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Retrieves the item data for the items in the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLines">The sales lines for which to retrieve item information.</param>
            <returns>The cart items.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.AssignUniqueLineId(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Assigns id for the new line.
            </summary>
            <param name="salesLine">Line to update.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.AddOrUpdateAffiliationLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Adds or updates affiliation lines on the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart containing the affiliation lines to be updated or added.</param>
            <param name="salesTransaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.RefreshSalesLoyaltyTierLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Refresh the loyalty group and tier lines on the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.IsExistSameAffiliationLoyaltyTier(Microsoft.Dynamics.Commerce.Runtime.DataModel.AffiliationLoyaltyTier,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesAffiliationLoyaltyTier})">
            <summary>
            Check whether exist same affiliation or not.
            </summary>
            <param name="affiliation">The affiliation.</param>
            <param name="salesAffiliationLoyaltyTiers">The sales affiliationLoyaltyTier collection.</param>
            <returns>Return true if exist same affiliation, otherwise return false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.IsExistSameAffiliationLoyaltyTier(Microsoft.Dynamics.Commerce.Runtime.DataModel.AffiliationLoyaltyTier,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.AffiliationLoyaltyTier})">
            <summary>
            Check whether exist same affiliation or not.
            </summary>
            <param name="affiliation">The affiliation.</param>
            <param name="affiliationLoyaltyTiers">The affiliationLoyaltyTier collection.</param>
            <returns>Return true if exist same affiliation, otherwise return false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.IsExistSameAffiliation(System.Int64,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.AffiliationLoyaltyTier})">
            <summary>
            Check whether exist same affiliation or not.
            </summary>
            <param name="affiliationId">The affiliation ID.</param>
            <param name="affiliationLoyaltyTiers">The affiliationLoyaltyTier collection.</param>
            <returns>Return true if exist same affiliation, otherwise return false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetUnitOfMeasureConversionMap(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Gets the unit of measure conversion map.
            </summary>
            <param name="context">The data request context.</param>
            <param name="salesLines">The sales lines.</param>
            <returns>A dictionary whose key is <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnitConversion"/> and value is <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.UnitOfMeasureConversion"/>.</returns>
            <remarks>
            After change the unit of measure, the SalesLine.Quantity means the quantity measured by target unit of measure. Later we need to convert this value to
            quantity measured by original unit of measure and assign the value to SalesLine.UnitQuantity. So here we need to find the conversion from
            target unit of measure to original unit of measure.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetUnitOfMeasureConversion(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnitConversion,Microsoft.Dynamics.Commerce.Runtime.DataModel.UnitOfMeasureConversion})">
            <summary>
            Gets the unit of measure conversion for this sales line from the conversion map.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="unitOfMeasureConversionMap">The unit of measure conversion map.</param>
            <returns>The unit of measure conversion.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.RoundQuantity(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Round the quantity after change the unit of measure.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLine">The sales line to be rounded.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetDefaultCommissionSalesGroup(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the default commission sales group.
            </summary>
            <param name="context">The request context.</param>
            <returns>The default commission sales group. Null or empty string if there is no default commission sales group.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.RemoveInvalidCouponsFromTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Removes customer required coupons from cart if the customer is removed.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="cart">The cart with updates/ new cart from the client.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateCartLineForCheckout(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartType,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Validates cart line for checkout.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartType">The cart type.</param>
            <param name="cartLine">The cart line.</param>
            <param name="productsByRecordId">Products by record identifier.</param>
            <returns>Validation failures.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateProductForCheckout(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartType,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates product for checkout.
            </summary>
            <param name="context">The request context.</param>
            <param name="product">The product.</param>
            <param name="cartType">The cart type.</param>
            <param name="cartLine">The cart line.</param>
            <param name="validationFailures">Validation failures.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetDefaultSalesOrderAttributeValues(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Int64})">
            <summary>
            Gets default sales order attribute values for given attribute groups.
            </summary>
            <param name="context">The request context.</param>
            <param name="attributeGroups">The attribute groups.</param>
            <returns>Collection of default attribute values.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.ValidateForLinkedRefundTenderLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Validates whether the given tender line is a refund of a previous payment, and if it is, whether its contents are valid.
            </summary>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="updatedTenderLine">The updated tender line.</param>
            <param name="tenderLineOnCart">The tender line on the cart.</param>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetRefundableTenderLineKey(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the refundable tender line key.
            </summary>
            <param name="transaction">The sales transaction.</param>
            <param name="refundableTenderLine">The refundable tender line.</param>
            <param name="context">The request context.</param>
            <returns>The key.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CartWorkflowHelper.GetRefundTenderLineKey(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine)">
            <summary>
            Gets the refund tender line key.
            </summary>
            <param name="transaction">The sales transaction.</param>
            <param name="refundTenderLine">The refund tender line.</param>
            <returns>The key.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CashOutGiftCardRequestHandler">
            <summary>
            Handles workflow to cash out a gift card.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CashOutGiftCardRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CashOutGiftCardRequest)">
            <summary>
            Executes the workflow to cash out a gift card.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.CashOutGiftCardRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.CashOutGiftCardResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ConvertSalesLineCurrencyAmountsRequestHandler">
            <summary>
            Handles workflow for converting currency amounts of a sales line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ConvertSalesLineCurrencyAmountsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ConvertSalesLineCurrencyAmountsRequest)">
            <summary>
            Executes the workflow to convert the currency amounts of a sales line.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ConvertSalesLineCurrencyAmountsRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.NullResponse"/>.</returns>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.ConvertSalesLineCurrencyAmountsRequestHandler.CurrencyConverter.SourceCurrency">
            <summary>
            Gets or sets the source currency.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.ConvertSalesLineCurrencyAmountsRequestHandler.CurrencyConverter.TargetCurrency">
            <summary>
            Gets or sets the target currency.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.ConvertSalesLineCurrencyAmountsRequestHandler.CurrencyConverter.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CopyCartRequestHandler">
            <summary>
            Copies a shopping cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CopyCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CopyCartRequest)">
            <summary>
            Copies the cart from the request to a different cart.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.CopyCartResponse"/> object containing the new cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper">
            <summary>
            Helper class for customer order logic.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.CustomerOrderCartValidations(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Validates a customer order cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart received on the request.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
            <param name="returnedSalesTransaction">The returned sales transaction to be validated.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineForAdd(Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether a line can be added.
            </summary>
            <param name="cartLine">The cart line.</param>
            <param name="cart">The cart.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineForAddOnCustomerOrderExchange(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether a line can be added on customer order exchange.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineForUpdate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether a line can be updated.
            </summary>
            <param name="context">The Request context.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="cartLine">The cart line.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineForUpdate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure},System.Boolean)">
            <summary>
            Validates whether a line can be updated.
            </summary>
            <param name="context">The Request context.</param>
            <param name="newCart">The cart with updates/ new cart from the client.</param>
            <param name="existingTransaction">The existing sales transaction from the DB.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
            <param name="cartLine">The cart line.</param>
            <param name="validationFailures">The validation result collection.</param>
            <param name="isTransactionResume">True if request is from resume transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateCustomerOrderFieldsOnSave(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Updates customer order related fields at the time of save cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be updated.</param>
            <param name="cart">The cart received on the request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateCustomerOrderFieldsOnCheckout(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Updates the customer order fields on checkout.
            </summary>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateOrderAndQuoteCreationAndUpdate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates a sales transaction for customer order creation and update.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateOrderForPickup(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the order for pick up.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateOrderForCancellation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the order for cancellation.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateOrderForReturn(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the order for return.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.FillMissingRequirementsForOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Fills missing requirements for the order.
            </summary>
            <param name="context">The context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.HandlePayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Handles payments for customer orders, it includes:
            * Capturing deposit.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <returns>Updated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.HandlePayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TokenizedPaymentCard)">
            <summary>
            Handles payments for customer orders, it includes:
            * Capturing deposit using the token passed for shipped items.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="tokenizedPaymentCard">The tokenized card used in the headquarters to fulfill the shipped portion of this order.</param>
            <returns>Updated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.SaveCustomerOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Saves a customer order using transaction service.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <returns>The sales order representing the saved customer order.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.GetSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Populates the sales transaction.
            </summary>
            <param name="context">The context.</param>
            <param name="cartId">The cart id.</param>
            <param name="email">The email.</param>
            <param name="cartVersion">The cart version.</param>
            <returns>Loaded transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.SaveTransactionAndConvertToCart(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Saves the order as a transaction and converts it to a cart.
            </summary>
            <param name="context">The context.</param>
            <param name="order">The sales order.</param>
            <returns>The converted cart.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.FillAddressInformation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Fills cart with address information that is not present on the request (cart).
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction being operated on.</param>
            <param name="cart">The cart on the request.</param>
            <param name="salesLineByLineId">A dictionary whose key is the sales line id and the value is the sales line.</param>
            <remarks>When we receive a cart request the Shipping address might be incomplete, so it needs to be fetched from the DB based on its record id.
            This method will compare the existing address on the transaction header / lines with the correspondent address on the cart header / lines. Only when
            the address is changed, added or remove that it will fetch the addresses from the DB.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.FillInReceiptId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.String)">
            <summary>
            Populate receipt identifier from transaction if the property is null or empty.
            Receipt id will be mandatory when doing payment by credit memo.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="receiptNumberSequence">The receipt number sequence.</param>
            <returns>SalesTransaction entity that has receipt identifier.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateLegacyDepositOverride(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Update the legacy deposit override.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartRequest">The cart request.</param>
            <param name="salesTransaction">The current sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.SetCouponsOnCustomerOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Set coupons on sales order, if discounts are present but coupons are not.
            </summary>
            <param name="context">The request context.</param>
            <param name="order">The sales order.</param>
            <remarks>This method is added for backward compatibility of discount codes.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidatePositiveQuantityUpdate(System.Decimal,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validate the quantity on a cart line is positive.
            </summary>
            <param name="newQuantity">The quantity to be validated.</param>
            <param name="validationFailures">The list of validation failures.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineUpdateForReturn(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validate updates on cart lines for return line.
            </summary>
            <param name="salesLineForUpdate">The original sales line.</param>
            <param name="cartLine">The cart line update.</param>
            <param name="validationFailures">The list of validation failures.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.RoundCurrencyAmount(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Decimal)">
            <summary>
            Rounding helper method for rounding currency amounts.
            </summary>
            <param name="context">The request context.</param>
            <param name="amount">The amount to be rounded.</param>
            <returns>The rounded amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateDeliveryDates(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Updates the delivery dates.
            </summary>
            <remarks>We set header's requested delivery date to all lines, that have empty delivery dates, then we set minimum delivery date to the header.
            Client set's delivery dates only on line-level, and here we need to take care of header's delivery date.</remarks>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateDepositOverride(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerOrderMode,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Updates the deposit override value in the transaction.
            </summary>
            <param name="cart">The cart from the request.</param>
            <param name="salesTransaction">The transaction being updated.</param>
            <param name="previousCustomerOrderMode">The previous customer order mode.</param>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.AreAllItemsInvoiced(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Determine if all items are invoiced on a transaction.
            </summary>
            <param name="transaction">Current transaction.</param>
            <returns>True if all items are invoiced on this transaction otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UnlockPricesOnExpiredQuote(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Unlock prices for a customer quote that is expired.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateShippingChargeCodes(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Updates shipping charges.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateAutoChargeRefundLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.ChargeLine,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.ChargeLine},System.String)">
            <summary>
            Updates shipping charges.
            </summary>
            <param name="chargeDetails">The shipping charge details line.</param>
            <param name="chargeLines">The charge line collection.</param>
            <param name="salesUnitOfMeasure">The sales line unit of measure.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateShippingChargeCodes(Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelConfiguration,Microsoft.Dynamics.Commerce.Runtime.DataModel.ChargeLine,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.ChargeLine},System.Nullable{System.Decimal}@,System.String,System.Boolean,System.String)">
            <summary>
            Updates shipping charges.
            </summary>
            <param name="channelConfiguration">The channel configuration.</param>
            <param name="shippingChargeDetails">The shipping charge details line.</param>
            <param name="chargeLines">The charge line collection.</param>
            <param name="deliveryChargeAmount">The delivery charge used.</param>
            <param name="deliveryMode">The delivery mode used.</param>
            <param name="isHeaderForPickup">A value indicating whether the sales transaction header delivery mode is set to pick up.</param>
            <param name="salesUnitOfMeasure">The sales line unit of measure.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateCancellationCharge(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Updates cancellation charges.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateChargeLines(System.Nullable{System.Decimal},System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ChargeLine,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.ChargeLine})">
            <summary>
            Updates charge lines with a specific charge.
            Creates a new charge line if charge does not exist on charge line collection, updates charge line if charge already exists on collection
            or remove charge from collection if amount is set to zero.
            </summary>
            <param name="chargeAmount">The charge amount.</param>
            <param name="currency">The currency used for the charge.</param>
            <param name="salesUnitOfMeasure">The sales line unit of measure.</param>
            <param name="chargeDetails">The shipping charge details line.</param>
            <param name="chargeLines">The charge line collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.UpdateLinesOnPickup(Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelConfiguration,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Update non-pickup sales lines to have quantity 0.
            </summary>
            <param name="channelConfiguration">The channel configuration.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateSalesPerson(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates sales person changes.
            </summary>
            <param name="context">The request context.</param>
            <param name="updatedCart">Proposed cart to be updated.</param>
            <param name="originalTransaction">The original transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartForCreationOrEdition(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates a customer order transaction for creation or edition.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart received on the request.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
            <param name="returnedSalesTransaction">The returned sales transaction to be validated.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateDepositOverride(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Nullable{System.Decimal},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates customer deposit override.
            </summary>
            <param name="context">The request context.</param>
            <param name="depositOverride">The deposit override to be validated. If the value is null, no deposit override is applied.</param>
            <param name="salesTransaction">The sales transaction as source of validation.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
            <returns>The data validation failure.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartForCustomerOrderReturn(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validate cart for customer order return.
            </summary>
            <param name="cart">The cart request.</param>
            <param name="salesTransaction">The existing sales transaction.</param>
            <param name="validationResults">The validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateQuoteForCartCreationOrEdition(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates quote for creation or edition.
            </summary>
            <param name="cart">The cart received on the request.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCustomerOrderModeOnCart(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Validates customer order mode on cart.
            </summary>
            <param name="cart">The cart received on the request.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartPermissions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerOrderMode)">
            <summary>
            Validate customer order permissions when updating the cart.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">Cart to be updated.</param>
            <param name="salesTransaction">Existing sales transaction.</param>
            <param name="customerOrderMode">The current customer order mode.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateDeliveryLinePermissions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Validate ship selected or pick up selected permissions on customer order.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">Existing sales transaction.</param>
            <param name="updatedCartLine">Cart line to be updated.</param>
            <param name="salesLine">Existing sales line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateDeliveryHeaderPermissions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validate ship all, pick up all, or carry out all permissions on customer order.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">Cart to be updated.</param>
            <param name="salesTransaction">Existing sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateQuoteExpirationDatePermissions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates permission on quote expiration date changes.
            </summary>
            <param name="context">The request context.</param>
            <param name="newCart">Cart to be updated.</param>
            <param name="salesTransaction">Existing sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartHeaderUpdate(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates updates on cart header.
            </summary>
            <param name="cart">The cart from the request.</param>
            <param name="salesTransaction">The sales transaction related to the request.</param>
            <param name="validationResults">The validation results.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartForCancellation(Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates a customer order transaction for pick up.
            </summary>
            <param name="cart">The cart received on the request.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartForShippingChargeRefund(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults,System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Validates a return or cancellation customer order transaction for shipping charge refund.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart received on the request.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
            <param name="salesLineByLineId">The dictionary of sales lines by line id.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartForPickup(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults)">
            <summary>
            Validates a customer order transaction for pick up.
            </summary>
            <param name="context">The request context.</param>
            <param name="cart">The cart received on the request.</param>
            <param name="salesTransaction">The sales transaction to be validated.</param>
            <param name="validationResults">The validation results to add validation errors to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateQuoteCreationOrEdition(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates quote creation or edition.
            </summary>
            <param name="salesTransaction">The sales transaction to be validated.</param>
            <param name="validationExceptions">The validation exception collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateOrderDelivery(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates order delivery information.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="validationExceptions">A collection of validation exceptions.</param>
            <remarks>InventLocationID is not validated for the header as it will be set as part of order creation workflow.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateOrderForCheckout(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure},System.Boolean)">
            <summary>
            Applies default validations required on checkout (order completion).
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction being checkout.</param>
            <param name="validationExceptions">The validation exception list.</param>
            <param name="skipAmountValidation">True if skip amount validation for checkout, false otherwise.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineDeliveryDate(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates delivery date for cart line.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartLine">The cart line to validate.</param>
            <param name="validationFailures">The validation exception list.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidatePickupCartLinesHavePickupDeliveryMode(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal,System.String,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validate that we don't have a non-pickup line with quantity greater than 0 on the pick up transaction.
            </summary>
            <param name="salesLine">The cart line.</param>
            <param name="quantity">Quantity to pickup.</param>
            <param name="pickupDeliveryMode">The code for 'pickup' delivery mode.</param>
            <param name="validationFailures">The validation result collection.</param>
            <returns>True if no validation errors found, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineFulfillmentStoreNumberForPickup(Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnit,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validate that line is set for pick up at store.
            </summary>
            <param name="currentStore">The current store.</param>
            <param name="salesLine">The cart line.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineQuantityForPickup(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether product quantity is less or equal than is left to be picked up.
            </summary>
            <param name="salesLineForUpdate">Cart line.</param>
            <param name="newQuantity">New quantity.</param>
            <param name="validationFailures">The validation result collection.</param>
            <returns>True if no validation errors found, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCartLineIsProduct(Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether cart line is a product.
            </summary>
            <param name="cartLine">Cart line.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateCustomerOrderModeForCartLineAdd(Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerOrderMode,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates whether customer order mode valid for adding a new cart line.
            </summary>
            <param name="cartCustomerOrderMode">Customer order mode of the cart.</param>
            <param name="validationFailures">The validation result collection.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateUnchangedProperty(Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceEntity,Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceEntity,System.String)">
            <summary>
            Validates if a property has not been changed.
            </summary>
            <param name="originalEntity">The entity before the possible change.</param>
            <param name="newEntity">The entity after the possible change.</param>
            <param name="columnName">The property's name.</param>
            <returns>The validation failure or null if no difference is found on the property.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateUnchangedProperty(Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceEntity,Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceEntity,Microsoft.Dynamics.Commerce.Runtime.CartLineValidationResults,System.String[])">
            <summary>
            Validates if a property has not been changed.
            </summary>
            <param name="originalEntity">The entity before the possible change.</param>
            <param name="newEntity">The entity after the possible change.</param>
            <param name="validationResults">The collection of validation results.</param>
            <param name="columnNames">The properties' name.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.ValidateUnchangedProperty(Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceEntity,Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceEntity,System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure},System.String[])">
            <summary>
            Validates if a property has not been changed.
            </summary>
            <param name="originalEntity">The entity before the possible change.</param>
            <param name="newEntity">The entity after the possible change.</param>
            <param name="validationFailures">The collection of validation failures.</param>
            <param name="columnNames">The properties' name.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.CustomerOrderWorkflowHelper.HasShippingAddressChanged(Microsoft.Dynamics.Commerce.Runtime.DataModel.Address,Microsoft.Dynamics.Commerce.Runtime.DataModel.Address)">
            <summary>
            Decides whether a shipping address has changed.
            </summary>
            <param name="newShippingAddress">The shipping address provided on the request (cart).</param>
            <param name="existingShippingAddress">The existing shipping address on the transaction.</param>
            <returns>Returns whether the transaction shipping address should be updated with the new shipping address.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailablePromotionsRequestHandler">
            <summary>
            Get available promotions for cart
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailablePromotionsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailablePromotionsRequest)">
            <summary>
            This method processes the GetAvailablePromotions workflow.
            </summary>
            <param name="request">Get available promotions request.</param>
            <returns>Get available promotions response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCardPaymentAcceptPointRequestHandler">
            <summary>
            Handles workflow for getting the accepting point of card payment.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCardPaymentAcceptPointRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetCardPaymentAcceptPointRequest)">
            <summary>
            Executes the workflow to get the accepting point of card payment.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetCardPaymentAcceptPointRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetCardPaymentAcceptPointResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCartRequestHandler">
            <summary>
            Gets the shopping cart specified by cart id and optionally calculates the totals on the cart.
            </summary>
            <remarks>Upon calculating the totals, the cart is saved to the database.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetCartRequest)">
            <summary>
            Gets the shopping cart specified by cart identifier and optionally calculates the totals on the cart.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetCartResponse"/> object containing the shopping cart or a new one if the flag to create is set and no cart was found.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeliveryOptionsRequestHandler">
            <summary>
            Handles workflow for GetDeliveryOptions.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeliveryOptionsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeliveryOptionsRequest)">
            <summary>
            Executes the workflow to fetch line level delivery options for given cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeliveryOptionsRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeliveryOptionsResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeliveryOptionsRequestHandler.ValidateRequest(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeliveryOptionsRequest)">
            <summary>
            Validates the request to get delivery options.
            </summary>
            <param name="request">The request.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.DataValidationException">
            The header level shipping address cannot be null if fetching delivery options for the entire order
            or
            Both the cart line identifier and the corresponding non-null shipping address must be specified when fetching delivery options per line.
            </exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeliveryOptionsRequestHandler.CalculateOrderDeliveryCharges(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeliveryOptionsRequest,Microsoft.Dynamics.Commerce.Runtime.Services.Messages.GetOrderDeliveryOptionsServiceResponse,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates order level charges applied to each delivery mode for given cart.
            </summary>
            <param name="request">The GetDeliveryOptions request.</param>
            <param name="serviceResponse">The reponse information containing delivery modes.</param>
            <param name="salesTransaction">The salesTransaction to modify and calculate charges for.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDeliveryOptionsRequestHandler.CalculateLineDeliveryCharges(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDeliveryOptionsRequest,Microsoft.Dynamics.Commerce.Runtime.Services.Messages.GetLineDeliveryOptionsServiceResponse,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates line level charges applied to each delivery mode for given cart.
            </summary>
            <param name="request">The GetDeliveryOptions request.</param>
            <param name="serviceResponse">The reponse information containing delivery modes.</param>
            <param name="salesTransaction">The salesTransaction to modify and calculate charges for.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDiscountCodesRequestHandler">
            <summary>
            Get discount codes request handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetDiscountCodesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetDiscountCodesRequest)">
            <summary>
            Gets the discount codes from pricing services.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetOrdersRequestHandler">
            <summary>
            Handles workflow for GetSalesOrders.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetOrdersRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetOrdersRequest)">
            <summary>
            Executes the workflow to fetch the sales orders.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetOrdersRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetOrdersResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetOrdersRequestHandler.ValidateSearchCriteria(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrderSearchCriteria,Microsoft.Dynamics.Commerce.Runtime.ICommercePrincipal)">
            <summary>
            Validates the search criteria.
            </summary>
            <param name="criteria">The sales order search criteria.</param>
            <param name="principal">The commerce principal.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetPriceValidationConfigurationRequestHandler">
            <summary>
            Get the price validation configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetPriceValidationConfigurationRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetPriceValidationConfigurationRequest)">
            <summary>
            Get the price validation configuration.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.PriceValidationConfigurationResponse"/> The price validation configuration response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetProductsInCartLinesRequestHandler">
            <summary>
            Handles workflow to get products in cart lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetProductsInCartLinesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductsInCartLinesRequest)">
            <summary>
            Executes the workflow to get products in cart lines.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductsInCartLinesRequest"/>.</param>
            <returns>The <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductsInCartLinesResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetPromotionsRequestHandler">
            <summary>
            Handles workflow for GetPromotionsForCart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetPromotionsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetPromotionsRequest)">
            <summary>
            Executes the workflow to fetch the promotions.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetPromotionsRequestHandler.GetQuantityPromotions(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int32,Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.QuantityDiscountLevel})">
            <summary>
            Updates the sales transaction with the quantity promotion if applicable.
            </summary>
            <param name="existingTransaction">Existing transaction.</param>
            <param name="tempSalesTransaction">Copy of existing transaction.</param>
            <param name="context">The request context.</param>
            <param name="salesLineIndex">The sales line under consideration.</param>
            <param name="discountLine">The quantity discount under consideration.</param>
            <param name="multiBuyDiscountLines">The multi buy discount lines.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetPromotionsRequestHandler.GetThresholdDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int32,System.Collections.ObjectModel.Collection{System.String},Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ThresholdDiscountTier})">
            <summary>
            Updates the sales transaction with the threshold promotion if applicable.
            </summary>
            <param name="existingTransaction">Existing transaction.</param>
            <param name="tempSalesTransaction">Copy of existing transaction.</param>
            <param name="context">The request context.</param>
            <param name="salesLineIndex">The sales line under consideration.</param>
            <param name="cartPromotionLines">The object with the cart promotion lines.</param>
            <param name="thresholdDiscount">The threshold discount line under consideration.</param>
            <param name="tiers">The tiers for the threshold discount.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler">
            <summary>
            The request handler for GetReceiptRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetReceiptRequest)">
            <summary>
            Processes the GetReceiptRequest to return the set of receipts. The request should not be null.
            </summary>
            <param name="request">The request parameter.</param>
            <returns>The GetReceiptResponse.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.SendReceiptMail(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Make the transaction service call to email the receipt.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetNonSaleTransaction(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleTransactionType,System.Int64,System.String,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Get the non sale tender transaction for receipt printing.
            </summary>
            <param name="transactionId">The transaction identifier.</param>
            <param name="tenderType">The non sale tender type.</param>
            <param name="shiftId">The identifier of the shift associated with the receipt.</param>
            <param name="shiftTerminalId">The identifier of the terminal that creates the shift.</param>
            <param name="requestContext">The request context.</param>
            <returns>The non sale tender transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetDropAndDeclareTransaction(System.String,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Get the drop and declare tender transaction.
            </summary>
            <param name="transactionId">The transaction identifier.</param>
            <param name="requestContext">The request context.</param>
            <returns>The drop and declare tender transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetTransactionBySalesId(System.String,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Returns Sales Order by sales id and terminal id. Used to get remote orders from AX which does not have transaction id.
            </summary>
            <param name="salesId">The sales id parameter.</param>
            <param name="requestContext">The request context.</param>
            <returns>The  SalesOrder.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetTransactionByTransactionId(System.String,System.Boolean,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Returns Sales Order by transaction id and terminal id. Used to get local orders.
            </summary>
            <param name="transactionId">The transaction id parameter.</param>
            <param name="isRemoteTransaction">Client sends if this is local or remote transaction.</param>
            <param name="requestContext">The Request context.</param>
            <returns>The SalesOrder.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetCustomReceipts(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReceiptRetrievalCriteria,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Get the custom types of receipts.
            </summary>
            <remarks>
            In <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.ReceiptType"/> enumeration type we reserved 20 types for users to do customization. This
            method is called if we need to print any of these 20 types of receipts. The partner should implement
            logic to handle <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetCustomReceiptsRequest"/> to return the value of these receipts.
            </remarks>
            <param name="transactionId">The transaction identifier of the receipt.</param>
            <param name="criteria">The receipt retrieval criteria.</param>
            <param name="requestContext">The request context.</param>
            <returns>The custom receipts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetSalesOrderForPackingSlip(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineParameter},Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the sales order entity by the packing lines.
            </summary>
            <param name="packingLines">The lines to pack.</param>
            <param name="requestContext">The request context.</param>
            <returns>A <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder"/> object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetSalesOrderForPackingSlip(System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the sales order entity by the packing lines.
            </summary>
            <param name="salesId">The Sales Id.</param>
            <param name="packingSlipId">The Packing Slip Id.</param>
            <param name="requestContext">The request context</param>
            <returns>A <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder"/> object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.SetPackingQuantity(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineParameter})">
            <summary>
            Sets the quantity to pack for each lines.
            </summary>
            <param name="salesOrder">The sales order whose lines are going to be packed.</param>
            <param name="packingLines">The lines to be packed.</param>
            <returns>A <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder"/> object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetLineIdQuantityDictionary(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineParameter})">
            <summary>
            Gets a dictionary where the key is the sales line number and the value is the quantity to pack.
            </summary>
            <param name="packingLines">The lines to pack.</param>
            <returns>A dictionary.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetSalesOrderForPickingList(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineParameter},Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the mixed sales order to print picking list.
            </summary>
            <param name="fulfillmentLines">The lines to print picking list for.</param>
            <param name="requestContext">The request context.</param>
            <returns>The sales order object having the mixed sales lines.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetSalesOrdersForPickingList(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineParameter},Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets a sales order for each unique sales identifier in the fulfillment lines.
            </summary>
            <param name="fulfillmentLines">The fulfillment lines.</param>
            <param name="requestContext">The request context.</param>
            <returns>A collection of sales order.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.GetSalesIdLineNumberDictionary(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineParameter})">
            <summary>
            Groups the sales line number by the sales identifier and returns a dictionary.
            </summary>
            <param name="fulfillmentLines">The fulfillment lines.</param>
            <returns>A dictionary where the key is the sales identifier and the value is a set of sales line number.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetReceiptRequestHandler.AggregateSalesLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Aggregate sales lines for printing if the configuration is enabled in AX.
            </summary>
            <param name="salesOrder">The order to print.</param>
            <param name="requestContext">The request context to execute.</param>
            <returns>The order containing the aggregated sales lines.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetScanResultRequestHandler">
            <summary>
            Workflow that retrieves information based on scan input.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetScanResultRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetScanResultRequest)">
            <summary>
            Executes the workflow to get scan result.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetScanResultRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetScanResultResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetSupportedCardTypesRequestHandler">
            <summary>
            Retrieves list of supported credit cards associated with the channel.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetSupportedCardTypesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetSupportedCardTypesRequest)">
            <summary>
            Executes the workflow for a GetSupportedCardTypes request.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetXAndZReportReceiptRequestHandler">
            <summary>
            The request handler for GetXAndZReportReceiptRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetXAndZReportReceiptRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetXAndZReportReceiptRequest)">
            <summary>
            Processes the GetXZReportReceiptRequest to return the X or Z report receipts. The request should not be null.
            </summary>
            <param name="request">The request parameter.</param>
            <returns>The GetReceiptResponse.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper">
            <summary>
            Helper class for gift card operations.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.VoidAllGiftCardSalesLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Voids active gift card lines on the transaction.
            </summary>
            <param name="context">The context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.UnlockGiftCardsOnActiveSalesLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Unlocks the gift cards that are on active sales lines.
            </summary>
            <param name="context">The context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.VoidGiftCardOperationOnSalesLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.String)">
            <summary>
            Voids the gift card operation on a provided sales line.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLine">The target gift card sales line.</param>
            <param name="transactionId">The transaction identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.GetInternalGiftCardItemNumber(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Retrieves the gift card item number for the internal gift card.
            </summary>
            <param name="context">The request context.</param>
            <param name="tenderTypeId">The tender type identifier.</param>
            <returns>The string representation of the gift card item number.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.GetGiftCardItemByTenderTypeId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Retrieves the gift card item number associated to a provided tender type identifier for the current channel.
            If no tender type id is provided, it finds the first gift card tender type. (This is for backwards compatibility.)
            </summary>
            <param name="context">The request context.</param>
            <param name="tenderTypeId">The tender type identifier.</param>
            <returns>The gift card item number.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.VoidIssuedGiftCardOperation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String)">
            <summary>
            Voids the issued gift card.
            </summary>
            <param name="requestContext">Request context.</param>
            <param name="giftCardId">The identifier of the gift card to void.</param>
            <param name="transactionId">The transaction identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.VoidAddToGiftCardOperation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String,System.String,System.Decimal)">
            <summary>
            Voids the "add to gift card" operation.
            </summary>
            <param name="requestContext">Request context.</param>
            <param name="transactionId">The transaction identifier.</param>
            <param name="giftCardId">The identifier of the gift card to void.</param>
            <param name="giftCardCurrencyCode">Gift card's currency code.</param>
            <param name="amountAdded">The amount added to gift card.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GiftCardWorkflowHelper.UnlockGiftCard(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String)">
            <summary>
            Unlocks the gift card.
            </summary>
            <param name="context">Request context.</param>
            <param name="giftCardId">Gift card identifier.</param>
            <param name="transactionId">The transaction identifier.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.IssueOrAddToGiftCardRequestHandler">
            <summary>
            Handles workflow to issue or add balance to gift card.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.IssueOrAddToGiftCardRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.IssueOrAddToGiftCardRequest)">
            <summary>
            Executes the workflow to issue or add balance to gift card.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.IssueOrAddToGiftCardRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.IssueOrAddToGiftCardResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper">
            <summary>
            Helper class for item availability related workflows.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.SetSalesLineInventory(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Sets the sales line inventory for each sales line.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.IsPickupOrReturn(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelConfiguration)">
            <summary>
            Verifies if the sales line is a pickup or a return.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="channelConfiguration">The channel configuration.</param>
            <returns><c>True</c> if the sales line is a pickup or a return, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.NeedInventoryChecking(Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelConfiguration,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Needs the inventory checking.
            </summary>
            <param name="channelConfiguration">The channel configuration.</param>
            <param name="transaction">The transaction.</param>
            <returns><c>True</c> if the inventory checking is required, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.IsPickup(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelConfiguration)">
            <summary>
            Verifies if the sales line is a pickup.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="channelConfiguration">The channel configuration.</param>
            <returns><c>True</c> if the sales line is a pickup, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.IsPickup(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelConfiguration)">
            <summary>
            Verifies if the delivery mode is a pickup.
            </summary>
            <param name="deliveryMode">The delivery mode.</param>
            <param name="channelConfiguration">The channel configuration.</param>
            <returns><c>True</c> if the delivery mode is a pickup, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.SetSalesLineInventoryFulfillmentLocationForShipping(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.Dictionary{System.String,System.Decimal})">
            <summary>
            Sets the Inventory Fulfillment Location for each sales line based on which locations have available inventory.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">The transaction information.</param>
            <param name="salesLines">The sales lines from the shipping order.</param>
            <param name="salesLineInventoryQuantities">Dictionary with key: sales line id, value: quantity of inventory on line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.SetSalesLineInventoryFulfillmentLocationDefault(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Sets the fulfillment location for each Sales Line to their channels default Location.
            This method is used because clients may often run their own distribution logic, so we can skip SetSalesLineInventoryFulfillmentLocationFor______ for performance.
            </summary>
            <param name="context">The Request Context.</param>
            <param name="salesLines">The Sales Lines that will have their inventlocation changed.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ItemAvailabilityHelper.SetSalesLinesToLocationWithMostAvailableInventory(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemAvailability},System.Collections.Generic.Dictionary{System.String,System.Decimal})">
            <summary>
            Sets the Sales Line to an Inventory Location Id of the fulfillment location with the most available inventory of the line's item.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesLines">The sales lines.</param>
            <param name="itemAvailabilities">The availabilities of each item in the sales lines in each fulfillment location.</param>
            <param name="salesLineInventoryQuantities">The quantities of each of the sales lines.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper">
            <summary>
            Helper for orders related workflows.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.CreateSalesOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Creates a sales order with the provided payment properties.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <returns>The sales order created.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ValidateContextForCreateOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the request context for sales order creation.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.DataValidationException">If order is not valid.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.CalculateAndValidateAmountPaidForCheckout(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculate due and paid amounts, validate they fulfill checkout requirements.
            </summary>
            <param name="context">Request context.</param>
            <param name="salesTransaction">Sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ProcessPendingOrderPayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine})">
            <summary>
            Handle payments for the order.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="cartTenderLines">The tender lines containing authorization request.</param>
            <returns>The tender line created after processing payment.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ProcessPendingOrderPayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.PendingOrderPaymentProcessingResult@)">
            <summary>
            Handle payments for the order.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="cartTenderLines">The tender lines containing authorization request.</param>
            <param name="processingResult">The result of the payment processing.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.CancelPayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine})">
            <summary>
            Cancels the card authorized payments.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="tenderLines">The tender lines containing authorization responses.</param>
            <param name="cartTenderLines">The cart tender lines containing authorization.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.VoidCardAuthorization(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Cancels the authorized payments for only authorized card type.
            </summary>
            <param name="context">The request context.</param>
            <param name="tenderLine">The tender lines containing authorization responses.</param>
            <param name="transaction">Transaction that line belongs to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.RefundPayment(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine)">
            <summary>
            Refunds payment for captured card type.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="refundTenderLine">The tender lines containing authorization responses.</param>
            <returns>The Tender line created after processing payment for return.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.FillMissingRequirementsForOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Fills the missing requirements for order creation.
            In this case, defaults the CustomerId to the Default Customer set on the channel if none specified.
            Creates an empty shipping address on null address at the order level.
            Populate inventory location based on the store number.
            Populate the channel reference identifier if none is specified for a pending sales order.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be updated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.FillTransactionWithContextData(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Fill sales transaction with data from request context.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">The sales transaction object.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.FillInReceiptId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.String)">
            <summary>
            Fills in the receipt identifier into the request context.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="receiptNumberSequence">The receipt number sequence.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.FillVariantInformation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Sets the variant information on the sales lines.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The transaction to update.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetPaymentsSum(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase})">
            <summary>
            Gets the payments sum.
            </summary>
            <param name="tenderLines">The tender lines.</param>
            <returns>The total payment made across all the tender lines.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetChangeTenderLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Updates/adds tender lines such that the payments total becomes equal to order total.
            </summary>
            <param name="context">The context.</param>
            <param name="salesTransaction">Sales transaction.</param>
            <returns>Change tender line; null if change amount is zero.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ProcessCheckoutPayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Process payments for sales transaction checkout.
            </summary>
            <param name="context">The context.</param>
            <param name="salesTransaction">Sales transaction.</param>
            <returns>Updated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.CapturePayments(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine)">
            <summary>
            Captures the payments and save sales transaction.
            </summary>
            <param name="context">The context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="tenderLines">The tender lines that represents payments.</param>
            <param name="changeBackTenderLine">The tender line that represents change back.</param>
            <returns>Returns the sales transaction updated after captures.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.SettleInvoiceSalesLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Settle any invoice sales lines.
            </summary>
            <param name="requestContext">Request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetSalesInvoiceByInvoiceId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Gets the order invoice associated with the given invoice identifier.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="invoiceId">The invoice identifier.</param>
            <returns>The order invoice.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetInvoicesByInvoiceIds(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the invoices associated with the given invoice identifier.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="invoiceIds">The invoice identifier.</param>
            <returns>The order invoices.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetSalesOrderByInvoiceId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Gets the sales order associated with the given invoice identifier.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="invoiceId">The invoice identifier.</param>
            <returns>The sales order.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetInventoryLocationId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnit,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerOrderMode)">
            <summary>
            Gets the inventory location id for a specific store based on delivery mode.
            </summary>
            <param name="context">The request context.</param>
            <param name="store">The store related to the location.</param>
            <param name="deliveryMode">Delivery mode used.</param>
            <param name="orderMode">Customer order's mode.</param>
            <returns>The warehouse id (invent location id) for the store based on the delivery mode.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.IsFulfillmentStoreIdUpateRequired(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnit,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerOrderMode)">
            <summary>
            Checks whether FulfillmentStoreId must be updated on sales line for given delivery mode and store.
            </summary>
            <param name="context">The request context.</param>
            <param name="store">The original fulfillment store.</param>
            <param name="deliveryMode">Delivery mode used.</param>
            <param name="orderMode">Customer order's mode.</param>
            <returns>True if FulfillmentStoreId must be updated on sales line, else False.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ShouldUseDefaultStoreWarehouse(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerOrderMode)">
            <summary>
            Checks whether we should use default store warehouse instead of shipping warehouse
            </summary>
            <param name="context">The request context.</param>
            <param name="deliveryMode">Delivery mode used.</param>
            <param name="orderMode">Customer order's mode.</param>
            <returns>True if for given params default warehouse should be used, else False.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GetFulfillmentStoreIdByShippingInventLocationId(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnit)">
            <summary>
            Gets OrgUnitNumber for retail store where sales line will be fulfilled
            </summary>
            <param name="context">The request context.</param>
            <param name="store">The original fulfillment store.</param>
            <returns>OrgUnitNumber for retail store where sales line will be fulfilled or empty string if retail store not found</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.FillDeliveryStoreInformation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Fills transaction with store information for pickup and shipping lines.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ValidateSalesLinesForCreateOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the sales line collection for sales order creation.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The collection of sales lines.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.GenerateCardTokenAndGetAuthorization(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine)">
            <summary>
            Generates token and gets authorization.
            </summary>
            <param name="context">The request context.</param>
            <param name="cartTenderLine">The authorization cart tender line.</param>
            <returns>The tender line created after processing payment.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.AuthorizeAndCapturePayment(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine,System.Boolean)">
            <summary>
            Authorizes and captures the payment.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="cartTenderLine">The authorization tender line.</param>
            <param name="skipLimitValidation">If set to 'true' limits validation (over tender, under tender etc.) will be skipped.</param>
            <returns>The tender line created after payment processing.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.AuthorizePayment(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,System.Boolean)">
            <summary>
            Authorizes the payment.
            </summary>
            <param name="context">Request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="tenderLine">Tender line to authorize.</param>
            <param name="skipLimitValidation">If set to 'true' limits validation (over-tender, under-tender etc.) will be skipped.</param>
            <returns>Tender line that represents authorized payment.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.CapturePayment(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Captures the payment.
            </summary>
            <param name="context">Request context.</param>
            <param name="tenderLine">Tender line to capture.</param>
            <param name="transaction">Current transaction.</param>
            <returns>Tender line that represents captured payment.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.IsOriginalStaffIdUpdateRequired(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Checks transaction properties to determine if StaffId has to be set to an Id of a user
            performing action.
            </summary>
            <param name="transaction">The sales transaction object.</param>
            <returns>
            Returns <c>true</c> if StaffId must be set to the Id of a user performing operation;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.ClearZeroAmountCashPayment(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            If the active tenderlines contains only a zero amount cash/currency payment, remove it.
            Note, for normal sales transactions, ActiveTenderLines is identical to TenderLines;
                  but for recall orders, ActiveTenderLines is set of payments after recall.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">The sales transaction object.</param>
            <returns>Updated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OrderWorkflowHelper.IsCashPayment(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailOperation)">
            <summary>
            Gets a value indicating whether the payment type is cash payment (including different currency)
            </summary>
            <param name="retailOperation">The Retail operation Identifier</param>
            <returns>The result value.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.OverrideCartLineChargeRequestHandler">
            <summary>
            Handles workflow for overriding line level charge lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OverrideCartLineChargeRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.OverrideCartLineChargeRequest)">
            <summary>
            Handles workflow for overriding line level charge lines.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.OverrideCartLineChargeRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartResponse"/> with the updated cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.OverrideChargeRequestHandler">
            <summary>
            Handles workflow for overriding the amount of a charge in the cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OverrideChargeRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.OverrideChargeRequest)">
            <summary>
            Executes the workflow to override the amount of a charge in the cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.OverrideChargeRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartResponse"/> with the updated cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.PickAndPackOrderRequestHandler">
            <summary>
            Workflow for picking list and packing slip creation.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.PickAndPackOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.PickAndPackOrderRequest)">
            <summary>
            Process the request.
            </summary>
            <param name="request">The request object.</param>
            <returns>The response object.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.PickupAtStoreRequestHandler">
            <summary>
            Pick up at store request handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.PickupAtStoreRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.PickupAtStoreRequest)">
            <summary>
            Process the request.
            </summary>
            <param name="request">The request object.</param>
            <returns>The response object.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ProcessCartWarrantiesRequestHandler">
            <summary>
            Handles request to process warranties in the cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ProcessCartWarrantiesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ProcessCartWarrantiesRequest)">
            <summary>
            Process warranties in the cart.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ProcessCartWarrantiesRequest"/>.</param>
            <returns>The <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ProcessCartWarrantiesResponse"/>.</returns>
            <remarks>
            This method does the following:
            * Validate whether the fields of the warranty cart line are valid.
            * Validate the association of a warranty and a warrantable product is valid.
            * Validate the warranty's applicability based on the price.
            * Validate whether there are duplicated warranty association.
            * Set warranty related fields.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper">
            <summary>
            Helper class for reason codes work flows.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.AddOrUpdateReasonCodeLinesOnTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Cart)">
            <summary>
            Adds or updates reason code lines for cart level reason code lines.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="cart">The cart to update or add.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.AddOrUpdateReasonCodeLinesOnSalesLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine,System.String)">
            <summary>
            Adds the or update reason code lines for cart line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="salesLine">The sales line.</param>
            <param name="cartLine">The cart line.</param>
            <param name="transactionId">The transaction id.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.AddOrUpdateReasonCodeLinesOnTenderLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase,System.String)">
            <summary>
            Adds the or update reason code lines.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="tenderLine">The tender line.</param>
            <param name="cartTenderLine">The cart tender line.</param>
            <param name="transactionId">The transaction id.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.AddOrUpdateReasonCodeLinesOnAffiliationLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesAffiliationLoyaltyTier,Microsoft.Dynamics.Commerce.Runtime.DataModel.AffiliationLoyaltyTier,System.String)">
            <summary>
            Adds or updates the reason code lines for affiliation line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="salesAffiliationLoyaltyTier">The sales affiliation line.</param>
            <param name="affiliationLoyaltyTier">The cart affiliation line.</param>
            <param name="transactionId">The transaction id.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodes(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Services.Messages.CalculateCartRequiredReasonCodesServiceRequest)">
            <summary>
            Calculates the required reason codes.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="serviceRequest">The service request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodes(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeSourceType)">
            <summary>
            Calculates the required reason codes for the entire transaction.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="sourceType">Type of the source.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodesOnTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeSourceType)">
            <summary>
            Calculates the required reason codes on the current sales transaction level.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="sourceType">Type of the source.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodesOnSalesLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeSourceType)">
            <summary>
            Calculates the required reason codes on sales line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="salesLine">The sales line.</param>
            <param name="sourceType">Type of the source.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodesOnTenderLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeSourceType)">
            <summary>
            Calculates the required reason codes on tender line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="tenderLine">The tender line.</param>
            <param name="sourceType">Type of the source.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodesOnAffiliationLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesAffiliationLoyaltyTier},Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeSourceType)">
            <summary>
            Calculates the required reason codes on affiliation line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="salesAffiliationLoyaltyTiers">The sales affiliation lines.</param>
            <param name="sourceType">Type of the source.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodesOnIncomeExpenseLine(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.IncomeExpenseLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeSourceType)">
            <summary>
            Calculates the required reason codes on an income expense line.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="transaction">Current transaction.</param>
            <param name="incomeExpenseLine">The income expense line.</param>
            <param name="sourceType">Type of the source.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.ValidateRequiredReasonCodeLinesFilled(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the required reason code lines filled.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.ConfigurationException">Required Service missing.</exception>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.DataValidationException">One or more reason codes required for the transaction are missing.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.AddOrUpdateReasonCodeLinesHelper(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeLine},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeLine},System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeLineType)">
            <summary>
            Adds or updates reason code lines.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="reasonCodeLinesToUpdate">The reason code lines to update.</param>
            <param name="reasonCodeLines">The reason code lines.</param>
            <param name="transactionId">The transaction id.</param>
            <param name="parentLineId">The parent line id.</param>
            <param name="reasonCodeLineType">The reason code line type.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.ValidateForDuplicatedReasonCodeId(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeLine})">
            <summary>
            Validate wether the list of reason code lines has duplicated reason code Id.
            </summary>
            <param name="reasonCodeLines">The list of reason codes line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.TryFindReasonCode(System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.ReasonCodeLine},System.String)">
            <summary>
            Check whether the reason code line is present on the collection, and return the first one if it is found, otherwise return null.
            </summary>
            <param name="reasonCodeLines">The reson code line collection to check against.</param>
            <param name="reasonCodeId">The reason code identifier.</param>
            <returns>The reason code line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.CalculateRequiredReasonCodesHelper(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Services.Messages.CalculateRequiredReasonCodesServiceRequest)">
            <summary>
            Helper methods to calculates the required reason codes.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="serviceRequest">The service request.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.ConfigurationException">Required Service missing: {0}.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReasonCodesWorkflowHelper.ThrowIfRequiredReasonCodesMissing(Microsoft.Dynamics.Commerce.Runtime.Services.Messages.CalculateRequiredReasonCodesServiceResponse)">
            <summary>
            Throws exception if any requires reason code are missing.
            </summary>
            <param name="serviceResponse">The service response.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecalculateOrderRequestHandler">
            <summary>
            Handles workflow for order recalculation.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecalculateOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.RecalculateOrderRequest)">
            <summary>
            Executes the workflow to recalculate a sales transaction and return a cart representing the transaction.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.RecalculateOrderRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.RecalculateOrderResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecallCustomerOrderRequestHandler">
            <summary>
            Handles workflow for recall customer order into a cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecallCustomerOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.RecallCustomerOrderRequest)">
            <summary>
            Executes the workflow to fetch the sales order and convert into a cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.RecallCustomerOrderRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.RecallCustomerOrderResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecallSalesInvoiceRequestHandler">
            <summary>
            Handles workflow for recall customer order into a cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecallSalesInvoiceRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.RecallSalesInvoiceRequest)">
            <summary>
            Executes the workflow to fetch the invoice and convert to a cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.RecallSalesInvoiceRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.RecallSalesInvoiceResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.RecallSalesInvoiceRequestHandler.UpdateRefundableTenderLines(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine})">
            <summary>
            Update the sales order's refundable tender lines with the tender lines.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesOrder">The sales order.</param>
            <param name="currentTenderLines">The current payment tran list.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeCartRequestHandler">
            <summary>
            Handles workflow to resume suspended cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ResumeCartRequest)">
            <summary>
            Executes the workflow to resume suspended cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ResumeCartRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ResumeCartResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeCartRequestHandler.UpdateSalesLineDate(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Update sales date in sales lines.
            </summary>
            <param name="transaction">The sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeCartRequestHandler.IsLegacyOrderResumeMethodEnabled(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Returns true when the the customer decide to keep old resume behaviour.
            Cashier cannot recall a suspended cart when price overriden (414752).
            </summary>
            <param name="context">The request context.</param>
            <returns>True when customer opts for legacy behavior.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler">
            <summary>
            Saves a cart line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.CreateLineDeliverySpecifications(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Creates a collection of line delivery specifications based on the existing transaction and any changed fields from the PATCH request.
            </summary>
            <param name="cartLines">The cart lines coming from the client with new values.</param>
            <param name="transaction">The existing transaction that is being updated.</param>
            <param name="context">The request context.</param>
            <returns>An enumerable of <c>LineDeliverySpecification</c> objects.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest)">
            <summary>
            Saves the cart lines based on the request operation type.
            </summary>
            <param name="request">The request.</param>
            <returns>The save cart line response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.RecalculateSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Recalculates the sales transaction.
            </summary>
            <param name="context">The context.</param>
            <param name="request">The request.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.ProcessCreateCartLinesRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IDictionary{System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.SimpleProduct})">
            <summary>
            Processes the create cart lines request.
            </summary>
            <param name="context">The context.</param>
            <param name="request">The request.</param>
            <param name="transaction">Current transaction.</param>
            <param name="returnTransaction">Return transaction.</param>
            <param name="productByRecordId">The mapping of products by record identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.ProcessUpdateCartLinesRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Processes the update cart lines request.
            </summary>
            <param name="context">The context.</param>
            <param name="request">The request.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.ProcessDeleteCartLinesRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Processes the delete cart lines request.
            </summary>
            <param name="context">The context.</param>
            <param name="request">The request.</param>
            <param name="transaction">Current transaction.</param>
            <remarks>Used in eCommerce only, as POS uses Void Cart Lines operation only.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.ProcessVoidCartLinesRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Processes the void cart lines request.
            </summary>
            <param name="context">The context.</param>
            <param name="request">The request.</param>
            <param name="salesTransaction">Sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartLinesRequestHandler.CreateCartFromRequest(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest)">
            <summary>
            Creates a cart  given the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartLinesRequest"/>.
            </summary>
            <param name="request">The request.</param>
            <returns>The cart.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartRequestHandler">
            <summary>
            Saves a shopping cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartRequest)">
            <summary>
            Saves (updating if it exists and creating a new one if it does not) the shopping cart on the request.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCartResponse"/> object containing the cart with updated item quantities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCartRequestHandler.GetDefaultCartType(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Get the default CartType for new transactions.
            </summary>
            <param name="context">The request context.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.CartType"/>Shopping cart type unless configuration overrides to another type such as CustomerOrder.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCustomerOrderRequestHandler">
            <summary>
            Handler for the submit order request.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveCustomerOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveCustomerOrderRequest)">
            <summary>
            Creates a sales order given the cart and payment information.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveReasonCodeLineRequestHandler">
            <summary>
            Adds or updates a reason code line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveReasonCodeLineRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveReasonCodeLineRequest)">
            <summary>
            Processes the save reason code line workflow.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler">
            <summary>
            Adds/Removes/Updates the tender line from the cart.
            </summary>
            <remarks>Upon adding/deleting/updating the tender line, the cart is saved to the database.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveTenderLineRequest)">
            <summary>
            This method processes the AddTenderLine workflow.
            </summary>
            <param name="request">The Add tender line request.</param>
            <returns>The Add tender line response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler.IsValidReturn(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveTenderLineRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLineBase)">
            <summary>
            Processes return after validating with return policy.
            </summary>
            <param name="request">Request.</param>
            <param name="tenderLineToProcess">Current tender line.</param>
            <returns>True if a return option exists in return policy and is valid.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler.ValidateTenderTypeAndAmount(Microsoft.Dynamics.Commerce.Runtime.PagedResult{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderTypeAmount},System.String,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Validate that return amount for the tender type is allowed.
            </summary>
            <param name="returnOptions">Possible tender type and amount pairings.</param>
            <param name="tenderTypeId">Current tender type.</param>
            <param name="amount">Amount on tender line.</param>
            <param name="context">Request context.</param>
            <returns>True if there is a valid return TenderType and the amount on TenderLine does not exceed the amount allowed by return policy.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler.ConvertTenderLineCurrencyToChannelCurrency(System.String,System.String,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            If tender line currency is different, amount is converted to channel currency.
            </summary>
            <param name="tenderLineCurrency">Currency on tender line.</param>
            <param name="channelCurrency">Currency in channel.</param>
            <param name="tenderLineAmount">Amount in tender line currency.</param>
            <param name="context">Request context.</param>
            <returns>Converted amount in channel currency.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler.IsReturnTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Checks if current tender line is for a return.
            </summary>
            <param name="salesTransaction">Current SalesTransaction.</param>
            <returns>True if it's a return and the amount due is less than 0.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveTenderLineRequestHandler.GetReturnOptions(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Retrieves possible return options containing tender type and amount.
            </summary>
            <param name="cartId">Cart id.</param>
            <param name="settings">Query settings.</param>
            <param name="context">Request context.</param>
            <returns>Possible TenderType and Amount pairings.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveVoidTransactionRequestHandler">
            <summary>
            Handler for the submit sales transaction request.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveVoidTransactionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SaveVoidTransactionRequest)">
            <summary>
            Creates a sales transaction given the cart.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SaveVoidTransactionRequestHandler.IsPaymentLocallyVoidable(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine)">
            <summary>
            Checks whether a payment can be force voided based on the type of the transaction and the payment.
            </summary>
            <param name="transaction">The sales transaction.</param>
            <param name="tenderline">The tender line.</param>
            <returns><c>True</c> if the payment can be voided locally; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendReceiptRequestHandler">
            <summary>
            The request handler for SendReceiptRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendReceiptRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SendReceiptRequest)">
            <summary>
            Processes the SendReceiptRequest to send the the receipt. The request should not be null.
            </summary>
            <param name="request">The request parameter.</param>
            <returns>The Response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendReceiptRequestHandler.SendReceiptEmail(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.DataModel.ReceiptType,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Make the transaction service call to email the receipt.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <param name="receiptType">The receipt type.</param>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendReceiptRequestHandler.GetSalesOrderByTransactionId(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SearchLocation,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Returns Sales Order by transaction identifier.
            </summary>
            <param name="transactionId">The transaction identifier parameter.</param>
            <param name="searchLocationType">The search location type.</param>
            <param name="requestContext">The request context.</param>
            <returns>The retrieved sales order.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SendReceiptRequestHandler.AggregateSalesLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Aggregate sales lines for receipt if the configuration is enabled in AX.
            </summary>
            <param name="salesOrder">The order for which receipt needs to be send.</param>
            <param name="requestContext">The request context.</param>
            <returns>The order containing the aggregated sales lines.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SortSalesLinesRequestHandler">
            <summary>
            Handles request to sort sales lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SortSalesLinesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SortSalesLinesRequest)">
            <summary>
            Sort sales lines.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SortSalesLinesRequest"/>.</param>
            <returns>The <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SortSalesLinesResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitOrderRequestHandler">
            <summary>
            Handler for the submit order request.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitOrderRequestHandler.SubmitOrderOperationType">
            <summary>
            Operation types inside submit order workflow. Used for logging.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.CreateOrderFromCartRequest)">
            <summary>
            Creates a sales order given the cart and payment information.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitOrderRequestHandler.PopulateSalesTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction@,System.Nullable{System.Int64})">
            <summary>
            Populates the sales transaction.
            </summary>
            <param name="context">The context.</param>
            <param name="cartId">The cart id.</param>
            <param name="email">The email.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="cartVersion">The cart version.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitOrderRequestHandler.ExecutionHandler(System.Action,System.String)">
            <summary>
            Executions the handler.
            </summary>
            <param name="action">The action.</param>
            <param name="operationType">Type of the operation.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitSalesTransactionRequestHandler">
            <summary>
            Handler for the submit sales transaction request.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SubmitSalesTransactionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SubmitSalesTransactionRequest)">
            <summary>
            Creates a sales transaction given the cart.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SuspendCartRequestHandler">
            <summary>
            Handles workflow to suspend cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SuspendCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.SuspendCartRequest)">
            <summary>
            Executes the workflow to suspend cart.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SuspendCartRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.SuspendCartResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SuspendCartRequestHandler.FillTransactionStoreIdAndShiftIdWithContextData(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Fill sales transaction store id and shift id with context data.
            </summary>
            <param name="context">Context.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.TransferCartRequestHandler">
            <summary>
            Saves a shopping cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.TransferCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.TransferCartRequest)">
            <summary>
            Transfer the shopping cart on the request.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.NullResponse"/> object containing nothing.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnifyDeliveryInformationRequestHandler">
            <summary>
            Request handler for the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.Messages.UnifyDeliveryInformationServiceRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnifyDeliveryInformationRequestHandler.CreateLineDeliverySpecifications(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.CartLine},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Creates a collection of line delivery specifications based on the existing transaction and any changed fields from the PATCH request.
            </summary>
            <param name="cartLines">The cart lines coming from the client with new values.</param>
            <param name="transaction">The existing transaction that is being updated.</param>
            <param name="context">The request context.</param>
            <returns>An enumerable of <c>LineDeliverySpecification</c> objects.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnifyDeliveryInformationRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Services.Messages.UnifyDeliveryInformationServiceRequest)">
            <summary>
            Executes the request.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.Messages.UnifyDeliveryInformationServiceRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.UnifyDeliveryInformationServiceResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateCommissionSalesGroupHandler">
            <summary>
            Handles workflow for updating the sales rep on the cart or the cart line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateCommissionSalesGroupHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UpdateCommissionSalesGroupRequest)">
            <summary>
            Update a commission sales group.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateCommissionSalesGroupHandler.SetLinesCommissionSalesGroup(System.Collections.Generic.ICollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.String)">
            <summary>
            Sets the commission sales group on the lines if not already set.
            </summary>
            <param name="salesLines">The sales lines to set the commission sales group.</param>
            <param name="commissionSalesGroup">The commission sales group.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UploadOrderRequestHandler">
            <summary>
            Handles workflow for UploadOrder.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UploadOrderRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UploadOrderRequest)">
            <summary>
            Upload an offline sales order.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ValidateCartForCheckoutRequestHandler">
            <summary>
            Validates cart for checkout.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ValidateCartForCheckoutRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateCartForCheckoutRequest)">
            <summary>
            Validates cart for checkout.
            </summary>
            <param name="request">The request.</param>
            <returns><see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.NullResponse"/> The null response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.Orders.ValidateCartRequestHandler">
            <summary>
            Validate cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Orders.ValidateCartRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.Orders.ValidateCartRequest)">
            <summary>
            This method processes the validation cart workflow.
            </summary>
            <param name="request">The validate cart request.</param>
            <returns>The validate cart response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.Orders.ValidateSalesLinesQuantityLimitsRequestHandler">
            <summary>
            Validate cart lines quantity limits.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Orders.ValidateSalesLinesQuantityLimitsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.Orders.ValidateSalesLinesQuantityLimitsRequest)">
            <summary>
            This method processes the ValidateSalesLinesQuantityLimits workflow.
            </summary>
            <param name="request">The validate cart lines quantity limits request.</param>
            <returns>The validate cart lines quantity limits response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ValidateCustomerDepositOverrideRequestHandler">
            <summary>
            Validates the customer deposit override.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ValidateCustomerDepositOverrideRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateCustomerDepositOverrideRequest)">
            <summary>
            Validates the customer deposit override.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateCustomerDepositOverrideRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateCustomerDepositOverrideResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ValidateTenderLineForAddRequestHandler">
            <summary>
            Handles workflow to validate a tender line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ValidateTenderLineForAddRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateTenderLineForAddRequest)">
            <summary>
            Executes the workflow to validate tender line.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateTenderLineForAddRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.NullResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.VoidSuspendedCartsRequestHandler">
            <summary>
            Handles workflow to void suspended carts.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.VoidSuspendedCartsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.VoidSuspendedCartsRequest)">
            <summary>
            Executes the workflow to void suspended carts.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.VoidSuspendedCartsRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.VoidSuspendedCartsResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.WarehouseManagementWorkflowHelper">
            <summary>
            Helper class for Warehouse Management logic.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.WarehouseManagementWorkflowHelper.WarehouseManagementTransactionReset(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Resets Warehouse Management objects for cart and transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="salesTransaction">The sales transaction to be reset.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeDatabaseConnectionRequestHandler">
            <summary>
            Workflow required to change a connection of a runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeDatabaseConnectionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ChangeDatabaseConnectionRequest)">
            <summary>
            Executes the workflow associated with changing a connection string of a runtime.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeDatabaseConnectionRequestHandler.ReleaseConnectionString(System.String)">
            <summary>
            Releases connections associated with a connection string from underlying database provider.
            </summary>
            <param name="connectionString">Connection string to release.</param>
            <returns>True if the connections are released otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ChangeDatabaseConnectionRequestHandler.ReleaseConnection(Microsoft.Dynamics.Commerce.Runtime.DataServices.Messages.ReleaseConnectionDataRequest)">
            <summary>
            Releases the connection.
            </summary>
            <param name="request">The request.</param>
            <returns>True if the connections are released otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AggregateSalesLinesCollectionRequestHandler">
            <summary>
            The request handler for <c>AggregateSalesLinesCollectionRequest</c> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AggregateSalesLinesCollectionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.AggregateSalesLinesCollectionRequest)">
            <summary>
            Processes the <c>AggregateSalesLinesCollectionRequest</c> to return an aggregated sales lines.
            The request should not be null.
            </summary>
            <param name="request">The request parameter.</param>
            <returns>The <c>AggregateSalesLinesCollectionResponse</c>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AggregateSalesLinesRequestHandler">
            <summary>
            The request handler for AggregateSalesLinesRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AggregateSalesLinesRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.AggregateSalesLinesRequest)">
            <summary>
            Processes the AggregateSalesLinesRequest to return a sales order containing the aggregated sales lines.
            The request should not be null.
            </summary>
            <param name="request">The request parameter.</param>
            <returns>The AggregateSalesLinesResponse.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper">
            <summary>
            Helper class for receipt workflow. Used to fetch the type of receipts need to be printed.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.GetAllSalesTransactionReceiptTypes(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.HashSet{Microsoft.Dynamics.Commerce.Runtime.DataModel.ReceiptType},System.Boolean,System.Collections.Generic.HashSet{Microsoft.Dynamics.Commerce.Runtime.DataModel.ReceiptType})">
            <summary>
            Gets the types of receipts that are to be printed for a sales transaction.
            </summary>
            <remarks>
            This method is used to get the types of receipts that should be printed when
            checking out a sales transaction.
            </remarks>
            <param name="salesOrder">The sales order.</param>
            <param name="context">The request context.</param>
            <param name="requestedReceiptTypes">The requested receipt types.</param>
            <param name="getAdditionalReceiptTypes">Should receipt types other than the requested receipt type be returned.</param>
            <param name="excludedReceiptTypes">Receipt types to be excluded.</param>
            <returns>A hash set of receipt types.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.GetSalesTransactionReceiptTypes(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the additional types of receipts that are to be printed for a sales transaction.
            </summary>
            <remarks>
            This method is used to get the additional types of receipts that should be printed when
            checking out a sales transaction.
            </remarks>
            <param name="salesOrder">The sales order.</param>
            <param name="context">The request context.</param>
            <returns>A hash set of receipt types.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ConvertReceiptToHtml(Microsoft.Dynamics.Commerce.Runtime.DataModel.Receipt)">
            <summary>
            Converts the receipt of OPOS style to HTML style by replacing OPOS characters.
            </summary>
            <param name="receipt">The receipt.</param>
            <returns>The receipt string in HTML style.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.GetLanguageFromSalesOrder(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Helper method to get language for receipt from SalesOrder.
            </summary>
            <param name="context"> Request context </param>
            <param name="salesOrder"> Sales Order </param>
            <returns> Language </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeReturnLabel(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Determines whether or not includes ReturnLabel when printing receipts.
            Conditions:
            1. At least have one sales line that is not voided and is return by receipt or direct return.
            AND
            2. For this sales line the GetReturnLocationRealtimeResponse returns true.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <param name="context">The request context.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.RemoveLogo(System.String)">
            <summary>
            Removes the logo from the input receipt.
            </summary>
            <param name="receipt">The receipt to remove.</param>
            <returns>The receipt message without logo.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeQuotationReceipt(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Determines whether or not includes QuotationReceipt when printing receipts.
            Conditions:
            1. The sales order has to be either CustomerQuote or AsyncCustomerQuote.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeSalesOrderReceipt(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Determines whether or not includes SalesOrderReceipt when printing receipts.
            Conditions:
            1. The sales order has to be either CustomerOrder or AsyncCustomerOrder.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeSalesReceipt(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Determines whether or not includes SalesReceipt when printing receipts.
            Conditions:
            1. If the sales order represents a normal sales transaction,
            income/expense transaction or a customer account deposit transaction.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeGiftReceipt(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Determines whether or not includes GiftReceipt when printing receipts.
            Conditions:
            1. The transaction must be cash and carry transaction or customer order.
            AND
            2. At least have one sales line that is not gift card, nor return, nor voided.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeGiftCardReceipt(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Determines whether or not includes GiftCard when printing receipts.
            Conditions:
            1. At least have one sales line that is not voided and is gift card line.
            OR
            2. Paying with gift card.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeCreditCardReceipt(System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailOperation,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine}})">
            <summary>
            Determines whether or not includes CreditCardReceipt for both customer and store when printing receipts.
            Conditions:
            1. At least have one tender line that is pay card.
            AND
            2. The amount of this tender line is greater than or equal to 0.
            </summary>
            <param name="tenderLineMap">The dictionary telling the tender line type.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeCreditCardReceiptForReturn(System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailOperation,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine}})">
            <summary>
            Determines whether or not includes CreditCardReceipt for return for both customer and store when printing receipts.
            Conditions:
            1. At least have one tender line that is pay card.
            AND
            2. The amount of this tender line is smaller than 0.
            </summary>
            <param name="tenderLineMap">The dictionary telling the tender line type.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeCustomerAccountDepositReceipt(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesOrder)">
            <summary>
            Determines whether or not includes CustomerAccountDepositReceipt when printing receipts.
            Conditions:
            1. The transaction type must be CustomerAccountDeposit.
            AND
            2. At least have one customer account deposit line.
            </summary>
            <param name="salesOrder">The sales order.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeCustomerAccountReceiptReturn(System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailOperation,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine}})">
            <summary>
            Determines whether or not includes CustomerAccountReceipt for return for both customer and store when printing receipts.
            Conditions:
            1. At least have one tender line that is pay customer account.
            AND
            2. The amount of this tender line is smaller than 0.
            </summary>
            <param name="tenderLineMap">The dictionary telling the tender line type.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeCustomerAccountReceipt(System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailOperation,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine}})">
            <summary>
            Determines whether or not includes CustomerAccountReceipt for both customer and store when printing receipts.
            Conditions:
            1. At least have one tender line that is pay customer account.
            AND
            2. The amount of this tender line is greater than or equal to 0.
            </summary>
            <param name="tenderLineMap">The dictionary telling the tender line type.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.ShouldIncludeCreditMemo(System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailOperation,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine}})">
            <summary>
            Determines whether or not includes CustomerAccountDepositReceipt when printing receipts.
            Conditions:
            1. Issue credit memo while returning something.
            OR
            2. Pay with credit memo.
            </summary>
            <param name="tenderLineMap">The dictionary telling the tender line type.</param>
            <returns>True if the conditions match, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.GetReturnLocation(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the return location for the item in the given sales line.
            </summary>
            <param name="salesTransaction">The sales transaction being processed.</param>
            <param name="context">The request context.</param>
            <returns>The service response containing the return location details.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ReceiptWorkflowHelper.SetReturnLocationInformationInSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.String,System.String,System.String)">
            <summary>
            Sets return location details on the sales line.
            </summary>
            <param name="salesLine">The sales line for which return label properties have to be set.</param>
            <param name="returnWarehouse">The warehouse in which the returned product must be placed.</param>
            <param name="returnLocation">The location in the warehouse where the returned product must be placed.</param>
            <param name="returnPallet">The pallet in which the returned product must be placed.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper">
            <summary>
            The helper class to aggregate sales lines for receipt printing.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper.AggregateSalesLines(System.Collections.ObjectModel.Collection{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Aggregate a collection of sales lines.
            </summary>
            <param name="salesLines">The sales lines to aggregate.</param>
            <returns>A collection of sales lines that have been aggregated.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper.AggregateSalesLines(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper.SalesLinePair},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Aggregates a sales line to the existing aggregation result.
            </summary>
            <param name="pairs">The existing sales line pairs list which contains aggregation result.</param>
            <param name="salesLine">The sales line to aggregate.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper.SalesLinePair.Anchor">
            <summary>
            Gets or sets the anchor sales line used to compare with other sales lines to be aggregated.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper.SalesLinePair.AggregatedLine">
            <summary>
            Gets or sets the aggregated sales line.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.SalesLineAggregationHelper.SalesLinePair.CanAggregate(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Returns a boolean value indicating whether or not the given sales line can be aggregated with
            the anchor sales line of this sales lines pair.
            </summary>
            <param name="lineToAggregate">The given sales line to determine.</param>
            <returns>True if can be aggregated, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetRecommendationsRequestHandler">
            <summary>
            The request handler for <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetRecommendedElementsRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetRecommendationsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetRecommendedElementsRequest)">
            <summary>
            Represents the entry point of the request handler.
            </summary>
            <param name="request">The incoming request message.</param>
            <returns>The outgoing response message.</returns>
            <remarks>
            For every supported <c>RecommendationType</c>, there must be an equivalent <c>INamedRequestHandler</c>
            implementation that will support that dispatching call. For editorial lists and editorially enriched lists,
            the workflow will concantenate the lists together while respecting paging (top and skip) values.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger">
            <summary>
            The request trigger that is executed for every request.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.SupportedRequestTypes">
            <summary>
            Gets the collection of request types supported by this trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.PopulateRequestContext(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Populates the request context.
            </summary>
            <param name="context">The request context.</param>
            <returns>The populated request context.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.OnExecuting(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Invoked before request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.OnExecuted(Microsoft.Dynamics.Commerce.Runtime.Messages.Request,Microsoft.Dynamics.Commerce.Runtime.Messages.Response)">
            <summary>
            Invoked after request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The request message processed by handler.</param>
            <param name="response">The response message generated by handler.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.AdjustRequestTimeZone(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Adjusts the request time zone.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.InitializeRequestContext(Microsoft.Dynamics.Commerce.Runtime.Messages.Request,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Initializes the request context.
            </summary>
            <param name="request">The request.</param>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.PopulateContextWithOrgUnit(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the store by identifier and sets it on the context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.PopulateContextWithTerminal(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the terminal by identifier and sets it on the context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.PopulateContextWithDeviceConfiguration(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the device configuration and sets it on the context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Composition.PipelineRequestTrigger.PopulateContextWithShiftInformation(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets the current shift and sets it on the context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources.MultiBuyDiscountPercentagePromotion">
            <summary>
              Looks up a localized string similar to Buy {0} more and get {1} % discount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources.MultiBuyDiscountPricePromotion">
            <summary>
              Looks up a localized string similar to Buy {0} more and get {1} discount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources.ThresholdDiscountPercentagePromotion">
            <summary>
              Looks up a localized string similar to Buy {0} for {1} and get {2} % discount!.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.Resources.ThresholdDiscountPricePromotion">
            <summary>
              Looks up a localized string similar to Buy {0} for {1} and get {2} discount!.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ProductSearchHandler">
            <summary>
            Product Search workflows handler
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.ProductSearchHandler.SupportedRequestTypes">
            <summary>
            Gets the collection of supported request types by this handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ProductSearchHandler.Execute(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Represents the entry point of the request handler.
            </summary>
            <param name="request">The incoming request message.</param>
            <returns>The outgoing response message.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ProductSearchHandler.UseCloudSearch(System.Int64,Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String@)">
            <summary>
            Use cloud search
            </summary>
            <param name="channelId">channelid</param>
            <param name="context">request context</param>
            <param name="provider">cloud search provider</param>
            <returns>whether cloud search is enabled</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper">
            <summary>
            Authentication logic helper.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.ManagerPrivilegies">
            <summary>
            The manager privilegies
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.AuthenticateDevice(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Makes a TS call to do device authentication.
            </summary>
            <param name="context">The request context.</param>
            <param name="deviceToken">The device token.</param>
            <returns>Authenticated device.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.AuthenticateAndAuthorizeUser(Microsoft.Dynamics.Commerce.Runtime.Messages.UserAuthenticationRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.Device)">
            <summary>
            Authenticates and authorizes the user.
            </summary>
            <param name="request">UserAuthenticationRequest request object.</param>
            <param name="device">The device.</param>
            <returns>Employee object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.AuthenticateRenewalUser(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Device)">
            <summary>
            User authentication renewal.
            </summary>
            <param name="context">The request context.</param>
            <param name="device">The device object.</param>
            <returns>Employee object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.LogOff(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Messages.UserLogOffRequest)">
            <summary>
            Performs a user logs off.
            </summary>
            <param name="context">The request context.</param>
            <param name="request">The request object.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.UnlockRegister(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Device,Microsoft.Dynamics.Commerce.Runtime.Messages.UnlockRegisterRequest)">
            <summary>
            Performs unlock register.
            </summary>
            <param name="context">The request context.</param>
            <param name="device">The device object.</param>
            <param name="request">The request object.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.LogTransaction(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleTransactionType,System.String)">
            <summary>
            Logs a retail transaction.
            </summary>
            <param name="context">The request context.</param>
            <param name="transactionType">The transaction type.</param>
            <param name="transactionId">The transaction identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.LogAuthenticationRequest(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuthenticationStatus,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuthenticationOperation)">
            <summary>
            Logs an authentication request.
            </summary>
            <param name="context">The request context.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="logOnStatus">The log status.</param>
            <param name="authenticationOperation">The authentication operation.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.AuthenticationHelper.LogAuditEntry(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAuditEventType,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditLogTraceLevel,System.String)">
            <summary>
            Writes an entry into the audit table.
            </summary>
            <param name="context">The request context.</param>
            <param name="eventType">The event type value.</param>
            <param name="source">The log source.</param>
            <param name="value">The log entry.</param>
            <param name="traceLevel">The trace level.</param>
            <param name="transactionId">The transaction id.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.DataAuthorizationTrigger">
            <summary>
            Trigger that performs permission checks for data access.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.DataAuthorizationTrigger.SupportedRequestTypes">
            <summary>
            Gets the collection of request types supported by this trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.DataAuthorizationTrigger.OnExecuting(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Invoked before request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.DataAuthorizationTrigger.OnExecuted(Microsoft.Dynamics.Commerce.Runtime.Messages.Request,Microsoft.Dynamics.Commerce.Runtime.Messages.Response)">
            <summary>
            Invoked after request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The request message processed by handler.</param>
            <param name="response">The response message generated by handler.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeactivateDeviceRequestHandler">
            <summary>
            Encapsulates the workflow required to deactivate the device.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.DeactivateDeviceRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.DeactivateDeviceRequest)">
            <summary>
            Executes the workflow to deactivate a device.
            </summary>
            <param name="request">The deactivate device request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeePermissionHelper">
            <summary>
            Authentication logic helper.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeePermissionHelper.GetEmployeePermissions(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Gets the employee permission details.
            </summary>
            <param name="context">The request context.</param>
            <param name="staffId">The staff identifier.</param>
            <returns>
            The employee permission request.
            </returns>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.UserAuthenticationException">When the employee does not exists.</exception>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EmployeePermissionHelper.GetConsolidatedPermission(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions},Microsoft.Dynamics.Commerce.Runtime.DataModel.EmployeePermissions)">
            <summary>
            Helper method to get consolidated permission.
            </summary>
            <param name="employeePermissionsCollection">List of permission groups.</param>
            <param name="overriddenPermission">Overridden Permission.</param>
            <returns>The employee permissions.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.Security.EndSessionRequestHandler">
            <summary>
            The request handler for <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.EndSessionRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Security.EndSessionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.EndSessionRequest)">
            <summary>
            Represents the entry point of the request handler.
            </summary>
            <param name="request">The incoming request message.</param>
            <returns>The outgoing response message.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.Security.StartSessionRequestHandler">
            <summary>
            The request handler for <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.StartSessionRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.Security.StartSessionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.StartSessionRequest)">
            <summary>
            Represents the entry point of the request handler.
            </summary>
            <param name="request">The incoming request message.</param>
            <returns>The outgoing response message.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.EnrollUserCredentialsRequestHandler">
            <summary>
            Request handler for enrolling a user's credential.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.EnrollUserCredentialsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.EnrollUserCredentialRequest)">
            <summary>
            Executes the workflow.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableStoresRequestHandler">
            <summary>
            Encapsulates the workflow required to get available stores for device.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetAvailableStoresRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetAvailableStoresRequest)">
            <summary>
            Executes the workflow to get available stores.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetEmployeePermissionRequestHandler">
            <summary>
            Encapsulates the workflow required to get employee permission.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetEmployeePermissionRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetEmployeePermissionsRequest)">
            <summary>
            Executes the workflow to do user authentication.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.OperationAccessCheckTrigger">
            <summary>
            Trigger that performs direct operation access checks.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.OperationAccessCheckTrigger.SupportedRequestTypes">
            <summary>
            Gets the collection of request types supported by this trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OperationAccessCheckTrigger.OnExecuting(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Invoked before request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.OperationAccessCheckTrigger.OnExecuted(Microsoft.Dynamics.Commerce.Runtime.Messages.Request,Microsoft.Dynamics.Commerce.Runtime.Messages.Response)">
            <summary>
            Invoked after request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The request message processed by handler.</param>
            <param name="response">The response message generated by handler.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ServicesAuthorizationTrigger">
            <summary>
            Trigger that performs permission checks for services.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.ServicesAuthorizationTrigger.SupportedRequestTypes">
            <summary>
            Gets the collection of request types supported by this trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ServicesAuthorizationTrigger.OnExecuting(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Invoked before request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ServicesAuthorizationTrigger.OnExecuted(Microsoft.Dynamics.Commerce.Runtime.Messages.Request,Microsoft.Dynamics.Commerce.Runtime.Messages.Response)">
            <summary>
            Invoked after request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The request message processed by handler.</param>
            <param name="response">The response message generated by handler.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnenrollUserCredentialsRequestHandler">
            <summary>
            The request handler for deleting user credentials.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnenrollUserCredentialsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UnenrollUserCredentialRequest)">
            <summary>
            Executes the workflow.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnlockRegisterRequestHandler">
            <summary>
            Encapsulates the workflow required to do unlock a register.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UnlockRegisterRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UnlockRegisterRequest)">
            <summary>
            Executes the workflow to unlock a register.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserAuthenticationRenewalRequestHandler">
            <summary>
            Encapsulates the workflow required to do user authentication renewal.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserAuthenticationRenewalRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UserAuthenticationRenewalRequest)">
            <summary>
            Executes the workflow to do user authentication renewal.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserAuthenticationRequestHandler">
            <summary>
            Encapsulates the workflow required to do user authentication.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserAuthenticationRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UserAuthenticationRequest)">
            <summary>
            Executes the workflow to do user authentication.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserAuthenticationRequestHandler.LogAuditEntry(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAuditEventType,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.AuditLogTraceLevel)">
            <summary>
            Writes an entry into the audit table.
            </summary>
            <param name="context">The request context.</param>
            <param name="eventType">The event type value.</param>
            <param name="source">The log source.</param>
            <param name="value">The log entry.</param>
            <param name="logTraceLevel">The trace level.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserLogOffRequestHandler">
            <summary>
            Encapsulates the workflow required to do user authentication.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UserLogOffRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UserLogOffRequest)">
            <summary>
            Executes the workflow to do user log off.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.WorkflowsAuthorizationTrigger">
            <summary>
            Trigger that performs permission checks for workflows.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Workflow.WorkflowsAuthorizationTrigger.SupportedRequestTypes">
            <summary>
            Gets the collection of request types supported by this trigger.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.WorkflowsAuthorizationTrigger.OnExecuting(Microsoft.Dynamics.Commerce.Runtime.Messages.Request)">
            <summary>
            Invoked before request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.WorkflowsAuthorizationTrigger.OnExecuted(Microsoft.Dynamics.Commerce.Runtime.Messages.Request,Microsoft.Dynamics.Commerce.Runtime.Messages.Response)">
            <summary>
            Invoked after request has been processed by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.IRequestHandler"/>.
            </summary>
            <param name="request">The request message processed by handler.</param>
            <param name="response">The response message generated by handler.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper">
            <summary>
            Encapsulates helper functions for getting shift data.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetAllOpenedSharedShiftsOnStore(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64)">
            <summary>
            Gets all opened shared shifts on store.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <returns>Shifts</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetAllOpenedShiftsOnTerminal(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,System.String,System.Boolean)">
            <summary>
            Gets all opened shifts on terminal.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shifts</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetOpenedShiftsOnTerminalForStaff(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Gets the opened shifts on terminal for staff.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.FilterShifts(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift},System.String,System.String,System.Boolean)">
            <summary>
            Filter shifts based on terminal identifier and staff identifier.
            </summary>
            <param name="shifts">The shifts to filter for.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="includeAllShiftsForStore">Include all shifts for store.</param>
            <returns>The collection of filtered shifts.</returns>
            <remarks>Shared shifts can appear multiple times on the same register (one for each staff using the shift at a specific terminal)
            in order to avoid unnecessary duplication for using, resuming, or showing blind closed shifts,
            shifts are grouped by terminal and shift identifiers, then for each group selects the one matching both current terminal
            and current staff identifier, if none can be found with this criteria, default to current staff identifier,
            if still none is found, gets the first one in the group.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetShifts(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,System.String,System.Int64,System.Boolean)">
            <summary>
            Gets the shifts.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="shiftId">The shift identifier.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetShifts(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Gets the shifts.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="terminalId">The terminal identifier.</param>
            <param name="shiftId">The shift identifier.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetShiftsForStaffWithStatus(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftStatus,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings,System.Boolean)">
            <summary>
            Gets the shifts for staff with status.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="status">The status.</param>
            <param name="settings">The settings.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetShiftsForStaffWithStatus(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftStatus,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings,System.Boolean)">
            <summary>
            Gets the shifts for staff with status.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="status">The status.</param>
            <param name="settings">The settings.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetAllStoreShiftsWithStatus(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Int64,Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftStatus,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings,System.Boolean)">
            <summary>
            Gets all store shifts with status.
            </summary>
            <param name="context">The context.</param>
            <param name="channelId">The channel identifier.</param>
            <param name="status">The status.</param>
            <param name="settings">The settings.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Store shifts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetQueryCriteriaForShiftsThatAreNotOpenedOrClosed(System.Int64,System.String,System.Boolean)">
            <summary>
            Gets the query criteria for shifts that are not opened or closed.
            </summary>
            <param name="channelId">The channel identifier.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Query criteria.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShiftDataDataServiceHelper.GetShiftDataQueryCriteria(System.Int64,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftStatus,System.String,System.Boolean)">
            <summary>
            Gets the shift data query criteria.
            </summary>
            <param name="channelId">The channel identifier.</param>
            <param name="terminalID">The terminal identifier.</param>
            <param name="status">The status.</param>
            <param name="staffId">The staff identifier.</param>
            <param name="includeSharedShifts">if set to <c>true</c> [include shared shifts].</param>
            <returns>Shift data query criteria.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetProductDeliveryOptionsRequestHandler">
            <summary>
            Handles workflow for GetProductDeliveryOptions.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetProductDeliveryOptionsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductDeliveryOptionsRequest)">
            <summary>
            Executes the workflow to fetch delivery options for given product and address.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductDeliveryOptionsRequest"/>.</param>
            <returns>Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.GetProductDeliveryOptionsResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetShipmentPublishingStatusRequestHandler">
            <summary>
            Handler for reading shipments.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.GetShipmentPublishingStatusRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.GetShipmentPublishingStatusRequest)">
            <summary>
            Executes the workflow to read shipment publishing status.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper">
            <summary>
            Encapsulates helper function.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateAndResolveAddress(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Address)">
            <summary>
            Validates the address as well as resolves the state from zip code, if needed.
            </summary>
            <param name="context">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.RequestContext"/>.</param>
            <param name="addressToValidate">Address to be validated and resolved.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateAndResolveAddresses(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validate the addresses present in the Sales Transaction as well as resolves the state from zip code, if needed.
            </summary>
            <param name="context">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.RequestContext"/>.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateShippingInformation(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Validates the addresses and dates for shipping.
            </summary>
            <param name="context">The request context.</param>
            <param name="transaction">Current transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateDeliveryDate(System.Nullable{System.DateTimeOffset},System.String)">
            <summary>
            Validates a delivery date.
            </summary>
            <param name="deliveryDate">The shipping date to be validated.</param>
            <param name="dateDescription">Description for date so it can be logged in case of failure.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateAndResolveAddress(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Address,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates the address as well as resolves the state from zip code, if needed.
            </summary>
            <param name="context">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.RequestContext"/>.</param>
            <param name="addressToValidate">Address to be validated and resolved.</param>
            <param name="validationFailures">The list to hold all exceptions.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateShippingAddress(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Address,System.String)">
            <summary>
            Validates the address for shipping.
            </summary>
            <param name="context">The request context.</param>
            <param name="shippingAddress">The address to validate for shipping.</param>
            <param name="deliveryModeId">The delivery mode identifier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ShippingHelper.ValidateDeliveryModeAndShippingAddress(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.Address,System.String,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataValidationFailure})">
            <summary>
            Validates the delivery mode and address.
            </summary>
            <param name="context">The request context.</param>
            <param name="shippingAddress">The address to validate for shipping.</param>
            <param name="deliveryModeId">The delivery mode identifier.</param>
            <param name="validationFailures">The validation failures.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler">
            <summary>
            Handles workflow for setting the delivery options on a cart.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.ResolveDeliverySpecification(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.DeliverySpecification)">
            <summary>
            Given a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.DeliverySpecification"/> resolve the address for store pickup delivery
            </summary>
            <param name="context">The context of the request.</param>
            <param name="deliverySpecification">The delivery specification to be updated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.ResolveDeliverySpecifications(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.LineDeliverySpecification})">
            <summary>
            Given a enumerable of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.LineDeliverySpecification"/> resolve the addresses for all that are store pickup delivery
            </summary>
            <param name="context">The context of the request.</param>
            <param name="lineDeliverySpecifications">The delivery specifications to be updated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.UpdateHeaderDeliveryInfoBasedOnLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Makes sure header delivery information is consistent with the lines.
            </summary>
            <param name="salesTransaction">The sales transaction to set delivery information on.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UpdateDeliverySpecificationsRequest)">
            <summary>
            Execute method to be overridden by each derived class.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The response.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.GetStore(Microsoft.Dynamics.Commerce.Runtime.RequestContext,System.String)">
            <summary>
            Get the store given a storeId.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="storeId">The id of the store be returned.</param>
            <returns>A <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnit"/> that represents the store.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.UpdateElectronicDeliveryInfo(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.String,System.String)">
            <summary>
            Updates the electronic delivery information.
            </summary>
            <param name="salesLine">The sales line being updated.</param>
            <param name="electronicDeliveryEmailAddress">The electronic delivery email address.</param>
            <param name="electronicDeliveryEmailContent">Content of the electronic delivery email.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.ClearLineLevelDeliveryValues(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Clears the line level delivery values.
            </summary>
            <param name="salesLines">The sales lines being updated.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.ClearLineLevelDeliveryValues(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Clears the line level delivery values.
            </summary>
            <param name="salesLine">The sales line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.UpdateOrderLevelDeliverySpecification(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.DeliverySpecification,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Sets the order level delivery options.
            </summary>
            <param name="salesTransaction">The sales transaction being updated.</param>
            <param name="deliverySpecification">The selected delivery option.</param>
            <param name="requestContext">The request context.</param>
            <returns>Updated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.UpdateLineLevelDeliveryOptions(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.LineDeliverySpecification},Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Sets the line level delivery options.
            </summary>
            <param name="salesTransaction">The sales transaction being updated.</param>
            <param name="lineDeliverySpecifications">The delivery specifications at the line level.</param>
            <param name="requestContext">The request context.</param>
            <returns>Updated sales transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UpdateDeliverySpecificationsRequestHandler.ValidateDeliveryMode(System.String,Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Verifies whether the delivery mode is valid or not throwing <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataValidationException"></see> if not valid.
            </summary>
            <param name="deliveryModeId">The identifier of the delivery mode to be verified.</param>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeShiftRequestHandler">
            <summary>
            Encapsulates the workflow required to create a shift record.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeShiftRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ResumeShiftRequest)">
            <summary>
            Executes the resume shift workflow.
            </summary>
            <param name="request">The new shift request.</param>
            <returns>The resume shift response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeShiftRequestHandler.GetPermissions(Microsoft.Dynamics.Commerce.Runtime.RequestContext)">
            <summary>
            Gets employee permissions.
            </summary>
            <param name="requestContext">The request context.</param>
            <returns>The employee permissions.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.ResumeShiftRequestHandler.ValidateCanResumeShift(Microsoft.Dynamics.Commerce.Runtime.Messages.ResumeShiftRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Validates whether the shift can be resumed.
            </summary>
            <param name="request">The request.</param>
            <param name="shift">The shift.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.UseExistingShiftRequestHandler">
            <summary>
            Encapsulates the workflow required to create a shift record.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UseExistingShiftRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.UseShiftRequest)">
            <summary>
            Executes the resume shift workflow.
            </summary>
            <param name="request">The new shift request.</param>
            <returns>The resume shift response.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.UseExistingShiftRequestHandler.ValidateCanUseShift(Microsoft.Dynamics.Commerce.Runtime.Messages.UseShiftRequest,Microsoft.Dynamics.Commerce.Runtime.DataModel.Shift)">
            <summary>
            Validates whether the shift can be resumed.
            </summary>
            <param name="request">The request.</param>
            <param name="shift">The shift.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Workflow.StoreOperation.ValidateCashDrawerLimitRequestHandler">
            <summary>
            Encapsulates the workflow to process and fetch the cash drawer limit.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Workflow.StoreOperation.ValidateCashDrawerLimitRequestHandler.Process(Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateCashDrawerLimitRequest)">
            <summary>
            Executes the workflow to throw exception if cash drawer amount has exceeded its limit.
            </summary>
            <param name="request">Instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Messages.ValidateCashDrawerLimitRequest"/>.</param>
            <returns>The response.</returns>
        </member>
    </members>
</doc>
