<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType">
            <summary>Best deal algorithm type.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.DynamicProgrammingRecursive">
            <summary>Dynamic programming recursive.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.BranchAndBoundStatic">
            <summary>Static branch and bound.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.BranchAndBoundDynamic">
            <summary>Dynamic branch and bound.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.DynamicProgrammingLite">
            <summary>Dynamic programming lite.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.DynamicProgrammingWithList">
            <summary>Dynamic programming with list.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.DynamicProgrammingIterative">
            <summary>Dynamic programming iterative.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmType.DepthFirstExhaustive">
            <summary>Old depth first exhaustive.</summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CommerceRuntimePriceAndDiscount">
            <summary>
            Commerce runtime price and discount handler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CommerceRuntimePriceAndDiscount.CalculatePrices(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Customer,Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingCalculationMode,System.DateTimeOffset)">
            <summary>
            Calculate prices.
            </summary>
            <param name="context">The request context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="currencyOperations">Currency operations.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="customer">The customer on the transaction.</param>
            <param name="pricingCalculationMode">Pricing calculation mode.</param>
            <param name="dateToCheck">The date to check.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CommerceRuntimePriceAndDiscount.CalculateIndependentPriceAndDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,Microsoft.Dynamics.Commerce.Runtime.DataModel.Customer,System.Boolean,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Calculates price and discount independently for each item.
            </summary>
            <param name="transaction">Sales transaction.</param>
            <param name="context">Request context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="currencyOperation">Currency operations.</param>
            <param name="customer">The customer on the transaction.</param>
            <param name="calculateForNewSalesLinesOnly">A value indicating whether it calculates new sales lines only.</param>
            <param name="newSalesLineIdSet">New sales line Id set.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CommerceRuntimePriceAndDiscount.CalculateIndependentPriceAndDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,Microsoft.Dynamics.Commerce.Runtime.DataModel.Customer,System.Boolean,System.Collections.Generic.HashSet{System.String},System.Nullable{System.DateTimeOffset})">
            <summary>
            Calculates price and discount independently for each item.
            </summary>
            <param name="transaction">Sales transaction.</param>
            <param name="context">Request context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="currencyOperation">Currency operations.</param>
            <param name="customer">The customer on the transaction.</param>
            <param name="calculateForNewSalesLinesOnly">A value indicating whether it calculates new sales lines only.</param>
            <param name="newSalesLineIdSet">New sales line Id set.</param>
            <param name="dateToCheck">The date to check.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CommerceRuntimePriceAndDiscount.PopulateSalesLinesUnitOfMeasureIfNeeded(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            There are some services that don't properly populate the unit of measure of the Sales Lines.
            This method fixes them by fetching the default unit of measure from the master data.
            </summary>
            <param name="salesLines">The sales lines to be fixed.</param>
            <param name="priceContext">The PriceContext.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount">
            <summary>
            Contains the entry points to most of the retail discount calculation. This class will handle
              calculating trade agreement line discounts, multiline discounts, total discounts, as well as retail periodic discounts.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount" /> class.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <remarks>
            Marked as internal to prevent a default instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount"/> class from being created.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.GetPeriodicDiscountData(System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount},System.String,System.String)">
            <summary>
            Gets the periodic discount data.
            </summary>
            <param name="discounts">Collection of all periodic discounts to filter from.</param>
            <param name="itemId">The item id.</param>
            <param name="inventoryDimensionId">The variant id.</param>
            <returns>Collection of periodic discount configurations for the given item and variant.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.UpdateDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine)">
            <summary>
            Update the discount items.
            </summary>
            <param name="saleItem">The item line that the discount line is added to.</param>
            <param name="discountItem">The new discount line to add.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.ClearDiscountLinesOfType(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Nullable{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLineType},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Clears the type of the discount lines of.
            </summary>
            <param name="transaction">The transaction.</param>
            <param name="lineType">Type of the line.</param>
            <param name="priceContext">The price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.ClearManualDiscountLinesOfType(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.ManualDiscountType,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
             Clear manual discount of particular type from transaction.
            </summary>
            <param name="transaction">Transaction containing the discount.</param>
            <param name="manualDiscountType">Type of manual discount.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.ClearManualDiscountLinesOfType(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.ManualDiscountType)">
            <summary>
            Clear manual discount of particular type from sales line.
            </summary>
            <param name="salesLine">Sales line containing discount line.</param>
            <param name="manualDiscountType">Type of manual discount.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.ClearDiscountLinesOfType(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Nullable{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLineType})">
            <summary>
            Clears the type of the discount lines of.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="lineType">Type of the line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.GetUnitOfMeasure(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Gets the unit of measure.
            </summary>
            <param name="salesLine">The sales line.</param>
            <returns>Unit of measure.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.GetAllPeriodicDisc(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.Customer,System.String,System.DateTimeOffset)">
            <summary>
            Calculate the periodic discounts for the transaction.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="customer">Customer for the transaction containing customer discount groups.</param>
            <param name="currencyCode">Currency code to filter discounts by.</param>
            <param name="channelDateTime">Channel time.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.GetPriceDiscData(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement},Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountType,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountAccountCode,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductVariant,System.Boolean)">
            <summary>
            Gets the discount data.
            </summary>
            <param name="tradeAgreements">Trade agreement collection to calculate on.</param>
            <param name="relation">The relation (line, multiline, total).</param>
            <param name="itemRelation">The item relation.</param>
            <param name="accountRelation">The account relation.</param>
            <param name="itemCode">The item code (table, group, all).</param>
            <param name="accountCode">The account code (table, group, all).</param>
            <param name="quantityAmount">The quantity or amount that sets the minimum quantity or amount needed.</param>
            <param name="priceContext">The price context.</param>
            <param name="itemDimensions">The item dimensions.</param>
            <param name="includeDimensions">A value indicating whether to include item dimensions.</param>
            <returns>
            A collection of discount agreement arguments.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.CalcCustomerDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculate the customer discount.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="salesTransaction">The sales transaction.</param>
            <param name="priceContext">Context for the pricing calculation.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Discount.CalculateDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculates all of the discounts for the transactions.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="priceContext">The price context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingCompeteWithinPriorityCompoundAcross">
            <summary>
            Compounding behavior for compete within priority and compound across.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingCompeteWithinPriorityCompoundAcross.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#IsCompoundingOrderUnitPriceAmountOffPercentOff">
            <summary>Gets a value indicating whether compounding order is unit (deal) price, amount off, percentage off.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingCompeteWithinPriorityCompoundAcross.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#IsCompoundable(Microsoft.Dynamics.Commerce.Runtime.DataModel.ConcurrencyMode)">
            <summary>
            Checks if a concurrency mode is compoundable.
            </summary>
            <param name="concurrencyMode">Concurrency mode.</param>
            <returns>true if compoundable; otherwise false.</returns>
            <remarks>Best price can compound.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingCompeteWithinPriorityCompoundAcross.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Checks if a discount can compound on top of another discount.
            Between non-threshold discounts, both have to be non-exclusive, and have different priority.
            Between threshold discounts, both have to be non-exclusive, and have different priority.
            Threshold discount can compound on top of non-threshold, regardless of the priority. Both have to be non-exclusive.
            </summary>
            <param name="discount1">The first discount.</param>
            <param name="discount2">The second discount.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingCompeteWithinPriorityCompoundAcross.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Int32)">
            <summary>
            Checks if a discount can compound with another discount with certain priority, assuming both are non-thresholds, or both are thresholds.
            Compoundable if discount has a different priority, and is non-exclusive.
            </summary>
            <param name="discount">The discount.</param>
            <param name="priorityNumber">Priority number.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingCompeteWithinPriorityCompoundAcross.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#CanCompoundForPriorities(System.Int32,System.Int32)">
            <summary>
            Checks whether the priorities can compound, assuming two discounts are either non-threshold discounts or threshold discounts.
            </summary>
            <param name="priority1">Priority 1.</param>
            <param name="priority2">Priority 2.</param>
            <returns>true if compoundable; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingPricingZone">
            <summary>
            Concurrency compounding behavior for pricing zone. It's the default behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingPricingZone.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#IsCompoundingOrderUnitPriceAmountOffPercentOff">
            <summary>Gets a value indicating whether compounding order is unit (deal) price, amount off, percentage off.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingPricingZone.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#IsCompoundable(Microsoft.Dynamics.Commerce.Runtime.DataModel.ConcurrencyMode)">
            <summary>
            Checks if a concurrency mode is compoundable.
            </summary>
            <param name="concurrencyMode">Concurrency mode.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingPricingZone.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Checks if a discount can compound on top of another discount.
            Between non-threshold discounts, both have to have same priority and are compoundable.
            Between threshold discounts, both have to to have same priority and are compoundable.
            Threshold discount can compound on top of non-threshold of different priority. Both have to be compoundable.
            </summary>
            <param name="discount1">The first discount.</param>
            <param name="discount2">The second discount.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingPricingZone.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IConcurrencyCompounding#CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Int32)">
            <summary>
            Checks if a discount can compound with another discount with certain priority, assuming both are non-thresholds, or both are thresholds.
            Compoundable if the discount has the same priority and is compoundable.
            </summary>
            <param name="discount">The discount.</param>
            <param name="priorityNumber">Priority number.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CompoundingPricingZone.CanCompoundForPriorities(System.Int32,System.Int32)">
            <summary>
            Checks whether the priorities can compound, assuming two discounts are either non-threshold discounts or threshold discounts.
            </summary>
            <param name="priority1">Priority 1.</param>
            <param name="priority2">Priority 2.</param>
            <returns>true if compoundable; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountableItemGroupKeyConstructor">
            <summary>
            Discountable item group grouper.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountableItemGroupKeyConstructor.ConstructGroupKey(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Constructs the group key for a sales line.
            </summary>
            <param name="salesLine">Sales line.</param>
            <returns>Group key.</returns>
            <remarks>Sales lines of the same group key will be grouped into one discountable item group.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase">
            <summary>
            Discount calculator base class for top-level concurrency control, like how to interpret priority, and how to compound.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase"/> class.
            Initializes a new instance of the DiscountCalculatorBase class for the specified transaction.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.ConcurrencyCompounding">
            <summary>
            Gets the concurrency compounding.
            </summary>
            <value>
            The concurrency compounding.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.OfferIdToDiscountsLookup">
            <summary>
            Gets the offer identifier to discounts lookup.
            </summary>
            <value>
            The offer identifier to discounts lookup.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.PriceContext">
            <summary>
            Gets the price context.
            </summary>
            <value>
            The price context.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.AllPriceGroups">
            <summary>
            Gets all price groups.
            </summary>
            <value>
            All price groups.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.PricingDataManager">
            <summary>
            Gets the pricing data manager.
            </summary>
            <value>
            The pricing data manager.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.GetDiscountableItems(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the groups of discountable items present on the transaction, grouped by product and variant identifier.
            </summary>
            <param name="transaction">The current transaction.</param>
            <param name="priceContext">Price context.</param>
            <returns>The discountable item groups.</returns>
            <remarks>It's really private, internal for test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.RemoveFinishedDiscounts(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Removes finished discounts.
            </summary>
            <param name="discounts">Discount list.</param>
            <returns>true if removed; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.AddMultiplesForAppliedDiscountApplication(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication,System.Int32)">
            <summary>
            Adds the multiples for applied discount application.
            </summary>
            <param name="bestDiscountPath">The best discount path.</param>
            <param name="newApplied">The new applied.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>Total discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.GetDiscountsByPriority(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},System.Int32,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Gets the discounts by priority.
            </summary>
            <param name="possibleDiscounts">The possible discounts.</param>
            <param name="pricingPriorityNumber">The pricing priority number.</param>
            <param name="possibleExclusiveDiscounts">The possible exclusive discounts.</param>
            <param name="possibleExclusiveDiscountsPostBestDeal">The possible exclusive discounts post best deal.</param>
            <param name="possibleNonExclusiveDiscounts">The possible non exclusive discounts.</param>
            <param name="possibleNonExclusiveDiscountsPostBestDeal">The possible non exclusive discounts post best deal.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.GetSortedPriorityListFromDiscounts(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Gets the priority number list from discounts, sorted by priority descending.
            </summary>
            <param name="discounts">Discount list.</param>
            <returns>Priority number list, sorted by priority descending.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.IsItemLikelyEvaluatedWithOtherItems(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Int32)">
            <summary>
            Determines if the item is likely evaluated with other items.
            </summary>
            <param name="discount">The discount.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <returns>true if it's likely evaluated with other items; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.GetSingleItemNonOverlappedDiscountResult(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Int32,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get single item non-overlapped discount result.
            </summary>
            <param name="discount">The discount.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <returns>Single item non-overlapped discount result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.CalculateDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Determine the best set of discounts to apply to the specified transaction, and apply those discounts.
            </summary>
            <param name="transaction">The transaction to perform discounting on.</param>
            <param name="priceContext">The pricing context.</param>
            <param name="pricingDataManager">The pricing data manager.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.AddThresholdDiscountTypesToPriceContext(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Adds the threshold discount types to price context.
            </summary>
            <param name="thresholdDiscounts">The threshold discounts.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.CalculateAndApplyBestDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Boolean)">
            <summary>
            Calculates the and apply best discounts.
            </summary>
            <param name="transaction">The transaction.</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="isReturn">if set to <c>true</c> [is return].</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.CreateOverlappedDiscounts(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Creates the overlapped discounts.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="discount">The discount.</param>
            <returns>Overlapped discounts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.BuildDiscountBasicInternalLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Builds discount basic internal lookups for algorithm later.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.InitializeDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Initializes the internal variables that hold all of the possible discounts.
            </summary>
            <param name="transaction">The sales transaction to initialize discounts for.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.GetPossibleDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Boolean,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Decimal[],System.Decimal[],System.Boolean)">
            <summary>
            Gets possible discounts for the transaction, filtered by whether or not it is threshold.
            </summary>
            <param name="transaction">Sales transaction.</param>
            <param name="priceGroups">Price groups.</param>
            <param name="currencyCode">Currency code.</param>
            <param name="isReturn">A value indicating whether it is for return.</param>
            <param name="priceContext">Price context.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compounded.</param>
            <param name="isThreshold">A value indicating where or not it is for threshold.</param>
            <returns>List of possible discounts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.SetDiscountBaseAmount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[])">
            <summary>
            Sets the discount base amount.
            </summary>
            <param name="discountableItemGroups">The discountable item groups.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase.ThrowErrorForInvalidItems(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Throws error and logs the invalid item Ids on the transaction.
            </summary>
            <param name="invalidItemIds">Item Ids for items not in the database.</param>
            <exception cref="T:Microsoft.Dynamics.Commerce.Runtime.DataValidationException">Thrown if the invalid item Ids are non-empty.</exception>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross">
            <summary>
            Discount calculator with concurrency control: compete within priority and compound across.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.ConcurrencyCompounding">
            <summary>
            Gets the concurrency compounding.
            </summary>
            <value>
            The concurrency compounding.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.BuildItemsWithOverlappingDiscounts(System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase}},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Build items with overlapping discounts.
            </summary>
            <param name="itemsWithOverlappingDiscounts">Set of overlapped item group indices.</param>
            <param name="itemGroupIndexToDiscountsLookup">Item group index to discounts lookup.</param>
            <param name="discounts">Discount collection.</param>
            <remarks>
            Prerequisite: SetupOptimization.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.ReduceOverlappedDiscountsPerItem(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase}},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Reduce overlapped discounts per item.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemGroupIndexToDiscountsLookup">Item group index to discounts lookup.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="priceContext">Price context.</param>
            <returns>A value indicating whether it has reduced any.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.ApplyDiscountApplicationMultiples(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication})">
            <summary>
            Applies discount application multiples.
            </summary>
            <param name="multiples">Discount application multiples.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="priceContext">Price context.</param>
            <param name="bestDiscountPath">Best discount path.</param>
            <returns>Total discount amount.</returns>
            <remarks>
            We only the dynamic programming algorithm in no-multiple-compounded-competing-against-best-price case, so we don't need remaining quantities for compounded.
            We'll revisit when we have multiple-compounded case.
            Exposed for testing.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.FixRemainingQuantitiesAfterApplyingDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[])">
            <summary>
            Fixed remaining quantities after applying discount applications.
            </summary>
            <param name="discountApplied">Discount applied.</param>
            <param name="bestDiscountPath">Best discount path.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.CalculateAndApplyBestDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Boolean)">
            <summary>
            Calculates and applies the best path for discounts on a transaction and a set of discountable item groups.
            </summary>
            <param name="transaction">The current transaction to calculate discounts for.</param>
            <param name="discountableItemGroups">The groups of discountable sales lines on the transaction.</param>
            <param name="isReturn">True if it's return.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.CreateOverlappedDiscounts(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Creates the overlapped discounts.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="discount">The discount.</param>
            <returns>Overlapped discounts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorCompeteWithinPriorityCompoundAcross.CalculateNonThresholdDiscounts(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[])">
            <summary>
            Calculates non-threshold discounts for a transaction and discountable item groups.
            </summary>
            <param name="possibleDiscounts">Possible discounts.</param>
            <param name="discountableItemGroups">The discountable items on the transaction.</param>
            <param name="bestDiscountPath">The current best discount path.</param>
            <param name="remainingQuantities">The remaining quantities of each item in the discountableItemGroups parameter.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone">
            <summary>
            Discount calculator with pricing zone concurrency control.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.ConcurrencyCompounding">
            <summary>
            Gets the concurrency compounding.
            </summary>
            <value>
            The concurrency compounding.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.BuildItemsWithOverlappingDiscounts(System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase}},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Build 3 sets of items with overlapping discounts.
            </summary>
            <param name="itemsWithOverlappingDiscounts">Set of overlapped item group indices.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Set of overlapped item group indices, compounded only.</param>
            <param name="itemsWithOverlappingSimpleDiscountsCompoundedOnly">Set of overlapped item group indices, compounded simple discount only.</param>
            <param name="itemGroupIndexToDiscountsLookup">Item group index to discounts lookup.</param>
            <param name="discounts">Discount collection.</param>
            <remarks>
            Prerequisite: DiscountCalculatorBase.SetupOptimization.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.ReduceOverlappedDiscountsPerItem(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase}},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Reduce overlapped discounts per item.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemGroupIndexToDiscountsLookup">Item group index to discounts lookup.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="priceContext">Price context.</param>
            <returns>A value indicating whether it has reduced any.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.ApplyDiscountApplicationMultiples(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication})">
            <summary>
            Applies discount application multiples.
            </summary>
            <param name="multiples">Discount application multiples.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <param name="bestDiscountPath">Best discount path.</param>
            <returns>Total discount amount.</returns>
            <remarks>
            We only the dynamic programming algorithm in no-multiple-compounded-competing-against-best-price case, so we don't need remaining quantities for compounded.
            We'll revisit when we have multiple-compounded case.
            Exposed for testing.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.FixRemainingQuantitiesAfterApplyingDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup)">
            <summary>
            Fixed remaining quantities after applying discount applications.
            </summary>
            <param name="discountApplied">Discount applied.</param>
            <param name="bestDiscountPath">Best discount path.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compounded.</param>
            <param name="itemCompoundedOfferQuantityLookup">Item compounded offer quantity lookup.</param>
            <remarks>Exposed for testing.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.CalculateAndApplyBestDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Boolean)">
            <summary>
            Calculates and applies the best path for discounts on a transaction and a set of discountable item groups.
            </summary>
            <param name="transaction">The current transaction to calculate discounts for.</param>
            <param name="discountableItemGroups">The groups of discountable sales lines on the transaction.</param>
            <param name="isReturn">True if it's return.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.CreateOverlappedDiscounts(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Creates the overlapped discounts.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="discount">The discount.</param>
            <returns>Overlapped discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorPricingZone.CalculateNonThresholdDiscounts(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup)">
            <summary>
            Calculates non-threshold discounts for a transaction and discountable item groups.
            </summary>
            <param name="possibleDiscounts">Possible discounts.</param>
            <param name="discountableItemGroups">The discountable items on the transaction.</param>
            <param name="bestDiscountPath">The current best discount path.</param>
            <param name="remainingQuantities">The remaining quantities of each item in the discountableItemGroups parameter.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compounded discounts.</param>
            <param name="itemCompoundedOfferQuantityLookup">Item group index to compounded offer to quantity lookup.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase">
            <summary>
            Populates the sales line discount related fields.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountTotaling#TotalSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Populates the sales line discount related.
            </summary>
            <param name="salesLine">The sales line to total.</param>
            <param name="transactionBeginDateTime">Transaction begin date time.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountTotaling#CompareAndRemoveDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Compares the discounts on each of the sale line items and removes the worst:
             If the sale line has both a customer and a periodic discount (other then Mix and Match) then
                the discounts are compared and the better one is chosen and the other one taken of the sale line.
             If the sale line has a customer discount and a Mix &amp; Match discount then the M&amp;M discount is always
                chosen because there is no way to know the total discount of the M&amp;M because it consists of 2 or more sale lines.
                So we assume that the M&amp;M is always better.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="transactionBeginDateTime">The transaction start date.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.GetEffectiveAmountForPercentOff(System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the effective amount for percent off.
            </summary>
            <param name="grossAmount">The gross amount.</param>
            <param name="netAmount">The net amount.</param>
            <param name="percentage">The percentage.</param>
            <param name="priceContext">The price context.</param>
            <returns>Effective amount for percent off.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.AllocatePeriodicDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Allocates the periodic discount lines.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="periodicDiscountLines">The periodic discount lines.</param>
            <param name="priceContext">The price context.</param>
            <returns>Discount line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.FixDiscountAmountsOnSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Fix discount amounts on SalesLine.
            </summary>
            <param name="salesLine">Sales line.</param>
            <remarks>Recalled customer order may not have discount amount fields filled.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.FixDiscountAmountsAndPercentagesOnSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Fix discount amounts and percentages on SalesLine.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="priceContext">Price context.</param>
            <remarks>Recalled customer order may not have discount amount fields filled.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.SetPercentageFromDiscountConfigurationIfPossible(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine},System.Action{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal})">
            <summary>
            Sets the Percentage for that particular discount category (Periodic, Line, Total) to the value that was configured instead of the one that was
            back calculated during discount allocation.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="discountList">The list of applied discounts of a specific category.</param>
            <param name="set">A delegate that performs the actual change on the Percentage.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingBase.ClearCustomerDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Boolean)">
            <summary>
            Clear all customer discount lines.
            </summary>
            <param name="salesLine">The sales line.</param>
            <param name="deleteTotalCustomerDiscount">A value indicating whether the customer total discount should be deleted as well.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingCompeteWithinPriorityCompoundAcross">
            <summary>
            Discount totaling for compete within priority and compound across.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingCompeteWithinPriorityCompoundAcross.AllocatePeriodicDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Allocates periodic discount lines.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="periodicDiscountLines">Periodic discount item list.</param>
            <param name="priceContext">Price context.</param>
            <returns>Addition discount amount.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData">
            <summary>
            Discount totaling data.
            </summary>
            <remarks>
            Ideally, there is no need for totaling, as we have already calculated discounts.
            Unfortunately, we cannot get rid of it, and totaling needs additional data.
            Discount totaling used to be ubiquitous as part of sales line totaling, at least now we have contained it in pricing engine.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData.ThresholdOfferIdToTypeLookup">
            <summary>Gets threshold offer Id to discount type lookup.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData.PostBestDealOfferIdToTypeLookup">
            <summary>Gets post-best-deal offer Id to discount type lookup.</summary>
            <remarks>Used in concurrency control model of best price and compound within priority and no compound across, for compound ordering.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData.SalesLineIdToPriorityDiscountBaseAmountLookup">
            <summary>Gets sales line Id to priority discount base amount lookup.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData.IsThreshold(System.String)">
            <summary>
            Checks whether it is threshold discount.
            </summary>
            <param name="offerId">Offer Id.</param>
            <returns>true if it is threshold; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingData.IsPostBestDeal(System.String)">
            <summary>
            Checks whether it is post-best-deal discount.
            </summary>
            <param name="offerId">Offer Id.</param>
            <returns>true if it is post-best-deal; otherwise false.</returns>
            <remarks>Used in concurrency control model of best price and compound within priority and no compound across, for compound ordering.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingPricingZone">
            <summary>
            Populates the sales line discount related fields.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingPricingZone.AllocatePeriodicDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Allocates periodic discount lines.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="periodicDiscountLines">Periodic discount line list.</param>
            <param name="priceContext">Price context.</param>
            <returns>Addition discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountTotalingPricingZone.AllocateDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Allocates periodic discount lines, called twice: non-thresholds and thresholds.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="periodicDiscountItemList">Periodic discount item list.</param>
            <param name="priceContext">Price context.</param>
            <returns>Addition discount amount.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup">
            <summary>
            This class manages compounded quantities for pricing zone concurrency modeL.
            1. Within non-threshold discounts, no compound across priorities.
            2. Within threshold discounts, no compound across priorities.
            3. Threshold discounts can be compounded on top of non-threshold discount regardless.
            </summary>
            <remarks>
            The instance is stateful with additional data after each round for the following two private lookups:
                itemGroupIndexToPriorityToSettledCompoundedQuantityForNonThreshold
                itemGroupIndexToPriorityToSettledCompoundedQuantityForThreshold
            See DiscountCalculator.CalculateAndApplyBestDiscounts and DiscountCalculator.SetAppliedDiscountApplicationStackAndReduceRemainingQuantities.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.ItemGroupIndexToCompoundedOfferToQuantityLookup">
            <summary>
            Gets item group index to compounded offer to quantity lookup.
            </summary>
            <remarks>
            It's a work-in-progress lookup for the current round. At the beginning of each round, it's empty.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.RefreshLookupAndPrepareRemainingQuantitiesForNonThresholds(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Int32,System.Decimal[],System.Decimal[],System.Boolean)">
            <summary>
            Refreshes item compounded quantity lookup after each round of calculating discounts
                of exclusive or non-exclusive non-thresholds discounts, of the same priority number.
            Prepares remaining quantities for the next round.
            </summary>
            <param name="bestDiscountPath">Best discount path of application discount applications so far.</param>
            <param name="lastPriorityNumber">Priority number of the last round.</param>
            <param name="remainingQuantities">Remaining quantities for the next round.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compound for the next round.</param>
            <param name="reserveCompoundedQuantityForDiscountsPostBestDeal">
            If it's followed by least expensive favoring retail of the same priority, then reserve the compounded quantity of the same priority.
            </param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.RefreshLookupAndPrepareRemainingQuantitiesForPostKnapsack(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Int32,System.Decimal[],System.Decimal[])">
            <summary>
            Refreshes item compounded quantity lookup after each round of calculating discounts
                of exclusive or non-exclusive least-expensive-favor-retail discounts, of the same priority number.
            Prepares remaining quantities for the next round.
            </summary>
            <param name="bestDiscountPath">Best discount path of application discount applications so far.</param>
            <param name="lastPriorityNumber">Priority number of the last round.</param>
            <param name="remainingQuantities">Remaining quantities for the next round.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compound for the next round.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.PrepareRemainingQuantitiesForThresholdsFirstTime(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Decimal[])">
            <summary>
            Prepares remaining quantities for thresholds for the first time.
            </summary>
            <param name="bestDiscountPath">Best discount path of application discount applications so far.</param>
            <param name="remainingQuantities">Remaining quantities for the next round.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compound for the next round.</param>
            <remarks>Threshold can be compounded on top on non-thresholds, so we have to reset remaining quantities before we evaluate threshold discounts.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.RefreshLookupAndPrepareRemainingQuantitiesForThresholds(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Int32,System.Decimal[],System.Decimal[])">
            <summary>
            Refreshes item compounded quantity lookup after each round of calculating discounts
                of exclusive or non-exclusive thresholds discounts, of the same priority number.
            Prepares remaining quantities for the next round.
            </summary>
            <param name="bestDiscountPath">Best discount path of application discount applications so far.</param>
            <param name="lastPriorityNumber">Priority number of the last round.</param>
            <param name="remainingQuantities">Remaining quantities for the next round.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compound for the next round.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.FillLookup(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Int32,System.Decimal)">
            <summary>
            Fills the lookup.
            </summary>
            <param name="discount">The discount.</param>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.FillLookup(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication)">
            <summary>
            Fills the lookup.
            </summary>
            <param name="appliedDiscountApplication">The applied discount application.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.GetCompoundedQuantityForNonThreshold(System.Int32)">
            <summary>
            Gets the compounded quantity for non threshold.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <returns>Compounded quantity.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.GetCompoundedQuantityForThreshold(System.Int32)">
            <summary>
            Gets the compounded quantity for threshold.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <returns>Compounded quantity</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.GetCurrentCompoundedQuantity(System.Int32)">
            <summary>
            Gets the current compounded quantity.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <returns>Compounded quantity.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ItemCompoundedOfferQuantityLookup.ReduceQuantitiesFromCompoundedForNonThresholds(System.Decimal[],System.Decimal[],System.Nullable{System.Int32})">
            <summary>
            Reduce quantity from applied compounded discounts for remaining non thresholds.
            </summary>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompounded">Remaining quantities for compounded.</param>
            <param name="priorityNumberToSkipForCompounded">Do not reduce compounded quantity of this priority number, for least expensive favoring retailer.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase">
            <summary>
            Overlapped discounts.
            </summary>
            <remarks>See BuildOverlappedDiscountsGroup method.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.#ctor(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase"/> class.
            </summary>
            <param name="itemGroupIndex">Item index group.</param>
            <param name="discount">The discount.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.OverlapId">
            <summary>Gets the overlap Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.ComplexDiscounts">
            <summary>
            Gets complex - non simple discounts, for example, multi-item discount like mix and match discounts and quantity discounts, or those needing quantity control.
            </summary>
            <remarks>
            Non simple discounts are the master of each group of overlapped discounts.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.SimpleDiscounts">
            <summary>
            Gets the simple discounts, like offer discounts. By simple, we can apply the discount without quantity constraint.
            </summary>
            <remarks>
            One offer discount can be in multiple groups of overlapped discounts because each item is independent.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.CoveredItemGroupIndexSet">
            <summary>
            Gets the covered item group index set.
            </summary>
            <remarks>
            We may split items in one transaction into multiple groups of overlapped discounts.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.AllOfferIdToDiscountLookup">
            <summary>
            Gets all offer identifier to discount lookup.
            </summary>
            <value>
            All offer identifier to discount lookup.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.BuildOverlappedDiscountsGroup(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase)">
            <summary>
            Splits all discounts into multiple groups of overlapped discounts with each group non-overlapping with each other.
            </summary>
            <param name="possibleDiscounts">Possible discounts.</param>
            <returns>A collection of overlapped discounts.</returns>
            <param name="discountCalculator">Discount calculator, used to instantiate actual overlapped discounts.</param>
            <remarks>By isolating discounts into groups, we can calculate and optimize discounts for each group.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.IsOkayForMixAndMatchOneLineGroupOptimizationAndFillupValueLookups(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Checks whether it is okay for mix and match one line group optimization and fills the value lookups if yes.
            </summary>
            <param name="mixAndMatchRelativeValueLookup">Mix and match relative value look up, to be filled.</param>
            <param name="simpleDiscountOfferLookup">Simple discount offer lookup, to be filled.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="priceContext">Price Context.</param>
            <returns>true if okay; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase.IsOkayForMixAndMatchLeastExpensiveOneLineGroupPartialOptimizationAndFillupValueLookups(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Collections.Generic.HashSet{System.Int32}},System.Collections.Generic.Dictionary{System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Checks whether it is okay for mix and match one line group partial optimization and fills the value lookups if yes.
            </summary>
            <param name="mixAndMatchRelativeValueLookup">Mix and match relative value look up, to be filled.</param>
            <param name="itemGroupIndexListSortedByRelativePriceDescending">Item group index list sorted by relative price descending, to be filled.</param>
            <param name="consolidatedListOfItemsWithSamePriceAndRelativeValuesDescending">Consolidated list of items with same prices and relative values, in descending order, to be filled.</param>
            <param name="simpleDiscountOfferLookup">Simple discount offer lookup, to be filled.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="priceContext">Price Context.</param>
            <returns>true if okay; otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsCompeteOnly">
            <summary>
            Overlapped discounts.
            </summary>
            <remarks>See BuildOverlappedDiscountsGroup method.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsCompeteOnly.#ctor(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsCompeteOnly" /> class.
            </summary>
            <param name="itemGroupIndex">Item index group.</param>
            <param name="discount">The discount.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsCompeteOnly.GetSortedDiscountsToApplyInFastMode(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets sorted discounts to apply in fast mode.
            </summary>
            <param name="offerIdToDiscountLookup">Offer Id to discount lookup.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapped discounts.</param>
            <param name="priceContext">Price context.</param>
            <returns>List of discounts, sorted.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone">
            <summary>
            Overlapped discounts.
            </summary>
            <remarks>See BuildOverlappedDiscountsGroup method.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.#ctor(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone"/> class.
            </summary>
            <param name="itemGroupIndex">Item index group.</param>
            <param name="discount">The discount.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.AlgorithmChoice">
            <summary>
            Discount algorithm choice.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.AlgorithmChoice.DepthFirstAlgorithm">
            <summary>Depth first algorithm.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.AlgorithmChoice.NewAlgorithmStraight">
            <summary>New algorithm straight.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.AlgorithmChoice.NewAlgorithmWithComposite">
            <summary>New algorithm with composite.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.IsCompoundedOnly">
            <summary>Gets a value indicating whether it contains compounded discounts only.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.DiscountAlgorithmChoice">
            <summary>Gets the discount algorithm choice.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsPricingZone.GetSortedDiscountsToApplyInFastMode(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets sorted discounts to apply in fast mode.
            </summary>
            <param name="offerIdToDiscountLookup">Offer Id to discount lookup.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compound.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapped discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapped compounded discounts only.</param>
            <param name="priceContext">Price context.</param>
            <returns>List of discounts, sorted.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriorityDiscountBaseAmountCalculator">
            <summary>
            Priority discount base amount calculator.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriorityDiscountBaseAmountCalculator.GetDiscountBaseAmount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount base amount.
            </summary>
            <param name="discountItemGroup">Discountable item group.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount base amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriorityDiscountBaseAmountCalculator.CalculatePriorityDiscountBaseAmount(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup,System.Int32,System.Collections.Generic.IReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.IReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculate priority discount base amount.
            </summary>
            <param name="currentPriority">Current priority.</param>
            <param name="discountItemGroup">Discountable item group.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="existingPriorityDiscountBaseAmounts">Existing priority discount base amounts.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount base amount for the priority.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriorityDiscountBaseAmountCalculator.ShouldOverrideDiscountBaseAmountForThresholds">
            <summary>
            Default calculation won't use this base amount for threshold calculation.
            </summary>
            <returns>PriorityDiscountBaseAmountCalculator returns false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RemainingQuantitiesCalculatorCompeteWithinPriorityCompoundAcross">
            <summary>
            Remaining quantities calculator compete within priority compound across.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RemainingQuantitiesCalculatorCompeteWithinPriorityCompoundAcross.PrepareRemainingQuantitiesForNonThresholds(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding)">
            <summary>
            Prepares the remaining quantities for non thresholds.
            </summary>
            <param name="bestDiscountPath">The best discount path.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="concurrencyCompounding">The concurrency compounding.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RemainingQuantitiesCalculatorCompeteWithinPriorityCompoundAcross.PrepareRemainingQuantitiesForNonThresholdsForPriority(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding,System.Int32)">
            <summary>
            Prepares the remaining quantities for non thresholds for priority.
            </summary>
            <param name="bestDiscountPath">The best discount path.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="concurrencyCompounding">The concurrency compounding.</param>
            <param name="latestPriorityNumber">The latest priority number.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RemainingQuantitiesCalculatorCompeteWithinPriorityCompoundAcross.PrepareRemainingQuantitiesForThresholds(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding)">
            <summary>
            Prepares the remaining quantities for thresholds.
            </summary>
            <param name="bestDiscountPath">The best discount path.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="concurrencyCompounding">The concurrency compounding.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication">
            <summary>
            Applied discount application.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,System.Decimal,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication" /> class.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="value">The value of the discount application.</param>
            <param name="appliedQuantities">The applied quantities.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.DiscountApplication">
            <summary>Gets the discount application.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.ItemQuantities">
            <summary>Gets the item quantities.</summary>
            <remarks>With multiplier in DiscountApplicationMultiple, item quantities may be different from those in discount application.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.Value">
            <summary>Gets the discount value.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.BundleId">
            <summary>Gets or sets the bundle id.</summary>
            <remarks>For now, it is used in mix and match discount to link sales lines in a mix and match bundle.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.ItemGroupIndexToDiscountLineQuantitiesLookup">
            <summary>Gets item group index to discount line quantities lookup.</summary>
            <remarks>Please use method AddDiscountLine to add data.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.AddDiscountLine(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity)">
            <summary>
            Adds a discount line.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="discountLine">Discount line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.CalculateDiscountedPricesAndPopulateBestDealPriceLookup(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Calculates discounted prices and populate best deal price lookup per item.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="itemQuantities">Item quantities.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts, already filtered by priority.</param>
            <param name="discountedPricesResult">Discounts prices result, indexed by item group index.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.GetCompoundableAppliedDiscountApplicationsForNonThreshold(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Int32)">
            <summary>
            Gets compoundable applied discount applications for non threshold.
            </summary>
            <param name="appliedCompoundedDiscounts">Applied discount applications.</param>
            <param name="priorityNumber">Priority number.</param>
            <returns>Compoundable applied discount applications.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.GetCompoundableAppliedDiscountApplicationsForThreshold(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Int32)">
            <summary>
            Gets compoundable applied discount applications for threshold discount.
            </summary>
            <param name="appliedCompoundedDiscounts">Applied discount applications.</param>
            <param name="priorityNumberForThresholdHold">Priority number.</param>
            <returns>Compoundable applied discount applications.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.Apply(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[])">
            <summary>
            Applies the discount to the discountable item groups.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.Multiply(System.Int32)">
            <summary>
            Multiplies to self.
            </summary>
            <param name="multiplier">The multiplier.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.Copy">
            <summary>
            Performs a deep copy of the current instance.
            </summary>
            <returns>A copy of the current instance.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication.Validate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates applied discount application.
            </summary>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication">
            <summary>
            Base discount application.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication" /> class.
            </summary>
            <param name="itemQuantities">Item quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication" /> class.
            </summary>
            <param name="itemQuantities">Item quantities.</param>
            <param name="numberOfTimesApplicable">Number of times applicable.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.ItemQuantities">
            <summary>Gets the item quantities indexed by item group index.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.Id">
            <summary>Gets the Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.TotalDiscountAmount">
            <summary>Gets or sets the total discount amount.</summary>
            <remarks>Optional. Pre-calculation (in IDiscountForBestDeal) must set this.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.ItemUnitDiscountAmountLookup">
            <summary>Gets the item to unit discount amount lookup by item group index key.</summary>
            <remarks>Optional. Pre-calculation (in IDiscountForBestDeal) must set this.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.HasPreCalculated">
            <summary>Gets or sets a value indicating whether it has pre-calculated.</summary>
            <remarks>This is needed for IDiscountForBestDeal discounts.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.OfferId">
            <summary>Gets the offer Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.IsBounded">
            <summary>Gets or sets a value indicating whether it is bounded.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.NumberOfTimesApplicable">
            <summary>
            Gets or sets the number of times this offer can be applied to a transaction.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.IsCompounded">
            <summary>Gets a value indicating whether it is compounded.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.TotalQuantity">
            <summary>Gets the total quantity.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.AverageUnitDiscountAmount">
            <summary>Gets the average discount amount.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.GetMaxNumberOfTimesApplicable(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Get the maximum number of times applicable.
            </summary>
            <param name="itemQuantitiesPerDiscountApplication">Item quantities per discount application.</param>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <returns>Max number of times applicable.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.GetMaxNumberOfTimesApplicable(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets the max number of times applicable.
            </summary>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <returns>The max number of times applicable.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.GetMaxNumberOfTimesApplicable(System.Decimal)">
            <summary>
            Gets the max number of times applicable.
            </summary>
            <param name="maxNumberOfTimesApplicable">Max number of time applicable.</param>
            <returns>Max number of time applicable filtered.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.GetAverageUnitDiscountAmountOnOverlappedQuantities(System.Collections.Generic.HashSet{System.Int32},System.Decimal)">
            <summary>
            Gets average unit discount amount on overlapped quantities.
            </summary>
            <param name="overlappedItems">Overlapped items.</param>
            <param name="nonOverlappedItemDivisor">Non overlapped item divisor.</param>
            <returns>Average unit discount amount on overlapped quantities.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication.PreCalculate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculate discount amount and allocations to items.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compounded.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <remarks>All parameters are for figuring out prices. Once it's pre-calculated, discount amount and allocations should not be changed.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication">
            <summary>
            Composite discount application.
            </summary>
            <remarks>
            Examples:
            1. a compounded mix and match and a compounded simple discount
            2. two compounded simple discounts.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication" /> class.
            </summary>
            <param name="compoundedDiscountApplications">Compounded discount applications.</param>
            <param name="itemQuantities">Item quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication" /> class.
            </summary>
            <param name="compoundedDiscountApplications">Compounded discount applications.</param>
            <param name="itemQuantities">Item quantities.</param>
            <param name="numberOfTimesApplicable">Number of times applicable.</param>
            <param name="dominatedDiscountApplication">Dominated discount application.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.OfferId">
            <summary>Gets the offer Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.IsCompounded">
            <summary>
            Gets a value indicating whether it is compounded.
            </summary>
            <value>
              <c>true</c> if this instance is compounded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.DiscountApplications">
            <summary>Gets discount applications.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.ReconstructDiscountApplicationList(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication})">
            <summary>
            Reconstructs discount application list, to turn a best deal calculation involving compounded discounts into one with only best price.
            Best price discount application's value doesn't change, regardless of when it gets applied. Same is not true for compounded.
            </summary>
            <param name="originalList">Original list of discount applications, including some compounded.</param>
            <returns>List of discount applications, some composite.</returns>
            <remarks>See OverlappedDiscounts.DiscountAlgorithmChoice.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.CompositeDiscountApplication.PreCalculate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculate discount amount and allocations to items.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compounded.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <remarks>All parameters are for figuring out prices. Once it's pre-calculated, discount amount and allocations should not be changed.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup">
            <summary>
            Class containing groupings of SalesLine objects so that identical items that are on multiple lines can be considered as a single line.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/29/dynamics-retail-discount-concepts-discountable-item-group/">Dynamics Retail discount concept: discountable item group</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup" /> class.
            </summary>
            <param name="salesLine">The line item to add.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup" /> class.
            </summary>
            <param name="salesLines">The line items to add.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup" /> class.
            </summary>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ItemId">
            <summary>
            Gets the item ID from the collection of SalesLines.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.Price">
            <summary>
            Gets the price from the collection of SalesLines.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.DiscountBaseAmount">
            <summary>
            Gets the discount base amount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ProductId">
            <summary>
            Gets the product ID from the collection of SalesLines.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.MasterProductId">
            <summary>
            Gets product id or the master product id of the variant.
            </summary>
            <remarks>This is RecId in EcoResProduct table.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.SalesOrderUnitOfMeasure">
            <summary>
            Gets the unit of measure from the collection of SalesLines.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.CatalogIds">
            <summary>
            Gets the catalog identifier from the collection of SalesLines.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.Count">
            <summary>
            Gets the number of SalesLines included in this group.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ExtendedProperties">
            <summary>
            Gets or sets the Item extended properties for this item group.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.Quantity">
            <summary>
            Gets the total quantity for the line items in this group.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.PriorityDiscountBaseAmounts">
            <summary>Gets the ordered priority discount base amount list.</summary>
            <remarks>
            This is stateful, as we process discounts by priority in descending order.
            If we adjust discount base amount for a priority, then we add it before we process discounts of that priority.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.Item(System.Int32)">
            <summary>
            Gets the SalesLine object at the specified index within this group.
            </summary>
            <param name="index">The index of the line to retrieve.</param>
            <returns>The SalesLine object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.Add(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Adds the specified SalesLine object to the collection of lines included in this group.
            </summary>
            <param name="line">The line item to add.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.AddDiscountLine(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity)">
            <summary>
            Adds a discount line to this group.
            </summary>
            <param name="discountLineQuantity">The discount line quantity to add to the group.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ApplyDiscountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Boolean)">
            <summary>
            Applies the discount lines for this group to the transaction, splitting lines if necessary.
            </summary>
            <param name="transaction">The transaction that contains the lines in this group.</param>
            <param name="isReturn">True if it's return.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.NegateQuantity">
            <summary>
            Multiplies the quantities for each line by -1, for use in processing negative quantities just as positive quantities are processed.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.CountAppliedDiscountApplicationForCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication)">
            <summary>
            Counts the applied discount application for compound.
            </summary>
            <param name="appliedDiscountApplication">The applied discount application.</param>
            <returns>Applied discount application for compound.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ApplyOneDiscountLineToCompoundedOnly(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Decimal},System.Boolean,System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Apply one discount line on top of compounded discounts only.
            </summary>
            <param name="discountLineQuantity">Discount line and quantity.</param>
            <param name="transaction">Sales transaction.</param>
            <param name="availableLines">Available sales lines.</param>
            <param name="availableQuantities">Newly available quantities.</param>
            <param name="isReturn">A flag indicating whether it's for return.</param>
            <param name="newlyAvailableLines">Newly available lines.</param>
            <returns>Quantity not applied yet.</returns>
            <remarks>
            This is to deal with multiple mix and match discounts, each taking only partial quantity.
            A simple example of one sales line of quantity 3, where compounded mix and mach 1 (mm1) takes 1 quantity and mm2 takes 2.
              We'd split the line into 3:
                 quantity 1 - mm1 and mm2 compounded
                 quantity 1 - mm2 only
                 quantity 1 - no discount
            The alternative is to split the line into 2, one of quantity 1 with mm1 and there other one of quantity 2 with mm2.
            The reason for the decision is that with multiple rounds of discount calculation, by compounding them together, we could leave
            quantity for the next round.
            It's a rare scenario. The bottom line is that we need to ensure consistent behaviors.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.SplitLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal)">
            <summary>
            Splits a SalesLine into two sales lines in cases where a discount only applies to a portion of the quantity.
            </summary>
            <param name="transaction">The sales transaction to have the new line appended to.</param>
            <param name="salesLine">The line to split.</param>
            <param name="quantityNeeded">The quantity to split away from this line.</param>
            <returns>The new SalesLine containing the needed quantity.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ApplyDiscountLineForLargerMatch(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Decimal},System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity,System.Boolean,System.Boolean)">
            <summary>
            Attempts to apply a DiscountLine to a SalesLine that has a larger quantity than the required quantity, splitting the line if it is found.
            </summary>
            <param name="transaction">The current transaction containing the lines.</param>
            <param name="availableLines">The available line indices on the transaction.</param>
            <param name="availableQuantities">Available quantities.</param>
            <param name="quantityNeeded">The quantity needed for the DiscountLine.</param>
            <param name="remainingDiscountAmount">Remaining discount amount.</param>
            <param name="discount">The DiscountLine and original quantity needed.</param>
            <param name="isReturn">True if it's return.</param>
            <param name="requiresExistingCompoundedDiscounts">A flag indicating whether it requires existing compounded discounts on the line to compound on top of.</param>
            <returns>True if a match was found and the discount was applied, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ApplyDiscountLineForSmallerMatch(System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Decimal},System.Decimal@,System.Decimal@,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity,System.Boolean)">
            <summary>
            Attempts to apply a DiscountLine to a SalesLine that has a smaller quantity than the required quantity.
            </summary>
            <param name="availableLines">The available line indices on the transaction.</param>
            <param name="availableQuantities">Available quantities.</param>
            <param name="quantityNeeded">The quantity needed for the DiscountLine.</param>
            <param name="remainingDiscountAmount">Remaining discount amount.</param>
            <param name="discount">The DiscountLine and original quantity needed.</param>
            <param name="isReturn">True if it's return.</param>
            <returns>True if the discount was applied to a line, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ApplyDiscountLineForSmallerMatch(System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Decimal},System.Decimal@,System.Decimal@,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity,System.Boolean,System.Boolean)">
            <summary>
            Attempts to apply a DiscountLine to a SalesLine that has a smaller quantity than the required quantity.
            </summary>
            <param name="availableLines">The available line indices on the transaction.</param>
            <param name="availableQuantities">Available quantities.</param>
            <param name="quantityNeeded">The quantity needed for the DiscountLine.</param>
            <param name="remainingDiscountAmount">Remaining discount amount.</param>
            <param name="discount">The DiscountLine and original quantity needed.</param>
            <param name="isReturn">True if it's return.</param>
            <param name="requiresExistingCompoundedDiscounts">A flag indicating whether it requires existing compounded discounts on the line to compound on top of.</param>
            <returns>True if the discount was applied to a line, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup.ApplyDiscountLineForDirectMatch(System.Collections.Generic.HashSet{System.Int32},System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity,System.Boolean,System.Boolean)">
            <summary>
            Attempts to apply a DiscountLine to a SalesLine that has exactly the required quantity.
            </summary>
            <param name="availableLines">The available line indices on the transaction.</param>
            <param name="quantityNeeded">The quantity needed for the DiscountLine.</param>
            <param name="remainingDiscountAmount">Remaining discount amount.</param>
            <param name="discount">The DiscountLine and original quantity needed.</param>
            <param name="isReturn">True if it's return.</param>
            <param name="requiresExistingCompoundedDiscounts">A flag indicating whether it requires existing compounded discounts on the line to compound on top of.</param>
            <returns>True if an exact match was found and the discount was applied, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication">
            <summary>
            Class representing a specific application of a discount to a set of line items on a transaction.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            If you have a derived class, please override Copy method.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication" /> class.
            </summary>
            <param name="discount">The discount.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication" /> class.
            </summary>
            <param name="discount">The discount.</param>
            <param name="discountedPrices">Discounted prices.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication" /> class.
            </summary>
            <param name="discount">The discount.</param>
            <param name="removeItemsFromLookupsWhenApplied">Whether to remove items from lookups when applied.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.Discount">
            <summary>
            Gets or the discount associated with this application.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.RetailDiscountLines">
            <summary>
            Gets the specific discount lines for the discount associated with this application.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.SortValue">
            <summary>
            Gets or sets the amount value to use when sorting this discount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.DiscountCode">
            <summary>
            Gets the discount code used for this application.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.RemoveItemsFromLookupsWhenApplied">
            <summary>Gets or sets a value indicating whether to remove items from lookups after being applied.</summary>
            <remarks>
            By default, it's false.
            In IDiscountForBestDeal.GetDiscountApplicationMultiplesNonOverlappedWithBestDeal and in GetDiscountApplicationMultiples, if you set this to be true,
            then when the engine applies the discount application, it will consider the items finished for the discount, and remove them from internal lookups.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.IsCompounded">
            <summary>
            Gets a value indicating whether it is compounded.
            </summary>
            <value>
              <c>true</c> if this instance is compounded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.EffectiveDiscountMethodForOrdering">
            <summary>
            Gets the effective discount method for ordering.
            </summary>
            <value>
            The effective discount method for ordering.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.OfferId">
            <summary>Gets the offer Id.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.Copy">
            <summary>
            Copies the discount applications.
            </summary>
            <returns>The copy.</returns>
            <remarks>Please override this if you have a derived class.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.CopyDetails(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication)">
            <summary>
            Copies the details of the discount application.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.GetPrices(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[])">
            <summary>
            Gets the price lookup by item group index.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <returns>The price lookup.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.Copy(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication})">
            <summary>
            Copies the discount application list.
            </summary>
            <param name="discountApplications">Discount application list.</param>
            <returns>The copy.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.ValidateNewDiscountApplications(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates new discount application.
            </summary>
            <param name="discountApplications">Discount applications.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.GetDiscountApplicationsInString(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication})">
            <summary>
            Gets discount applications in string.
            </summary>
            <param name="discountApplications">The discount applications.</param>
            <returns>The discount applications as string.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.PreCalculate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculate discount amount and allocations to items.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">Remaining quantities for compounded.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <remarks>All parameters are for figuring out prices. Once it's pre-calculated, discount amount and allocations should not be changed.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.PreCalculate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pres the calculate.
            </summary>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">The item group index to discounted price lookup.</param>
            <param name="priceContext">The price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.Apply(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Apply the discount applications, taking into account previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The line items in the transaction.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of this application of the discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication)">
            <summary>
            Checks whether it can be compounded.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <returns>true if it can be compounded; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.ValidateNew(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates new discount application.
            </summary>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.ValidatePreCalculation(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates pre-calculation.
            </summary>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.DiscountApplicationComparerByEffectiveDiscountMethod">
            <summary>
            Discount application comparer by effective discount method.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication.DiscountApplicationComparerByEffectiveDiscountMethod.Compare(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication)">
            <summary>
            When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value Meaning Less than zero <paramref name="x" /> is less than <paramref name="y" />.Zero <paramref name="x" /> equals <paramref name="y" />.Greater than zero <paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            x
            or
            y
            </exception>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationComparer">
            <summary>
            Discount application comparer.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationComparer.Compare(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication)">
            <summary>
            Compares 2 discount applications by average unit discount amount.
            </summary>
            <param name="x">One discount application.</param>
            <param name="y">The other discount application.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationComparerOnOverlappedItems">
            <summary>
            Discount application comparer on overlapped items.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationComparerOnOverlappedItems.#ctor(System.Collections.Generic.HashSet{System.Int32},System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationComparerOnOverlappedItems" /> class.
            </summary>
            <param name="overlappedItems">Overlapped items.</param>
            <param name="nonOverlappedItemDivisor">Non overlapped item divisor.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationComparerOnOverlappedItems.Compare(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication)">
            <summary>
            Compares two discount applications.
            </summary>
            <param name="x">One discount application.</param>
            <param name="y">The other discount application.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple">
            <summary>
            Discount application multiple.
            Two main usages:
            1. Turn unbounded knapsack problem into 0-1 knapsack problem.
            2. Avoid duplicate discount applications in some optimizations.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple" /> class.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="multiplier">The multiplier.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.DiscountApplication">
            <summary>Gets the discount application.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.Multiplier">
            <summary>Gets the multiplier.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.TotalDiscountAmount">
            <summary>Gets the total discount amount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.ItemQuantities">
            <summary>Gets the item quantities.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.ToString">
            <summary>Converts to string.</summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.PrintOutMultiples(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple})">
            <summary>Prints out multiples.</summary>
            <param name="multiples">The multiples.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.GetMultipleDetailsInString(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple})">
            <summary>
            Gets multiples in string.
            </summary>
            <param name="multiples">The multiples.</param>
            <returns>The multiple details as a string.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.ValidateNewMultiplesWithDiscountApplications(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates new discount application multiples with discount applications.
            </summary>
            <param name="multiples">Discount application multiples.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple.ValidateNewWithDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates new discount application multiple.
            </summary>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase">
            <summary>
            Abstract class containing all of the standard properties that are shared across discount types.  For specific discount types, see one of the implementations of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ValidationPeriod">
            <summary>Gets the validation period.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.OfferId">
            <summary>Gets or sets the offer ID for the discount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CurrencyCode">
            <summary>Gets or sets the currency code required for this discount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.OfferName">
            <summary>Gets or sets the name of this discount offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.PeriodicDiscountType">
            <summary>Gets or sets the type of discount (mix and match, quantity, threshold, etc.).</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ConcurrencyMode">
            <summary>Gets or sets the concurrency mode for this discount (exclusive, best-price, compound).</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.PricingPriorityNumber">
            <summary>Gets or sets the pricing priority number.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsDiscountCodeRequired">
            <summary>Gets or sets a value indicating whether or not a discount code is required to trigger this discount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.DateValidationPeriodId">
            <summary>Gets or sets the validation period ID for testing if this offer is valid.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.DateValidationType">
            <summary>Gets or sets the validation type to use for date validation for this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ValidFrom">
            <summary>Gets or sets the starting date for this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ValidTo">
            <summary>Gets or sets the expiration date for this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ShouldCountNonDiscountItems">
            <summary>Gets or sets a value indicating whether to count in non-discount items.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.EffectiveDiscountMethodForOrdering">
            <summary>Gets effective discount method for ordering.</summary>
            <remarks>
            Used in concurrency control model of best price and compound within priority and no compound across.
            We process compoundable discounts in following order: offer/unit/deal price, amount off and percentage off.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/04/04/dynamics-retail-discount-concept-effective-discount-method-for-compound-ordering/">Dynamics Retail Discount Concept: Effective Discount Method for Compound Ordering</see>.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.DiscountLines">
            <summary>Gets the retail discount line number to retail discount line map.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.DiscountLineNumberToItemGroupIndexSetMap">
            <summary>Gets discount line number to item group index set lookup.</summary>
            <remarks>It gets initialized twice, along with ItemGroupIndexToDiscountLineNumberSetMap, one for sales, one for return.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ItemGroupIndexToDiscountLineNumberSetMap">
            <summary>Gets item group index to discount line number set lookup.</summary>
            <remarks>It gets initialized twice, along with DiscountLineNumberToItemGroupIndexSetMap, one for sales, one for return.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ItemGroupIndexToExcludedDiscountLineNumberSetMap">
            <summary>Gets item group index to excluded discount line number set lookup.</summary>
            <remarks>It gets initialized twice, along with DiscountLineNumberToItemGroupIndexSetMap, one for sales, one for return.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.NonDiscountableItemGroupSet">
            <summary>Gets the set of non discountable item indices.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.DiscountCodeOnTransaction">
            <summary>Gets the discount code on the transaction.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsFinished">
            <summary>Gets or sets a value indicating whether or not we have finished applying the discount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CanCompound">
            <summary>Gets a value indicating whether or not it can be compounded.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.PriceDiscountGroupIds">
            <summary>Gets the pricing group identifiers for this discount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ProductOfVariantToDiscountLinesMap">
            <summary>Gets product or variant id to retail discount lines map that are relevant for the transaction.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ProductOrVariantIdsInTransaction">
            <summary>Gets or sets product or variant identifiers in transaction.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CreateAppliedDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Applies the discount application and gets the value, taking into account previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="discountApplication">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of the discount application.</returns>
            <remarks>
            In compounded case, the result may depends on previously applied compounded discounts on the same items.
            Please do not use remainingQuantities beyond figuring the discounted prices.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CanDiscountApply(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Boolean,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Determines if this discount can possibly apply to the specified transaction by examining all of the triggering rules not related to the actual line items on the transaction.
            </summary>
            <param name="transaction">The transaction to use for checking the triggering rules.</param>
            <param name="storePriceGroups">The collection of price groups that the store belongs to.</param>
            <param name="currencyCode">The currency code for the current transaction.</param>
            <param name="isReturn">The flag indicating whether or not it's for return.</param>
            <param name="priceContext">Price context object.</param>
            <returns>True if the discount could apply if the correct line items exist, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.BuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Before we evaluate discounts, each discount can build up additional lookup tables and streamline them.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Hash set of overlapped item group indices, compounded only.</param>
            <returns>Whether items have been removed.</returns>
            <remarks>
            For each priority, at the beginning of processing each group of discounts of type IDiscountPostBestDeal, IDiscountPostBestDeal and IDiscountThreshold,
            The concurrency control model calls this for each discount in the group.
            In addition, it may be called twice if some items have been removed.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CleanupLookups">
            <summary>
            Clean up lookups.
            </summary>
            <remarks>Remove discount line numbers with empty item group index sets.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.RemoveItemIndexGroupFromLookups(System.Int32)">
            <summary>
            Remove item group index from lookups.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ToString">
            <summary>
            To string.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.GetDiscountBasesInString(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Gets discounts in string.
            </summary>
            <param name="discounts">The discounts.</param>
            <returns>The discounts as a string.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsDiscountAllowedForDiscountableItemGroup(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup)">
            <summary>
            Determines whether the specified item group is eligible for discounts (based on the NoDiscount flag).
            </summary>
            <param name="discountableItemGroup">The item group to examine.</param>
            <returns>True if the item may be discounted, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ValidateDataStructureIntegrity(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates data structure integrity for discounts.
            </summary>
            <param name="discounts">The discounts.</param>
            <param name="priceContext">Price context.</param>
            <remarks>Used only in test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ProcessExclusionsAndBuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Processes excludes and builds and streamlines additional lookups.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Hash set of overlapped item group indices, compounded only.</param>
            <returns>Whether items have been removed.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsSimpleDiscount">
            <summary>
            Determines whether [is simple discount].
            </summary>
            <returns>
              <c>true</c> if [is simple discount]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ContainsNonDiscountableItemGroup">
            <summary>
            Returns a flag indicating whether the discount contains a non discountable item group.
            </summary>
            <returns>The flag indicating whether the discount contains a non discountable item group.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsExternallyOverlapped(System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines whether the discount is externally overlapped.
            </summary>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <returns>true if it is externally overlapped, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.InitializeAndPrepareDiscountLineNumberAndItemGroupIndexLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes and prepares discount line and item group index lookups.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.SetDiscountCodeFromTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Sets discount code from transaction.
            </summary>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ProcessExcludedDiscountLines">
            <summary>
            Removes item group indexes that are excluded from the discount from lookups.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.RemoveDiscountLineNumbersFromLookups(System.Collections.Generic.HashSet{System.Decimal})">
            <summary>
            Removes discount line numbers from lookups.
            </summary>
            <param name="discountLineNumbersToRemove">Discount line numbers to remove.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ValidateDataStructureIntegrity(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates data structure integrity.
            </summary>
            <param name="priceContext">Price context.</param>
            <remarks>Used only in test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsDiscountAllowedForItemGroupIndex(System.Int32)">
            <summary>
            Determines whether the specified item group index is eligible for discounts.
            </summary>
            <param name="itemGroupIndex">The item group index.</param>
            <returns>True if the item group may be discounted, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsItemIndexGroupOverlappedWithNonCompoundedDiscounts(System.Int32,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines if item group index is overlapped with non-compounded discounts.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="itemsWithOverlappingDiscounts">Items with external overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>true if item group index is overlapped with non-compounded discounts, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.HasOverlap(System.Int32,System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines whether the item (by item group index) has overlapping discounts.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <returns>A value indicating whether the item has overlapping discounts.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsDiscountLineCoveringItem(System.Decimal,System.Int32)">
            <summary>
            Determines if the discount line covers the item by item group index.
            </summary>
            <param name="discountLineNumber">Discount line number.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <returns>True if discount line covers the item; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.InitializeLookups">
            <summary>
            Initializes lookups, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.NewDiscountLine(System.String,System.String)">
            <summary>
            Create a new discount line.
            </summary>
            <param name="discountCode">Discount code.</param>
            <param name="itemId">Item identifier.</param>
            <returns>A new discount line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CalculateDiscountedPricesAndPopulateBestDealPriceLookup(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Calculates discounted prices and populates best deal price lookup for item.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscounts">Applied discounts.</param>
            <param name="discountApplication">Currency discount application.</param>
            <param name="discountedPricesResult">Discounts prices result, indexed by item group index.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.CalculateDiscountedPricesAndPopulateBestDealPriceLookup(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Calculates discounted prices and populates best deal price lookup for item.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscounts">Applied discounts.</param>
            <param name="itemGroupIndexSet">Item group index set.</param>
            <param name="discountedPricesResult">Discounts prices result, indexed by item group index.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.RemoveItemGroupIndexesWithZeroQuanttiyFromLookups(System.Decimal[])">
            <summary>
            Removes item group indexes with zero quantity from lookups.
            </summary>
            <param name="remainingQuantities">Remaining quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.ConvertPriceDiscountGroupIdsToGroups(System.Collections.Generic.ISet{System.Int64},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Translates price discount groups from record identifiers into the text identifiers for the groups.
            </summary>
            <param name="priceDiscountGroupIds">The record identifiers for the discount groups.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>A collection of text identifiers for the price discount groups.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase.IsDiscountAllowedForCatalogIds(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.Int64})">
            <summary>
            Determines if the discount is allowed for the specified catalog identifiers, based on the discount price groups for this discount.
            </summary>
            <param name="priceContext">The pricing context to use.</param>
            <param name="discountPriceGroups">The set of discount price group text identifiers.</param>
            <param name="itemCatalogIds">The catalog IDs for the item.</param>
            <returns>True if the discount is allowed for this catalog, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate">
            <summary>
            Discount deal estimate.
            </summary>
            <remarks>
            Used in marginal value ranking algorithm.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/02/19/dynamics-retail-discount-concepts-discount-deal-estimate/">Dynamics Retail discount concept: discount deal estimate</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.#ctor(System.Boolean,System.String,System.Decimal,System.Decimal,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate" /> class.
            </summary>
            <param name="canCompound">A value indicating whether it can be compounded.</param>
            <param name="offerId">Offer Id.</param>
            <param name="totalDiscountAmountWithOverlapped">Total discount amount with overlapped.</param>
            <param name="totalDiscountAmountWithoutOverlapped">Total discount amount without overlapped.</param>
            <param name="itemGroupIndexToQuantityNeededFromOverlappedLookup">Item group index to quantity needed from overlapped lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.#ctor(System.Boolean,System.String,System.Decimal,System.Decimal,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate" /> class.
            </summary>
            <param name="canCompound">A value indicating whether it can be compounded.</param>
            <param name="offerId">Offer Id.</param>
            <param name="totalDiscountAmountWithOverlapped">Total discount amount with overlapped.</param>
            <param name="totalDiscountAmountWithoutOverlapped">Total discount amount without overlapped.</param>
            <param name="itemGroupIndexToQuantityNeededFromOverlappedLookup">Item group index to quantity needed from overlapped lookup.</param>
            <param name="maxOverlappedQuantityNeeded">Max overlapped quantity needed.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.TotalQuantityNeededFromOverlapped">
            <summary>Gets the total quantity needed from overlapped.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.MarginalDiscountAmountPerOverlappedQuantity">
            <summary>
            Gets the marginal value of overlapped items.
            </summary>
            <remarks>
            The value of overlapped items is the difference of total discount amount with and without overlapped items,
              divided by (estimated) overlapped quantity needed.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.CanCompound">
            <summary>Gets a value indicating whether it can be compounded.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.OfferId">
            <summary>Gets the offer Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.MaxOverlappedQuantityNeeded">
            <summary>Gets the total applicable quantity with overlapped.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.TotalDiscountAmountWithOverlapped">
            <summary>Gets the total discount amount with overlapped.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.TotalDiscountAmountWithoutOverlapped">
            <summary>Gets the total discount amount without overlapped.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.ItemGroupIndexToQuantityNeededFromOverlappedLookup">
            <summary>Gets item group index to quantity needed from overlapped lookup.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.ToString">
            <summary>
            Gets the discount deal details.
            </summary>
            <returns>Discount deal details.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.GetComparison">
            <summary>
            Gets the estimate comparison operator.
            </summary>
            <returns>Discount estimate comparison.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.Compare(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate)">
            <summary>
            Compare two estimates.
            </summary>
            <param name="x">First estimate.</param>
            <param name="y">Second estimate.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.Combine(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate)">
            <summary>
            Combines the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountDealEstimate.ValidateEstimate(System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates the estimate.
            </summary>
            <param name="offerId">The offer identifier.</param>
            <param name="priceContext">The price context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity">
            <summary>
            Class containing the discount line and the quantity of items required for that discount line for groups of line items.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity" /> class.
            </summary>
            <param name="discountLine">Discount line.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine,System.Decimal,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity" /> class.
            </summary>
            <param name="discountLine">Discount line.</param>
            <param name="quantity">The quantity.</param>
            <param name="requiresFurtherRounding">A value indicating whether it requires further rounding.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine,System.Decimal,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity" /> class.
            </summary>
            <param name="discountLine">Discount line.</param>
            <param name="quantity">The quantity.</param>
            <param name="requiresFurtherRounding">A value indicating whether it requires further rounding.</param>
            <param name="isLikelyUnevenlyDistributed">A value indicating whether the discount may get distributed evenly.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.DiscountLine">
            <summary>
            Gets or sets the discount line that belongs to the discount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.Quantity">
            <summary>Gets or sets the quantity of items required for this discount line.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.RequiresFurtherRounding">
            <summary>Gets or sets a value indicating whether it requires further rounding.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountLineQuantity.IsLikelyUnevenlyDistributed">
            <summary>Gets or sets a value indicating whether the discount may get distributed evenly.</summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer">
            <summary>
            Item price comparer.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer" /> class.
            </summary>
            <param name="itemPricesForSorting">Item prices for sorting.</param>
            <remarks>Not adjusted by non discountable items.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer" /> class.
            </summary>
            <param name="itemPricesForSorting">Item prices for sorting.</param>
            <param name="nonDiscountableItemGroupIndexSet">Non discountable item group index set.</param>
            <remarks>Adjusted by non discountable items.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer.CompareItemPriceByItemGroupIndexDescending(System.Int32,System.Int32)">
            <summary>
            Compares item prices by item group index, descending.
            </summary>
            <param name="left">Left value.</param>
            <param name="right">Right value.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemPriceComparer.GetComparison">
            <summary>
            Gets comparison.
            </summary>
            <returns>The comparison.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey">
            <summary>Item quantities key.</summary>
            <remarks>Used in discount application purge.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey" /> class.
            </summary>
            <param name="itemQuantities">Item quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey" /> class.
            </summary>
            <param name="itemQuantities">Item quantities.</param>
            <param name="multiplier">The multiplier.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.ItemQuantities">
            <summary>Gets the item quantities.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.TotalCount">
            <summary>Gets the total count.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.TotalQuantity">
            <summary>Gets the total quantity.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.HasNonIntegers">
            <summary>Gets a value indicating whether it has non-integer quantities.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.Equals(System.Object)">
            <summary>
            Checks whether the two are equals.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if they're equal.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.GetHashCode">
            <summary>Gets the hash code.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.AddItemQuantity(System.Int32,System.Decimal,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Adds item quantity to the lookup.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="quantity">Item quantity.</param>
            <param name="itemQuantities">Item quantities lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.ConvertItemQuantitiesToDictionary(System.Decimal[])">
            <summary>
            Convert item quantities from array to dictionary lookup.
            </summary>
            <param name="itemQuantitiesArray">Item quantities array.</param>
            <returns>Item quantities dictionary lookup.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.IsRightCoversLeftPerfectly(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Checks whether the right item quantities covers left item quantities perfectly.
            By perfectly, right has all the items left has and matches the quantity exactly.
            It's possible, right has more items than left here.
            </summary>
            <param name="left">Left item quantities.</param>
            <param name="right">Right item quantities.</param>
            <returns>true if the right item quantities covers left item quantities perfectly, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.IsCovered(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Determines whether the specified item quantities is covered.
            </summary>
            <param name="itemQuantities">The item quantities.</param>
            <param name="multiplier">The multiplier.</param>
            <param name="itemQuantitiesLimit">The item quantities limit.</param>
            <returns>
              <c>true</c> if the specified item quantities is covered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.IsCovered(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Determines whether the specified item quantities limit is covered.
            </summary>
            <param name="itemQuantitiesLimit">The item quantities limit.</param>
            <returns>
              <c>true</c> if the specified item quantities limit is covered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey.Add(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Int32)">
            <summary>
            Adds the specified item quantitites to add.
            </summary>
            <param name="itemQuantititesToAdd">The item quantitites to add.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>Item quantities key.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer">
            <summary>
            <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/13/retail-discount-design-mix-and-match-discount-ii/">Least expensive favor retailer</see>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount application multiples fast.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer.CalculateEstimate(System.Boolean,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Decimal@,System.Decimal@,System.Decimal@)">
            <summary>
            Calculates the estimate.
            </summary>
            <param name="includeExternallyOverlappedItems">if set to <c>true</c> [include externally overlapped items].</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="itemsWithOverlappingDiscountsExcludingCompoundedOnly">The items with overlapping discounts excluding compounded only.</param>
            <param name="priceContext">The price context.</param>
            <param name="totalNumberOfDiscountApplications">The total number of discount applications.</param>
            <param name="totalDiscountAmount">The total discount amount.</param>
            <param name="totalApplicableQuantity">The total applicable quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.LeastExpensiveFavorRetailer.GetItemPriceComparer(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets the item price comparer.
            </summary>
            <param name="itemPriceLookupForSorting">The item price lookup for sorting.</param>
            <returns>Item price comparer.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount">
            <summary>
            This class implements the mix and match discount processing, including the determination of which ways
            the discount can apply to the transaction and the value of the discount applied to specific lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.OptimizationOverlapType">
            <summary>
            Optimization overlap type.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.OptimizationOverlapType.ExternalOverlap">
            <summary>
            The external overlap
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.OptimizationOverlapType.InternalOverlap">
            <summary>
            The internal overlap
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.OptimizationOverlapType.NoOverlap">
            <summary>
            The no overlap
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.EffectiveDiscountMethodForOrdering">
            <summary>
            Gets effective discount method for ordering.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetPossibleBasicDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Boolean@)">
            <summary>
            Gets all of the possible applications of this discount to the specified transaction and line items.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The possible permutations of line items that this discount can apply to, or an empty collection if this discount cannot apply.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetDiscountApplicationMultiplesNonOverlappedWithBestDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Gets non-overlapped best-deal discount application multiples that can be applied right away.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Non-overlapped discount application multiples that can be applied right away.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount application multiples.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.PreCalculateDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculates discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">Item group index to discounted price lookup.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetDiscountApplicationMultiplesSequentiallyOptimizedForOneLineGroup(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Decimal[])">
            <summary>
            Gets discount application multiples sequentially optimized for one line group.
            </summary>
            <param name="multiples">Discount application multiples, to be filled.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="mixAndMatchRelativeValueLookup">Mix and match relative value lookup.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetDiscountApplicationMultiplesPartiallyOptimizedForOneLineGroupLeastExpensive(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.List{System.Collections.Generic.HashSet{System.Int32}},System.Decimal[])">
            <summary>
            Gets discount application multiples sequentially optimized for one line group.
            </summary>
            <param name="multiples">Discount application multiples, to be filled.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="mixAndMatchRelativeValueLookup">Mix and match relative value lookup.</param>
            <param name="consolidatedListOfItemsWithSamePriceAndRelativeValuesDescending">Consolidated list of items with same prices and relative values, in descending order, to be filled.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.RemoveLowPricedItemsThatWontMakeDiscountApplications(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.IDictionary{System.String,System.Int32[]})">
            <summary>
            Remove low priced items that won't make discount applications.
            </summary>
            <param name="discountedPrices">Discounted prices.</param>
            <param name="quantitiesRemaining">Quantities remaining.</param>
            <param name="lineGroupToOrderedItemGroupIndexArrayLookup">Line group to ordered item group index array lookup.</param>
            <remarks>It's private, exposed for testing.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetItemPriceComparer(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets the item price comparer.
            </summary>
            <param name="itemPriceLookupForSorting">The item price lookup for sorting.</param>
            <returns>Item price comparator</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.CalculateEstimate(System.Boolean,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Decimal@,System.Decimal@,System.Decimal@)">
            <summary>
            Calculates the estimate.
            </summary>
            <param name="includeExternallyOverlappedItems">if set to <c>true</c> [include externally overlapped items].</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="itemsWithOverlappingDiscountsExcludingCompoundedOnly">The items with overlapping discounts excluding compounded only.</param>
            <param name="priceContext">The price context.</param>
            <param name="totalNumberOfDiscountApplications">The total number of discount applications.</param>
            <param name="totalDiscountAmount">The total discount amount.</param>
            <param name="totalApplicableQuantity">The total applicable quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.ArrangeLineGroups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet,System.Int32,System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem}}})">
            <summary>
            Arranges the items into mix-and-match line groups to determine the possible combinations of lines that are valid for this discount.
            </summary>
            <param name="availableItemGroups">The available item groups.</param>
            <param name="currentItemGroupIndex">The current index in the available items.</param>
            <param name="qtyRemaining">The remaining quantities of items after other groups have been used.</param>
            <param name="priceContext">Price context.</param>
            <param name="matchedLineGroups">The dictionary containing matching sets of items for each mix-and-match line group.</param>
            <returns>true if interrupted; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetSortValue(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[])">
            <summary>
            Determines the sort value to use for a specific discount application.  This value is an approximation of the amount or percentage that this discount application will use.
            </summary>
            <param name="discountLineItems">The items used by this application.</param>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <returns>The sort value to use.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscount.GetDiscountApplicationsForItems(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Boolean@)">
            <summary>
            Gets the possible mix-and-match discount applications for the item groups on the transaction.
            </summary>
            <param name="availableItemGroups">The available item groups to consider.</param>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="remainingQuantities">The remaining quantities of the item groups.</param>
            <param name="priceContext">Price context.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The collection of discount applications for this discount on the transaction.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase">
            <summary>
            This class implements the mix and match discount processing, including the determination of which ways
            the discount can apply to the transaction and the value of the discount applied to specific lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.EffectiveDiscountMethodForOrdering">
            <summary>Gets effective discount method for ordering.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.DiscountMethod">
            <summary>Gets or sets the mix and match discount method.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.NumberOfLeastExpensiveLines">
            <summary>Gets or sets the number of least-expensive lines to use in triggering this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.DealPriceValue">
            <summary>Gets or sets the deal-price value of this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.DiscountAmountValue">
            <summary>Gets or sets the discount amount value for this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.DiscountPercentValue">
            <summary>Gets or sets the discount percentage value for this offer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GeneratesBundleId">
            <summary>Gets or sets a value indicating whether to generate Bundle Id for this discount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupToNumberOfItemsMap">
            <summary>
            Gets the map of mix and match line group to number of items.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupToItemGroupIndexSetLookup">
            <summary>
            Gets the line group to item group index set lookup.
            </summary>
            <remarks>This will be re-initialized for every GetDiscountApplications call, and we have sales and return.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupToDiscountLineNumberSetLookup">
            <summary>
            Gets the line group to discount line number set lookup.
            </summary>
            <remarks>This will be re-initialized for every GetDiscountApplications call, and we have sales and return.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.ItemGroupIndexToLineGroupSetLookup">
            <summary>
            Gets the item group index to the line group set lookup.
            </summary>
            <remarks>This will be re-initialized for every GetDiscountApplications call, and we have sales and return.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.IsLeastExpensiveAmountOff">
            <summary>Gets a value indicating whether it is least expensive amount off.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.CreateAppliedDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Applies the discount application and gets the value, taking into account previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="discountApplication">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of the discount application.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.NextBundleId">
            <summary>
            Returns the next bundle id that should be used.
            </summary>
            <returns>The next bundle id.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.BuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Before we evaluate discounts, each discount can build up additional lookup tables and streamline them.
            For mix and match, we need to build additional two-way lookups between item group indexes and line groups.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Whether items have been removed.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.RemoveItemIndexGroupFromLookups(System.Int32)">
            <summary>
            Remove item group index from lookups.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.ToString">
            <summary>
            To string.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetMaxNumberOfTimesApplicable(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}})">
            <summary>
            Get the maximum number of times applicable (for mix and match with overlapping line groups).
            </summary>
            <param name="lineGroupToItemGroupIndexToQuantityNeededLookup">Line group to item group index to quantity needed lookup.</param>
            <param name="nonOverlappedItemQuantitiesAvailable">Non overlapped item quantities available.</param>
            <param name="lineGroupToItemGroupIndexToQuantitiesAvailableLookup">Line group to item group index to quantities available lookup.</param>
            <returns>The maximum number of times applicable.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetAvailableQuantityForItem(System.String,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}})">
            <summary>
            Gets the available quantity for item.
            </summary>
            <param name="lineGroup">The line group.</param>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="itemsWithOverlappingDiscounts">The items with overlapping discounts.</param>
            <param name="lineGroupToItemGroupIndexToAllocatedQuantityLookup">The line group to item group index to allocated quantity lookup.</param>
            <returns>Available quantity.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.ReduceQuantitiesFromRemainingQuantities(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}},System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}})">
            <summary>
            Reduces the quantities from remaining quantities.
            </summary>
            <param name="lineGroupToItemGroupIndexToQuantityUsedLookup">The line group to item group index to quantity used lookup.</param>
            <param name="multiplier">The multiplier.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="lineGroupToItemGroupIndexToAllocatedQuantityLookup">The line group to item group index to allocated quantity lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.IsItemQuantitiesCoveredByRemainingQuantities(System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Decimal[])">
            <summary>
            Determines whether [is item quantities covered by remaining quantities] [the specified item quantities].
            </summary>
            <param name="itemQuantities">The item quantities.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <returns>
              <c>true</c> if [is item quantities covered by remaining quantities] [the specified item quantities]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.ReduceQuantitiesFromRemainingQuantities(System.String,System.Int32,System.Decimal,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}})">
            <summary>
            Reduces the quantities from remaining quantities.
            </summary>
            <param name="lineGroup">The line group.</param>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="quantityUsed">The quantity used.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="itemsWithOverlappingDiscounts">The items with overlapping discounts.</param>
            <param name="lineGroupToItemGroupIndexToAllocatedQuantityLookup">The line group to item group index to allocated quantity lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.PrepareLineGroupLookups(System.Decimal[])">
            <summary>
            Prepare line group to discount line number set lookup, line group to item group index set lookup, and item group index to line group set lookup.
            </summary>
            <param name="remainingQuantities">Remaining quantities.</param>
            <remarks>It's private, exposed for testing.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetLineGroupToItemGroupIndexDescendingByPriceArrayLookup(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets lookup of line group to item group index array order by price descending.
            </summary>
            <param name="discountedPrices">Discounted prices.</param>
            <returns>Lookup of line group to item group index array order by price descending.</returns>
            <remarks>It's private, exposed for testing.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetOverlappedItemGroupIndexSet(System.Decimal[])">
            <summary>
            Gets the overlapped item group index set.
            </summary>
            <param name="remainingQuantities">The remaining quantities.</param>
            <returns>Overlapped item group index set.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.AdjustOriginalPricesForOffOriginalPriceCompounding(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Adjusts the original prices for off original price compounding.
            </summary>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="discountedPrices">The discounted prices.</param>
            <returns>Adjusted original prices.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.PrepareDiscountApplicationForLineGroupAndItem(System.String,System.Int32,System.Decimal,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}})">
            <summary>
            Prepares the discount application for line group and item.
            </summary>
            <param name="lineGroup">The line group.</param>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="quantityUsed">The quantity used.</param>
            <param name="discountLineItems">The discount line items.</param>
            <param name="quantitiesForDiscountApplication">The quantities for discount application.</param>
            <param name="lineGroupToItemGroupIndexToUsedQuantityLookup">The line group to item group index to used quantity lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.TryGetLeastExpensiveLookup(System.Collections.Generic.Dictionary{System.String,System.Int32[]},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}})">
            <summary>
            Tries the get least expensive lookup.
            </summary>
            <param name="lineGroupToSortedItemGroupIndexArrayLookup">The line group to sorted item group index array lookup.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="itemsWithOverlappingLineGroups">The items with overlapping line groups.</param>
            <param name="lineGroupToItemGroupIndexToAllocatedQuantityLookup">The line group to item group index to allocated quantity lookup.</param>
            <param name="discountedPrices">The discounted prices.</param>
            <param name="lineGroupToLeastExpensiveLookup">The line group to least expensive lookup.</param>
            <returns>Keep going.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.BuildLineGroupToSortedItemGroupIndexArrayLookup(System.Collections.Generic.Dictionary{System.String,System.Int32[]},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Builds the line group to sorted item group index array lookup.
            </summary>
            <param name="lineGroupToSortedItemGroupIndexArrayLookup">The line group to sorted item group index array lookup.</param>
            <param name="lineGroupToItemGroupIndexToQuantityLookup">The line group to item group index to quantity lookup.</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="itemsWithOverlappingLineGroups">The items with overlapping line groups.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.BuildLineGroupToSortedItemGroupIndexArrayLookup(System.Collections.Generic.Dictionary{System.String,System.Int32[]},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Builds the line group to sorted item group index array lookup.
            </summary>
            <param name="lineGroupToSortedItemGroupIndexArrayLookup">The line group to sorted item group index array lookup.</param>
            <param name="lineGroupToItemGroupIndexToQuantityLookup">The line group to item group index to quantity lookup.</param>
            <param name="itemsWithOverlappingLineGroups">The items with overlapping line groups.</param>
            <param name="itemPriceLookupForSorting">The item price lookup for sorting.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetDiscountValueFromDefinition(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount value from definition.
            </summary>
            <param name="discountApplication">The discount application.</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="prices">The prices.</param>
            <param name="itemUnitDiscountAmountLookup">The item unit discount amount lookup.</param>
            <param name="priceContext">The price context.</param>
            <returns>Total discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetDiscountLineByLineGroupAndItemGroupIndex(System.String,System.Int32)">
            <summary>
            Gets the index of the discount line by line group and item group.
            </summary>
            <param name="lineGroup">The line group.</param>
            <param name="itemGroupIndex">Index of the item group.</param>
            <returns>Discount line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetItemPriceComparer(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets the item price comparer.
            </summary>
            <param name="itemPriceLookupForSorting">The item price lookup for sorting.</param>
            <returns>Item price comparer.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.SortItemGroupIndicesByPrice(System.Int32[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Sorts the item group indices by price.
            </summary>
            <param name="itemGroupIndices">The item group indices.</param>
            <param name="itemPriceLookupForSorting">The item price lookup for sorting.</param>
            <returns>Sorted item group indicies.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.CalculateEstimate(System.Boolean,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Decimal@,System.Decimal@,System.Decimal@)">
            <summary>
            Calculates the estimate.
            </summary>
            <param name="includeExternallyOverlappedItems">if set to <c>true</c> [include externally overlapped items].</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="itemsWithOverlappingDiscountsExcludingCompoundedOnly">The items with overlapping discounts excluding compounded only.</param>
            <param name="priceContext">The price context.</param>
            <param name="totalNumberOfDiscountApplications">The total number of discount applications.</param>
            <param name="totalDiscountAmount">The total discount amount.</param>
            <param name="totalApplicableQuantity">The total applicable quantity.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GetDiscountDealEstimateInternal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.AllocateOverlappedItemsToLineGroups(System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Int32,System.Decimal}},System.Collections.Generic.HashSet{System.Int32},System.Decimal[])">
            <summary>
            Allocates the overlapped items to line groups.
            </summary>
            <param name="lineGroupToQuantityLookup">The line group to quantity lookup.</param>
            <param name="lineGroupToItemGroupIndexToAllocatedQuantityLookup">The line group to item group index to allocated quantity lookup.</param>
            <param name="itemsWithOverlappingLineGroups">The items with overlapping line groups.</param>
            <param name="remainingQuantitiesLocal">The remaining quantities local.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.RemoveDiscountLineNumbersFromLookups(System.Collections.Generic.HashSet{System.Decimal})">
            <summary>
            Removes discount line numbers from lookups.
            </summary>
            <param name="discountLineNumbersToRemove">Discount line numbers to remove.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.ValidateDataStructureIntegrity(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates data structure integrity.
            </summary>
            <param name="priceContext">Price context.</param>
            <remarks>Used only in test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.ProcessExcludedDiscountLines">
            <summary>
            Removes item group indexes that are excluded from the discount from lookups.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.InitializeLookups">
            <summary>
            Initializes lookups, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.TranslateLineDiscountMethod(System.Int32)">
            <summary>
            Translates a line discount method from <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountOfferMethod"/> to <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod"/>.
            </summary>
            <param name="lineDiscountMethod">The value of the discount method.</param>
            <returns>The corresponding discount method enumeration value.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.RemoveDiscountLineFromLookupsByLineGroupAndItemGroupIndex(System.Int32,System.String)">
            <summary>
            Removes discount lines for a particular item group index and line group from lookups.
            </summary>
            <param name="itemGroupIndex">The item group index.</param>
            <param name="lineGroup">The mix and match line group.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.GenerateDiscountLinesDictionary(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Generate discount lines dictionary from the applied discount application.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="discountApplicationToApply">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.OverlappedItemGroupIndexComparer">
            <summary>
            Overlapped item group index comparer.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.OverlappedItemGroupIndexComparer.#ctor(System.String[],System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.HashSet{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.OverlappedItemGroupIndexComparer"/> class.
            </summary>
            <param name="lineGroupsSorted">The line groups sorted.</param>
            <param name="itemGroupIndexToLineGroupSetLookup">The item group index to line group set lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.OverlappedItemGroupIndexComparer.CompareOverlappedItemByMostHelpfulFirst(System.Int32,System.Int32)">
            <summary>
            Compares the overlapped item by most helpful first.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>Comparator.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupByQuantityNeedComparer">
            <summary>
            Line group compare by who needs quantity more.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupByQuantityNeedComparer.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal},System.Collections.Generic.IDictionary{System.String,System.Decimal},System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupByQuantityNeedComparer"/> class.
            </summary>
            <param name="lineGroupNonOverlappedQuantityLookup">The line group non overlapped quantity lookup.</param>
            <param name="lineGroupToQuantityOverlappedLookup">The line group to quantity overlapped lookup.</param>
            <param name="lineGroupToNumberOfItemsLookup">The line group to number of items lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupByQuantityNeedComparer.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal},System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupByQuantityNeedComparer"/> class.
            </summary>
            <param name="lineGroupNonOverlappedQuantityLookup">The line group non overlapped quantity lookup.</param>
            <param name="lineGroupToNumberOfItemsLookup">The line group to number of items lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MixAndMatchDiscountBase.LineGroupByQuantityNeedComparer.CompareLineGroupByQuantityNeeded(System.String,System.String)">
            <summary>
            Compares the line group by quantity needed.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>Comparator.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount">
            <summary>
            This class implements the multi-buy (quantity threshold) discount processing, including the determination of which ways
            the discount can apply to the transaction and the value of the discount applied to specific lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.LevelTrend">
            <summary>
            Level trend.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.LevelTrend.Undecided">
            <summary>
            The undecided
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.LevelTrend.DealBetterAsLevelIncreases">
            <summary>
            The deal better as level increases
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.LevelTrend.DealWorseAsLevelIncreases">
            <summary>
            The deal worse as level increases
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.EffectiveDiscountMethodForOrdering">
            <summary>Gets effective discount method for ordering.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.DiscountMethod">
            <summary>Gets or sets multiple buy discount method.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.QuantityDiscountLevels">
            <summary>Gets the collection of MultiBuy discount tiers.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.QuantityLevelTrend">
            <summary>
            Gets the quantity level trend.
            </summary>
            <value>
            The quantity level trend.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.HighestQuantityLevel">
            <summary>
            Gets the highest quantity level.
            </summary>
            <value>
            The highest quantity level.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.ItemGroupIndexToDiscountLineNumberLookupOptimizedForSimpleDiscount">
            <summary>
            Gets the item group index to discount line number lookup optimized for simple discount.
            </summary>
            <value>
            The item group index to discount line number lookup optimized for simple discount.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.DiscountLineNumberSetMakingHighestQuantity">
            <summary>
            Gets the discount line number set making highest quantity.
            </summary>
            <value>
            The discount line number set making highest quantity.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetPossibleBasicDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Boolean@)">
            <summary>
            Gets all of the possible applications of this discount to the specified transaction and line items.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The possible permutations of line items that this discount can apply to, or an empty collection if this discount cannot apply.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.CreateAppliedDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Applies the discount application and gets the value, taking into account previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="discountApplication">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of the discount application.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetDiscountApplicationMultiplesNonOverlappedWithBestDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Gets non-overlapped best-deal discount application multiples that can be applied right away.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Non-overlapped discount application multiples that can be applied right away.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount applications multiples.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.PreCalculateDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculates discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">Item group index to discounted price lookup.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountApplyStandalone#CanApplyStandalone(System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines whether the discount can be applied standalone, i.e. not competing with other discounts.
            </summary>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>true if it can be applied standalone, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.BuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Before we evaluate discounts, each discount can build up additional lookup tables and streamline them.
            For quantity discount,
            1. Check if we can treat the discount on some products as simple discounts.
            2. Reduce overlapped line definitions if we can.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Whether items have been removed.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountPerItemReduce#GetSingleItemNonOverlappedDiscountResult(System.Int32,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get single item non-overlapped discount result.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <returns>Single item non-overlapped discount result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountPerItemReduce#IsItemLikelyEvaluatedWithOtherItems(System.Int32)">
            <summary>
            Determines if the item is likely evaluated with other items.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <returns>true if it's likely evaluated with other items; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.RemoveItemIndexGroupFromLookups(System.Int32)">
            <summary>
            Remove item group index from lookups.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.ToString">
            <summary>
            To string.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.InitializeQuantityLevelTrendAndHighestQuantityLevel">
            <summary>
            Initializes the quantity level trend and highest quantity level.
            </summary>
            <returns>Level trend.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.OptimizeDiscountLineNumberAndItemGroupIndexLookupsAndReduceRedundantLines(System.Decimal[],System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Optimize discount line number to item group index set and item group index to discount line number set lookups.
            </summary>
            <param name="quantitiesApplicable">Quantities applicable.</param>
            <param name="itemsWithOverlappingDiscounts">Items with external overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <remarks>Private, but internal for test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.OptimizationReduceRedundantDiscountLines">
            <summary>
            Optimization: reduce redundant discount lines.
            </summary>
            <returns>true if reduced, false otherwise.</returns>
            <remarks>Private, but internal for test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetQuantityLevel(System.Decimal,System.Decimal)">
            <summary>
            Gets the quantity level.
            </summary>
            <param name="quantity">The quantity.</param>
            <param name="discountLineNumber">The discount line number.</param>
            <returns>The quantity level.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetQuantityLevel(System.Decimal)">
            <summary>
            Gets the quantity level.
            </summary>
            <param name="quantity">The quantity.</param>
            <returns>The quantity level.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.AddAllQualifiedQuantitiesAsOneDiscountAppliationToResult(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine,System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication})">
            <summary>
            Add all qualified quantities as one discount application to result.
            </summary>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="retailDiscountLine">The discount line used for this particular application.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="result">The collection of DiscountApplication objects that will be included in the result.</param>
            <remarks>Exposed for testing only.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.RemoveDiscountLineNumbersFromLookups(System.Collections.Generic.HashSet{System.Decimal})">
            <summary>
            Removes discount line numbers from lookups.
            </summary>
            <param name="discountLineNumbersToRemove">Discount line numbers to remove.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetSortValue(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Decimal)">
            <summary>
            Gets the sort value to use for the selected items.  This value will be an approximation of the amount or percentage for the discount application.
            </summary>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="discountLineItems">Retail discount line plus item index.</param>
            <param name="itemQuantities">Item quantities.</param>
            <param name="discountUnitPriceOrPercent">Discount unit price or percentage.</param>
            <returns>The sort value.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetDiscountApplicationsForItems(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Boolean@)">
            <summary>
            Gets the collection of discount applications for the items on the transaction.
            </summary>
            <param name="availableItemGroups">The available item groups to consider.</param>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="remainingQuantities">The remaining quantities of the item groups.</param>
            <param name="priceContext">Price context.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The collection of discount applications for this discount on the transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetApplicationsForLine(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Int32,System.Int32,System.Int32,System.Decimal[],System.Collections.Generic.Stack{System.Int32},Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Boolean@)">
            <summary>
            Gets the possible discount applications for the specified discount line.
            </summary>
            <param name="availableItemGroups">The available item groups to consider.</param>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="result">The collection of DiscountApplication objects that will become the result for this discount.</param>
            <param name="currentIndex">The current index within the available item groups.</param>
            <param name="minDepth">The minimum number of items required to trigger the discount.</param>
            <param name="maxDepth">The maximum number of items required to trigger the discount.</param>
            <param name="qtyRemaining">The remaining quantities of the item groups after other items have been used.</param>
            <param name="itemsUsed">The items used on the current path.</param>
            <param name="line">The discount line to determine the possible applications for.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsCoveredForHighestQuantityLevel">Items covered for highest quantity level.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The currentIndex value to use for the next iteration.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetDiscountApplicationMultiplesForItemsFastModeOptimizedForSpeed(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[])">
            <summary>
            Gets the collection of discount applications for the items on the transaction in fast mode, optimized for speed.
            Goes through each discount line, uses up all available quantities.
            </summary>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="remainingQuantities">The remaining quantities of the item groups.</param>
            <returns>The collection of discount applications for this discount on the transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.GetDiscountApplicationMultiplesForItemsFastModeOptimizedForDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[])">
            <summary>
            Gets the collection of discount applications for the items on the transaction in fast mode, optimized for deal.
            </summary>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="remainingQuantities">The remaining quantities of the item groups.</param>
            <returns>The collection of discount applications for this discount on the transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.OptimizeDiscountLineNumberAndItemGroupIndexLookups(System.Decimal[],System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Optimize discount line number to item group index set and item group index to discount line number set lookups.
            </summary>
            <param name="quantitiesApplicable">Quantities applicable.</param>
            <param name="itemsWithOverlappingDiscounts">Items with external overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <remarks>Private, but internal for test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.AddDiscountApplicationToAvailableResult(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Collections.Generic.Stack{System.Int32},Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine)">
            <summary>
            Adds a discount application to the available discount applications result.
            </summary>
            <param name="discountableItemGroups">The item groups on the transaction.</param>
            <param name="result">The collection of DiscountApplication objects that will be included in the result.</param>
            <param name="itemsUsed">The items used for this particular application.</param>
            <param name="line">The discount line used for this particular application.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.DiscountLineQuantityComparer">
            <summary>
            Discount line quantity comparer
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.DiscountLineQuantityComparer.#ctor(System.Collections.Generic.Dictionary{System.Decimal,System.Collections.Generic.HashSet{System.Int32}},System.Collections.Generic.Dictionary{System.Decimal,System.Collections.Generic.HashSet{System.Int32}},System.Decimal[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.DiscountLineQuantityComparer"/> class.
            </summary>
            <param name="discountLineNumberToNonOverlapItemGroupIndexSetLookup">The discount line number to non overlap item group index set lookup.</param>
            <param name="discountLineNumberToOverlapItemGroupIndexSetLookup">The discount line number to overlap item group index set lookup.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscount.DiscountLineQuantityComparer.CompareQuantityByDiscountLineNumber(System.Decimal,System.Decimal)">
            <summary>
            Compares the quantity by discount line number.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>Compared quantity.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscountApplication">
            <summary>
            Multiple buy discount application.
            </summary>
            <seealso cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscountApplication.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscountApplication" /> class.
            </summary>
            <param name="discount">The discount.</param>
            <param name="removeItemsFromLookupsWhenApplied">Whether to remove items from lookups when applied.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscountApplication.DiscountPercentValue">
            <summary>
            Gets or sets the application-specific discount percentage value.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscountApplication.DealPriceValue">
            <summary>
            Gets or sets the application-specific deal or unit price value.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.MultipleBuyDiscountApplication.Copy">
            <summary>
            Copies the multiply buy discount applications.
            </summary>
            <returns>The copy.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount">
            <summary>
            This class implements the standard (single-line) discount processing, including the determination of which ways
            the discount can apply to the transaction and the value of the discount applied to specific lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountTreatedAsSimple#CanBeTreatedAsSimpleDiscount">
            <summary>Gets a value indicating whether or not it can be tagged along in forming composite discount application.</summary>
            <remarks>See CompositeDiscountApplication.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.GetDiscountApplicationMultiplesNonOverlappedWithBestDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Gets non-overlapped best-deal discount application multiples that can be applied right away.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Non-overlapped discount application multiples that can be applied right away.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.GetPossibleBasicDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Boolean@)">
            <summary>
            Gets all of the possible applications of this discount to the specified transaction and line items.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The possible permutations of line items that this discount can apply to, or an empty collection if this discount cannot apply.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.PreCalculateDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculates discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">Item group index to discounted price lookup.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount application multiples.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountTreatedAsSimple#ConstructOneItemDiscountApplicationForSimpleDiscount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Construct one item discount application for simple discount.
            </summary>
            <param name="discountApplications">Discount application list to hold the new discount application.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <remarks>
            Note 1: only for simple discount.
            Note 2: used in special optimization with one-line-group mix and match and discount offer overlap.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountPerItemReduce#GetSingleItemNonOverlappedDiscountResult(System.Int32,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get single item non-overlapped discount result.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <returns>Single item non-overlapped discount result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountPerItemReduce#IsItemLikelyEvaluatedWithOtherItems(System.Int32)">
            <summary>
            Determines if the item is likely evaluated with other items.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <returns>Always false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscount.CreateAppliedDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Applies the discount application and gets the value, taking into account previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="discountApplication">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of the discount application.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase">
            <summary>
            This class implements the standard (single-line) discount processing, including the determination of which ways
            the discount can apply to the transaction and the value of the discount applied to specific lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.EffectiveDiscountMethodForOrdering">
            <summary>
            Gets effective discount method for ordering.
            </summary>
            <remarks>
            Used in concurrency control model of best price and compound within priority and no compound across.
            We process compoundable discounts in following order: offer/unit/deal price, amount off and percentage off.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/04/04/dynamics-retail-discount-concept-effective-discount-method-for-compound-ordering/">Dynamics Retail Discount Concept: Effective Discount Method for Compound Ordering</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.ConstructItemQuantitiesForDiscountApplication(System.Int32,System.Decimal)">
            <summary>
            Constructs item quantities for discount application of an item.
            </summary>
            <param name="indexGroupIndex">Item group index.</param>
            <param name="quantity">Item quantity.</param>
            <returns>Item quantities for the discount application of the item.</returns>
            <remarks>For each line item, item quantity for discount application is 1 if line item quantity is integer and the whole quantity if fractional.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.GetDiscountValueFromDefinition(System.Int32,Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine,System.Decimal,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets discount value from definition for offer discount.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="retailDiscountLine">Retail discount line definition.</param>
            <param name="originalPrice">Original price.</param>
            <param name="prices">Price lookup.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount value.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.GetEffectiveDiscountMethodForOrdering(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication)">
            <summary>
            Gets the effective discount method for ordering.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <returns>Effective discount method for ordering.</returns>
            <remarks>
            Used in pricing zone concurrency control model when compounding multiple discounts.
            For pricing zone model, we process compounding discounts in following order: offer/unit/deal price, amount off and percentage off.
            Not used in compete within priority and compound across.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.BuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Before we evaluate discounts, each discount can build up additional lookup tables and streamline them.
            For discount offer with or without quantity limit, this means compare and eliminate internal overlapped line definitions.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Whether items have been removed.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.GetEffectiveDiscountMethodForOrdering(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine)">
            <summary>
            Gets the effective discount method for ordering.
            </summary>
            <param name="line">The line.</param>
            <returns>Effective discount method for ordering.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.GetSortValue(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup)">
            <summary>
            Gets the sort value to use for the specified discount line and item group for the offer discount.
            </summary>
            <param name="discountLine">The discount line used for this application.</param>
            <param name="discountableItemGroup">The item group used for this application.</param>
            <returns>The sort value, with deal price 2, amount off 1 and percentage off 0.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.GetUnitDiscountAmount(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the unit discount amount.
            </summary>
            <param name="discountLineDefinition">The discount line definition.</param>
            <param name="originalPrice">The original price.</param>
            <param name="price">The price.</param>
            <param name="priceContext">The price context.</param>
            <returns>Unit discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.PreCalculateDiscountApplicationInternal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculates discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">Item group index to discounted price lookup.</param>
            <param name="priceContext">Price Context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.ConstructOneItemDiscountApplicationForSimpleDiscountInternal(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Construct one item discount application for simple discount.
            </summary>
            <param name="discountApplications">Discount application list to hold the new discount application.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <remarks>
            Note 1: only for simple discount.
            Note 2: used in special optimization with one-line-group mix and match and discount offer overlap.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.CreateAppliedDiscountApplicationInternal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem)">
            <summary>
            Creates the applied discount application internal.
            </summary>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="remainingQuantities">The remaining quantities.</param>
            <param name="appliedDiscounts">The applied discounts.</param>
            <param name="discountApplication">The discount application.</param>
            <param name="priceContext">The price context.</param>
            <param name="retailDiscountLineItem">The retail discount line item.</param>
            <returns>Applied discount application.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.HasInsurmountableOverlap(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountOfferMethod,System.Int32,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines whether [has insurmountable overlap] [the specified offer method].
            </summary>
            <param name="offerMethod">The offer method.</param>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="itemsWithOverlappingDiscounts">The items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">The items with overlapping discounts compounded only.</param>
            <returns>
              <c>true</c> if [has insurmountable overlap] [the specified offer method]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountBase.ConstructDiscountApplicationForOneItem(System.Int32,System.Collections.Generic.HashSet{System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Constructs the discount application for one item.
            </summary>
            <param name="itemGroupIndex">Index of the item group.</param>
            <param name="discountLineNumberSet">The discount line number set.</param>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <param name="quantity">The quantity.</param>
            <param name="priceContext">The price context.</param>
            <returns>Discount application.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl">
            <summary>
            Offer discount with line quantity control.
            1. Quantity control per line.
            2. If a line is covered by multiple discount line definitions, then we will reduce it to one.
            3. It doesn't work with scale items.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/17/retail-discount-design-simplex-discount-with-quantity-control/">more here</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
            <param name="quantityLimit">Quantity limit.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.QuantityLimit">
            <summary>Gets quantity limit.</summary>
            <remarks>For now, quantity limit per distinct product (not variant).</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountTreatedAsSimple#CanBeTreatedAsSimpleDiscount">
            <summary>Gets a value indicating whether or not it can be treated as simple discount.</summary>
            <remarks>See CompositeDiscountApplication.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountLimitControl#NeedLimitControl">
            <summary>Gets a value indicating whether it needs limit control.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountLimitControl#ApplyWithLimitControl(System.Object,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,System.Int32)">
            <summary>
            Apply with limit control.
            </summary>
            <param name="existingLimitControl">Existing limit control.</param>
            <param name="discountApplication">Discount application.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>Updated limit control.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountLimitControl#CanApplyWithLimitControl(System.Object,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,System.Int32)">
            <summary>
            Checks if we can apply the discount application.
            </summary>
            <param name="existingLimitControl">Existing limit control.</param>
            <param name="discountApplication">Discount application.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>true if we can apply the discount application; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountLimitControl#KeepTrackOfApplied(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication})">
            <summary>
            Keeps track of already applied.
            </summary>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.GetDiscountApplicationMultiplesNonOverlappedWithBestDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Gets non-overlapped best-deal discount application multiples that can be applied right away.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Non-overlapped discount application multiples that can be applied right away.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.GetPossibleBasicDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Boolean@)">
            <summary>
            Gets all of the possible applications of this discount to the specified transaction and line items.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>The possible permutations of line items that this discount can apply to, or an empty collection if this discount cannot apply.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.PreCalculateDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculates discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">Item group index to discounted price lookup.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount application multiples.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountTreatedAsSimple#ConstructOneItemDiscountApplicationForSimpleDiscount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Construct one item discount application for simple discount.
            </summary>
            <param name="discountApplications">Discount application list to hold the new discount application.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <remarks>
            Note 1: only for those that can be treated for simple discounts. See property: CanBeTreatedAsSimpleDiscount.
            Note 2: used in special optimization with one-line-group mix and match and discount offer overlap.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountPerItemReduce#GetSingleItemNonOverlappedDiscountResult(System.Int32,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get single item non-overlapped discount result.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <returns>Single item non-overlapped discount result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IDiscountPerItemReduce#IsItemLikelyEvaluatedWithOtherItems(System.Int32)">
            <summary>
            Determines if the item is likely evaluated with other items.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <returns>true if it's quantity control; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.CreateAppliedDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Applies the discount application and gets the value, taking into account previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="discountApplication">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of the discount application.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.BuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Before we evaluate discounts, each discount can build up additional lookup tables and streamline them.
            For discount offer with or without quantity limit, this means compare and eliminate internal overlapped line definitions.
            </summary>
            <param name="discountableItemGroups">Discountable item groups of sales lines.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Whether items have been removed.</returns>
            <remarks>
            After this, each item group index belongs to only one discount line definition. In other words, no more internal overlap.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.ToString">
            <summary>
            To string.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.OfferDiscountLineQuantityControl.GetItemGroupIndexArraySortedByUnitDiscountValue(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine,System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets item group index array sorted by discount value.
            </summary>
            <param name="discountLineDefinition">Discount line definition.</param>
            <param name="itemGroupIndexSet">Item group index set.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscounts">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <param name="unitDiscountLookupByItemGroupIndex">Output: unit discount lookup by item group index.</param>
            <returns>Item group index array sorted by discount value.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount">
            <summary>
            Priority discount base amount.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount" /> class.
            </summary>
            <param name="discountBaseAmount">Discount base amount.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount.#ctor(System.Int32,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount" /> class.
            </summary>
            <param name="priority">Pricing priority.</param>
            <param name="discountBaseAmount">Discount base amount.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount.Priority">
            <summary>Gets the pricing priority.</summary>
            <remarks>Null means it is pre-discount-calculation discount base amount.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount.DiscountBaseAmount">
            <summary>Gets the discount base amount.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount.GetDiscountBaseAmount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount},System.Int32,System.Decimal)">
            <summary>
            Gets the discount base amount.
            </summary>
            <param name="priorityDiscountBaseAmountsOrdered">The priority discount base amounts ordered.</param>
            <param name="priority">The priority.</param>
            <param name="defaultDiscountBaseAmount">The default discount base amount.</param>
            <returns>Discount base amount.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem">
            <summary>
            This class contains the item group index and retail discount line for a matching line within a discount application.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem.#ctor(System.Int32,Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscountLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem" /> class.
            </summary>
            <param name="itemGroupIndex">The item group index.</param>
            <param name="retailDiscountLine">Retail discount line definition.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem.ItemGroupIndex">
            <summary>
            Gets or sets the item group index.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.RetailDiscountLineItem.RetailDiscountLine">
            <summary>
            Gets or sets the discount line that the item belongs to for this application.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult">
            <summary>
            Single item non-overlapped discount result, for offer discounts and quantity discounts.
            </summary>
            <remarks>
            It's used for comparing and reducing overlapped discount offers and quantity discounts per item.
            See: DiscountCalculator.ReduceOverlappedOfferAndQuantityDiscountsPerItem.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountOfferMethod,System.Decimal,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.DataModel.ConcurrencyMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult" /> class.
            </summary>
            <param name="discountMethod">Discount method.</param>
            <param name="discountAmount">Discount amount.</param>
            <param name="discountPercentage">Discount percentage.</param>
            <param name="offerPrice">Offer price.</param>
            <param name="unitDiscountAmount">Unit discount amount.</param>
            <param name="concurrencyMode">Concurrency mode.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountOfferMethod,System.Decimal,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.DataModel.ConcurrencyMode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult" /> class.
            </summary>
            <param name="discountMethod">Discount method.</param>
            <param name="discountAmount">Discount amount.</param>
            <param name="discountPercentage">Discount percentage.</param>
            <param name="offerPrice">Offer price.</param>
            <param name="unitDiscountAmount">Unit discount amount.</param>
            <param name="concurrencyMode">Concurrency mode.</param>
            <param name="isIndependentOfOverlappedDiscounts">A value indicating whether it's independent of overlapped discounts.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.NotApplicable">
            <summary>Gets the not applicable result.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.IsApplicable">
            <summary>Gets a value indicating whether it is applicable.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.DiscountMethod">
            <summary>Gets the discount method.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.DiscountAmount">
            <summary>Gets the discount amount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.DiscountPercentage">
            <summary>Gets the discount percentage.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.OfferPrice">
            <summary>Gets the offer price.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.UnitDiscountAmount">
            <summary>Gets the unit discount amount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.CanCompound">
            <summary>Gets a value indicating whether it can be compounded.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.IsIndependentOfOverlappedDiscounts">
            <summary>Gets a value indicating whether it is independent overlapped discounts.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.CompareCompoundedApplicationSequence(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult)">
            <summary>
            Compare two compounded results by application sequence.
            </summary>
            <param name="x">First single item non-overlapped discount result.</param>
            <param name="y">Second single item non-overlapped discount result.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.SingleItemNonOverlappedDiscountResult.GetComparison">
            <summary>
            Gets the comparison of single item non overlapped discount result.
            </summary>
            <returns>Single item non overlapped result.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount">
            <summary>
            Class containing properties for tender discount type.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.OfferId">
            <summary>Gets or sets offer id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.OfferName">
            <summary>Gets or sets offer name.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.TenderTypeId">
            <summary>Gets or sets tender type id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.CardTypeId">
            <summary>Gets or sets card type id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.AmountThreshold">
            <summary>
            Gets or sets the percent off amount if this is a discount offer rule.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.DiscountPercent">
            <summary>Gets or sets discount percentage.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.IsTenderDiscountAllowedForItem(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.String)">
            <summary>
            Determines whether the specified item group is eligible for discounts (based on the NoDiscount flag).
            </summary>
            <param name="priceContext">The item group to examine.</param>
            <param name="itemId">The item group to examine 1.</param>
            <returns>True if the item may be discounted, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount.MatchTenderLineAttributesToDiscountRule(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount,Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine)">
            <summary>
            Matches tender type and cardy type to given tender discount.
            </summary>
            <param name="tenderDiscount">Tender discount.</param>
            <param name="tenderLine">Tender line to match discount.</param>
            <returns>True if tender discount matches attributes, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount">
            <summary>
            This class implements the threshold (by amount) discount processing, including the determination of which ways
            the discount can apply to the transaction and the value of the discount applied to specific lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount" /> class.
            </summary>
            <param name="validationPeriod">Validation period.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.ThresholdDiscountTiers">
            <summary>
            Gets the threshold discount tiers for this discount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.EffectiveDiscountMethodForOrdering">
            <summary>
            Gets effective discount method for ordering.
            </summary>
            <remarks>
            Used in concurrency control model of best price and compound within priority and no compound across.
            We process compoundable discounts in following order: offer/unit/deal price, amount off and percentage off.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/04/04/dynamics-retail-discount-concept-effective-discount-method-for-compound-ordering/">Dynamics Retail Discount Concept: Effective Discount Method for Compound Ordering</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.CreateAppliedDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the value of the specified discount application on the transaction, possibly including previously applied discounts.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="remainingQuantities">The quantities remaining for each item.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="discountApplication">The specific application of the discount to use.</param>
            <param name="priceContext">The pricing context to use.</param>
            <returns>The value of the discount application.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount application multiples.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.BuildAndStreamlineLookups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Before we evaluate discounts, each discount can build up additional lookup tables and streamline them.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>Whether items have been removed.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.ToString">
            <summary>
            To string.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.GenerateDiscountLinesDictionary(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication,Microsoft.Dynamics.Commerce.Runtime.DataModel.ThresholdDiscountTier,System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Generate discount lines dictionary from the applied discount application.
            </summary>
            <param name="discountableItemGroups">The transaction line items.</param>
            <param name="discountApplicationToApply">The specific application of the discount to use.</param>
            <param name="tier">The threshold tier to calculate discount.</param>
            <param name="itemPrices">Item prices.</param>
            <param name="priceContext">The pricing context to use.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ThresholdDiscount.GetTotalThresholdAmountForCoveredLines(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Decimal[],System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Gets the total amount on the transaction for the lines that may be used by this threshold discount.
            </summary>
            <param name="discountableItemGroups">The discountable item groups on the transaction.</param>
            <param name="remainingQuantities">The remaining quantities of the item groups.</param>
            <param name="appliedDiscounts">The previously applied discounts.</param>
            <param name="itemPrices">The average prices of items on the transaction after previously applied compounding discounts.</param>
            <param name="discountedItems">The items that will be discounted by this application of the threshold discount.</param>
            <returns>The total amount for the lines specified.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TransactionTotals">
            <summary>
            Contains transaction totals used by tender discount calculation.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TransactionTotals.TotalAmount">
            <summary>
            Gets or sets total amount.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters">
            <summary>
            These parameters indicate which types of AX discounts (aka trade agreement discounts, aka not Retail Periodic Discounts)
            are currently activated and should be allowed on the transaction.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.enabledCombinations">
            <summary>
            Contains all combinations deemed valid by PriceParameters table in database.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.CreateAndInitialize(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Create a new DiscountParameters object and initialize from database if possible.
            </summary>
            <param name="pricingDataManager">Data manager to access pricing data.</param>
            <returns>Newly fetched and initialized DiscountParameters object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.CreateAndInitialize(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceParameters)">
            <summary>
            Create a new DiscountParameters object from the passed in data.
            </summary>
            <param name="priceParameters">Data model object representing price activation options.</param>
            <returns>Newly fetched and initialized DiscountParameters object.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.ValidRelation(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode,System.String)">
            <summary>
            True if there is a valid relation between the item code and relation.
            </summary>
            <param name="itemCode">The item code (table,group,all).</param>
            <param name="relation">The item relation.</param>
            <returns>Returns true if the relation ok, else false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.ValidRelation(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountAccountCode,System.String)">
            <summary>
            True if there is a valid relation between the account code and relation.
            </summary>
            <param name="accountCode">The account code (table,group,all).</param>
            <param name="relation">The account relation.</param>
            <returns>True if the account code allows the given relation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.Activation(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountType,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountAccountCode,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode)">
            <summary>
            Returns true or false, whether a certain relation is active for a discount search.
            </summary>
            <param name="relation">The trade agreement relation(price, line discount, multiline discount, total discount).</param>
            <param name="accountCode">The account code(table,group,all).</param>
            <param name="itemCode">The item code(table,group,all).</param>
            <returns>Returns true if the relation is active, else false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.CreateCombo(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountType,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountAccountCode,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode)">
            <summary>
            Helper method to create new 3-tuple of trade agreement combination.
            </summary>
            <param name="relation">The type of trade agreement (price, line discount, etc.).</param>
            <param name="accountCode">The type of customer (single, group, all).</param>
            <param name="itemCode">The type of item (single, group, all).</param>
            <returns>3-tuple containing the given combination.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.GetDiscountParameters(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Get discount parameters from the database. These parameters tell what search possibilities are active.
            Populate the internal set of enabled trade agreement combinations based on fetched values.
            </summary>
            <param name="pricingDataManager">The data manager which returns pricing data.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters.GetDiscountParameters(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceParameters)">
            <summary>
            Populate the internal set of enabled trade agreement combinations based on values in given PriceParameters object.
            </summary>
            <param name="priceParameters">Data model object representing price activation options.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMixAndMatchBase">
            <summary>
            Discount package for mix and match base.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMixAndMatchBase.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMixAndMatchBase" /> class.
            </summary>
            <param name="discountType">Retail discount type.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMixAndMatchBase.DiscountOfferType">
            <summary>Gets the discount type.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMixAndMatchBase.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates the discount.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMixAndMatchBase.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMultipleBuy">
            <summary>
            Discount package for quantity discounts.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMultipleBuy.DiscountOfferType">
            <summary>Gets the discount type.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMultipleBuy.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates the discount.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageMultipleBuy.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOffer">
            <summary>
            Discount package for offer discount.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOffer.DiscountOfferType">
            <summary>Gets the discount type.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOffer.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates the discount.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOffer.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOfferLineLimit">
            <summary>
            Discount package for offer discount with line limit.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOfferLineLimit.DiscountOfferType">
            <summary>Gets the discount type.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOfferLineLimit.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates the discount.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageOfferLineLimit.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageThreshold">
            <summary>
            Discount package for threshold discount.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageThreshold.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageThreshold" /> class.
            </summary>
            <param name="discountType">Retail discount type.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageThreshold.DiscountOfferType">
            <summary>Gets the discount type.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageThreshold.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates the discount.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountPackageThreshold.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore">
            <summary>Retail discount store.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.Transation">
            <summary>
            Gets the sales transaction.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.PricingDataManager">
            <summary>
            Gets the pricing data manager.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.GetProductOrVariantToDiscountMapLive(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Gets the product/variant Id to retail discounts lookup live.
            </summary>
            <param name="transaction">Sales transaction.</param>
            <param name="priceContext">Price context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <returns>The product/variant Id to discounts lookup.</returns>
            <remarks>
            First it loads discount data by items in transaction, then it massages data into a lookup. It's a bit like repository pattern.
            [Customization] Override this, only if you want complete control of how to load retail discount data.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.GetTenderDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV2)">
            <summary>
            Return all tender discounts by ProductRecId
            </summary>
            <param name="transaction">The transaction.</param>
            <param name="tenderLines">Applicable tender lines for discount.</param>
            <param name="priceContext">The price context.</param>
            <param name="pricingDataManager">The pricing data manager.</param>
            <returns>Tender discounts by productRecId</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.ConvertRetailDiscountToDiscountBase(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscount)">
            <summary>
            Converts retail discount data from database to discount object.
            </summary>
            <param name="retailDiscount">Retail discount data from database.</param>
            <returns>Discount object.</returns>
            <remarks>This is private. Exposed as internal for test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates discount from retail discount and line data.
            </summary>
            <param name="discountAndLine">Retail discount and line data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.CreateRetailDiscountLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Creates retail discount line.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <param name="discount">The discount.</param>
            <returns>Retail discount line.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.Cleanup">
            <summary>
            Cleans up as the store instance will be reused.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.SetEffectiveDiscountPriorityFromPriceGroups(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Sets effective discount priority from price groups.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.GetRetailDiscountsAndLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.ItemUnit},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets list of discount lines corresponding to products.
            </summary>
            <param name="items">The collection of products.</param>
            <param name="priceContext">The pricing context.</param>
            <returns>List of discounts.</returns>
            <remarks>
            The method returns flattened list of discounts which roughly speaking means: it returns 1 line per each possible discount for every product.
            It validates discount validation period, and remove invalid ones.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.LoadDiscountCommonData(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Loads discount common data: discount codes and price groups.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <remarks>
            For Customization.
            [Customization] Override this, say, if you have a new discount type, and you have additional data.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailDiscountStore.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.RetailDiscount)">
            <summary>
            Creates discount from retail discount data.
            </summary>
            <param name="retailDiscount">Retail discount data.</param>
            <returns>The discount.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.AxUnitOfMeasureConversion">
            <summary>
            Represents an AX unit of measure conversion.
            </summary>
            <remarks>
            <para>
            Since the PricingEngine is used on both AX and CRT, we must take into account that unit of measure conversions are performed in different ways in each place (even though they yield the same result).
            In order to avoid duplicating the code to lookup which unit of measure conversion exists, the pricing engine AX wrapper uses the <c>UnitOfMeasureConverter</c> AX class,
            but this class uses a somewhat different modeling to handle unit of measure conversions.
            Instead of using the <see cref="P:Microsoft.Dynamics.Commerce.Runtime.DataModel.UnitOfMeasureConversion.IsBackward"/>, it actually stores a <see cref="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.AxUnitOfMeasureConversion.FactorDenominator"/> that can be used for "backwards" calculation.
            </para>
            <para>
            Forwards calculation means:
            - Item sales unit is pieces
            - A conversion between boxes and pieces exists
            - A sales order is created using boxes
            </para>
            <para>
            Backwards calculation means:
            - Item sales unit is pieces
            - A conversion between pieces and boxes exists
            - A sales order is created using boxes
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.AxUnitOfMeasureConversion.FactorDenominator">
            <summary>
            Gets or sets the factor denominator.
            </summary>
            <value>
            The factor denominator.
            </value>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountBaseExtensions">
            <summary>
            Discount base extensions for pricing.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountBaseExtensions.IsThreshold(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Represent if the discount is threshold discount.
            </summary>
            <param name="discount">The discount applied.</param>
            <returns>True if the discount is threshold discount; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics">
            <summary>
            Pricing arithmetic.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics.GetDiscountAmountForDealUnitPrice(System.Decimal,System.Decimal)">
            <summary>
            Calculates discount amount for deal unit price.
            </summary>
            <param name="itemPrice">Item price.</param>
            <param name="dealUnitPrice">Deal unit price.</param>
            <returns>Discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics.GetDiscountAmountForPercentageOff(System.Decimal,System.Decimal)">
            <summary>
            Calculates discount amount for percentage off.
            </summary>
            <param name="itemPrice">Item price.</param>
            <param name="percentageOff">Percentage off.</param>
            <returns>Discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics.GetDiscountAmountFromDealPrice(System.Decimal,System.Decimal)">
            <summary>
            Get discount amount from deal price.
            </summary>
            <param name="price">The price.</param>
            <param name="dealPrice">Deal price.</param>
            <returns>The discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics.GetUnitDiscountAmount(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountOfferMethod,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets unit discount amount.
            </summary>
            <param name="discountMethod">Discount method.</param>
            <param name="offerPrice">Offer price or unit price.</param>
            <param name="amountOff">Amount off.</param>
            <param name="percentageOff">Percentage off.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="priceContext">Price context.</param>
            <returns>Unit discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics.GetUnitDiscountAmountAndCheckWhetherItsFullyCovered(Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountOfferMethod,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Boolean@)">
            <summary>
            Gets unit discount amount.
            </summary>
            <param name="discountMethod">Discount method.</param>
            <param name="offerPrice">Offer price or unit price.</param>
            <param name="amountOff">Amount off.</param>
            <param name="percentageOff">Percentage off.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="priceContext">Price context.</param>
            <param name="isFullyCovered">A value indicating whether intended discount is fully covered.</param>
            <returns>Unit discount amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingArithmetics.IsFraction(System.Decimal)">
            <summary>
            Checks whether the number is a fraction number.
            </summary>
            <param name="number">The number.</param>
            <returns>true if it is a fraction number; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesLineExtensions">
            <summary>
            Sales line extensions for pricing.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesLineExtensions.CalculatePricingNetAmount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculates pricing net amount.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="priceContext">Price context.</param>
            <returns>Pricing net amount.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesTransactionExtensions">
            <summary>
            Sales Transaction extensions for pricing.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesTransactionExtensions.GetDiscountCalculableSalesLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Boolean,System.Boolean)">
            <summary>
            Gets the sales lines that needs to be included in discount calculations.
            </summary>
            <param name="transaction">Sales Transaction.</param>
            <param name="applyDiscountsToPriceKeyedIn">Apply Discounts To Price Keyed In.</param>
            <param name="applyDiscountsToPriceOverrides">Apply Discounts To Price Overrides.</param>
            <returns>Sales Lines that are to be included in discount calculations.</returns>
            <remarks>
            This acts as a projection of the sales lines, allowing discounts to operate over
            the subset of the sales lines for whose IsPriceLocked property is false.
            Note that this might cause unexpected scenarios likes mix and match discounts
            not being applied due to the fact that one product is price locked, and the order is not.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesTransactionExtensions.GetDiscountCalculableSalesLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the sales lines that needs to be included in discount calculations.
            </summary>
            <param name="transaction">Sales Transaction.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Sales Lines that are to be included in discount calculations.</returns>
            <remarks>
            This acts as a projection of the sales lines, allowing discounts to operate over
            the subset of the sales lines for whose IsPriceLocked property is false.
            Note that this might cause unexpected scenarios likes mix and match discounts
            not being applied due to the fact that one product is price locked, and the order is not.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesTransactionExtensions.GetProductVariantMasterIds(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets distinct Product and Variant product ids
            </summary>
            <param name="transaction">Sales Transaction.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Distinct product ids</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SalesTransactionExtensions.IsEligibleForDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            True if this sales line may be valid for discounting (i.e. hasn't been voided, had price keyed in or had a price override).
            </summary>
            <param name="line">The sales line.</param>
            <param name="priceContext">Price Context.</param>
            <returns>A value indicating whether the sales line may be valid for discounting.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler">
            <summary>
            Simple profiler.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="indent">Indent times.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="logStart">Log start.</param>
            <param name="indent">Indent times.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.Enabled">
            <summary>
            Gets or sets a value indicating whether it's enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.RecordTime">
            <summary>
            Gets or sets a value indicating whether to record time.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.Dispose">
            <summary>
            Dispose and log.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.SimpleProfiler.GetTimeLapsed">
            <summary>
            Gets time lapsed.
            </summary>
            <returns>Time lapsed.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx">
            <summary>
            Type helper for Dynamics AX.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx" /> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx.CreateSetOfString">
            <summary>
            Create a set of string.
            </summary>
            <returns>An empty set of string.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx.CreateSetOfLong">
            <summary>
            Create a set of long.
            </summary>
            <returns>An empty set of long.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx.CreateListOfType(System.Type)">
            <summary>
            Create a list of a type at runtime.
            </summary>
            <param name="type">The base type.</param>
            <returns>An empty list of the given type.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TypeHelperForAx.GetExtensiblePeriodicDiscountOfferTypeByValue(System.Int32)">
            <summary>
            Gets an instance of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType"/> given the provided value.
            </summary>
            <param name="value">The integer value of the enumeration.</param>
            <returns>The corresponding <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.UnitOfMeasureOperations">
            <summary>
            This class is responsible for choosing which unit of measure strategy is going to be used, depending on the environment that the pricing engine is running.
            If the pricing engine is running inside CRT, then <see cref="T:Microsoft.Dynamics.Commerce.Runtime.UnitOfMeasureConversionExtension"/> is invoked.
            If the pricing engine is running inside AX, then a trivial equation is solved in order to obtain the converted value.
            </summary>
            <remarks>
            Ideally the implementation of this class should've followed the same pattern that we use for <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations"/>, providing one implementation per execution environment.
            But introducing a <c>IUnitOfMeasureOperations</c> would've meant changing lots of methods inside <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine"/> and <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CommerceRuntimePriceAndDiscount"/>,
            and doing that without introducing a breaking change would be very challenging.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.UnitOfMeasureOperations.Convert(Microsoft.Dynamics.Commerce.Runtime.DataModel.UnitOfMeasureConversion,System.Decimal)">
            <summary>
            Performs unit of measure conversions the CRT way.
            </summary>
            <param name="unitOfMeasureConversion">The unit of measure conversion.</param>
            <param name="fromQuantity">The quantity to be converted.</param>
            <returns>The converted quantity.</returns>
            <remarks>
            In CRT, we figure out the available conversions using a Request/Response pair and then invoke this method to do the actual calculation.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.UnitOfMeasureOperations.Convert(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.AxUnitOfMeasureConversion,System.Decimal)">
            <summary>
            Performs unit of measure conversions the AX way.
            </summary>
            <param name="axUoMConversion">The unit of measure conversion.</param>
            <param name="fromQuantity">The quantity to be converted.</param>
            <returns>The converted quantity.</returns>
            <remarks>
            In AX, we use the <c>UnitOfMeasureConverter</c> X++ class to figure out the available conversions, then we use the <c>UnitOfMeasureConversionCache</c> returned by it to instantiate a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.AxUnitOfMeasureConversion"/>
            that can be used by the pricing engine. See <c>RetailPricingUnitOfMeasureConversionHelper</c> X++ class for more details.
            The equation used below is inspired on the equation used at <c>performValueConversion</c> method of the <c>UnitOfMeasureConverter</c> X++ class.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.UnitOfMeasureOperations.GetFactorForQuantity(Microsoft.Dynamics.Commerce.Runtime.DataModel.UnitOfMeasureConversion,System.Decimal)">
            <summary>
            Gets the factor for quantity.
            </summary>
            <param name="unitOfMeasureConversion">The unit of measure conversion.</param>
            <param name="quantity">The quantity.</param>
            <returns>The factor.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator">
            <summary>
            Represents a validation period and encapsulates logic to decide
             if the validation period is currently active.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.NoDate">
            <summary>
            The sentinel value for 'no date specified'.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator" /> class from being created.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.ValidationType">
            <summary>
            Gets the validation type of the validation period.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.StartDate">
            <summary>
            Gets or sets the beginning date of the period.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.EndDate">
            <summary>
            Gets or sets the ending date of the period.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.ValidateDateAgainstValidationPeriod(Microsoft.Dynamics.Commerce.Runtime.DataModel.DateValidationType,Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Validate date against validation period.
            </summary>
            <param name="validationType">Validation type.</param>
            <param name="validationPeriod">Validation period.</param>
            <param name="startDate">Pricing start date.</param>
            <param name="endDate">Pricing end date.</param>
            <param name="dateToCheck">Date to check.</param>
            <returns>True if it's valid.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.CreateStandard(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Create a simple validation period (start date -> end date).
            </summary>
            <param name="startDate">Date period becomes active.</param>
            <param name="endDate">Date period becomes inactive.</param>
            <returns>Validation period.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.IsActive(System.DateTimeOffset)">
            <summary>
            For the given date/time is the validation period instance active.
            </summary>
            <param name="currentTime">Date/time to check for activity.</param>
            <returns>True is validation period instance is active for date/time; False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.IsDateWithinStartEndDate(System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Determines whether [is date within start end date] [the specified date to check].
            </summary>
            <param name="dateToCheck">The date to check.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>
              <c>true</c> if [is date within start end date] [the specified date to check]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.CreateAdvanced(Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationPeriod)">
            <summary>
            Creates the advanced.
            </summary>
            <param name="period">The period.</param>
            <returns>Validation period validator.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.IsTimeActiveForConfiguration(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.PeriodRangeConfiguration,System.Boolean)">
            <summary>
            For a given time, and period time-range setup, and whether to restrict our search to after midnight,
             this method tells if the given time is active or inactive within the context of the range.
            </summary>
            <param name="currentTime">Current time in seconds past midnight.</param>
            <param name="configuration">Period time range setup parameters.</param>
            <param name="testOnlyAfterMidnight">Whether we only check for activity after midnight.</param>
            <returns>Result telling if given time is active in the configuration.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.PeriodRangeConfiguration">
            <summary>
            Represent a time-range configuration for discount validation period
             These ranges have a start and end time, indicator for ending past midnight, and
             flag indicated what finding a time in this range means (i.e. whether being in the range validates/invalidates the time).
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.PeriodRangeConfiguration.StartTime">
            <summary>
            The starting time for the period range.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.PeriodRangeConfiguration.EndTime">
            <summary>
            The ending time for the period range.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.PeriodRangeConfiguration.EndsTomorrow">
            <summary>
            True if the ending time is after midnight (i.e. tomorrow).
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ValidationPeriodValidator.PeriodRangeConfiguration.IsActiveOnlyWithinBounds">
            <summary>
            True if the range is active within the given bounds. False if active outside the given bounds.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase">
            <summary>
            Best deal algorithm base.
            </summary>
            <remarks>
            We split common logic out from dynamic programming algorithm, so customization algorithm and alternative test algorithm can leverage some utilities here.
            This does not apply to threshold discounts.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase" /> class.
            </summary>
            <param name="alternative">Experiment only: a flag indicating whether to go alternative. </param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.SeedBinaryMultiplesCount">
            <summary>Gets the count of binary multiples.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.IsInterrupted">
            <summary>Gets or sets a value indicating whether the algorithm is interrupted.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.SeedBinaryMultiples">
            <summary>Gets binary-multiple seeds.</summary>
            <remarks>We use binary transaction to turn an unbounded knapsack problem into a zero-one knapsack problem.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.IsMaxPotentialReached">
            <summary>Gets or sets a value indicating whether max potential is reached.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.MaxPotential">
            <summary>Gets the max potential.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.ItemsWithOverlappingDiscounts">
            <summary>Gets the items with overlapping discounts.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.NonOverlappedItemDivisor">
            <summary>Gets the non overlapped item divisor.</summary>
            <remarks>This is used in seed sorting.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.PriceContext">
            <summary>Gets the price context.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.Seeds">
            <summary>Gets seeds.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.NeedQuantityControl">
            <summary>Gets a value indicating whether we need quantity control.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.GetNextIndexToApply(System.Int32,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication)">
            <summary>
            Gets next index of the binary multiple to apply by checking item quantities.
            </summary>
            <param name="startingNextIndex">Starting next index.</param>
            <param name="multiples">Static list of binary multiples.</param>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <param name="discountApplicationToIgnore">Discount application to ignore when checking against seeds. When it's not null, it's for purging multiples. See <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger" />.</param>
            <returns>Next index of the binary multiple to apply.</returns>
            <remarks>It's internal static so <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger" /> can reuse it.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.ConstructItemQuantitiesInTransactionLookupAndItemGroupIndexSet(System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Constructs item quantities in transaction lookup and item group index set.
            </summary>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemQuantitiesInTransaction">Item quantities in transaction.</param>
            <param name="itemIndexGroupSet">Item group index set.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.GetBestDeal(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{System.Int32},System.Decimal[])">
            <summary>
            The core of each algorithm: given item quantities, gets the best deal.
            </summary>
            <param name="seeds">Seeds of discount applications.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="remainingQuantities">Remaining item quantities.</param>
            <returns>Best deal in list of discount application multiples.</returns>
            <remarks>This is the main entrance point. If you wan to use your own algorithm, you may override this one only, and ignore the rest of virtual methods.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.ConvertSeedsWithBinaryMultiples(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Turns a unbounded knapsack problem into 0-1 knapsack problem by converting one discount application with multiple binary multiples, bounded by item quantities in the transaction.
            </summary>
            <param name="seedsSorted">Sorted seeds of discount applications.</param>
            <param name="seedBinaryMultiples">Seeds of discount application multiples to fill in reverse order.</param>
            <param name="itemQuantitiesInTransaction">Item quantities in the transaction, or in knapsack's term, weight limit.</param>
            <remarks>Pre-requisite: seed sorted ascending by contribution margin. Post: multiples descending.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.Initialize(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes for the algorithm.
            </summary>
            <param name="seeds">Seeds of discount applications.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.Cleanup">
            <summary>
            Cleans up.
            </summary>
            <remarks>The algorithm will be reused for next round. We have to clean up and release resources.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.CalculatePotential(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Calculates potentials.
            </summary>
            <param name="indexOfMultiple">Index of multiple.</param>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <returns>Discount potential.</returns>
            <remarks>By default, it looks up item potential by item group index, and sums up by available item quantities.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.PrepareAndSetupDataForAlgorithm(System.Decimal[])">
            <summary>
            Prepares and sets up data for algorithm.
            1. Pre-calculates discount applications.
            2. Purges dominated seeds and sort seeds.
            3. Generates discount application binary multiples.
            4. Purges dominated discount application binary multiples.
            5. Fills out static potentials based on multiples.
            6. Returns item quantities in transaction in lookup form.
            </summary>
            <param name="remainingQuantities">Remaining quantities in array.</param>
            <returns>Item quantities in transaction in lookup form.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.GetNextIndexToApply(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets the next index to apply.
            </summary>
            <param name="startingNextIndex">Starting next index.</param>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <returns>Next index to apply.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.ConvertSeedsWithBinaryMultiples(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Converts seeds with binary multiples.
            </summary>
            <param name="itemQuantitiesInTransaction">Item quantities in transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.FillOutStaticItemPotentials(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Fills out static item potentials.
            </summary>
            <param name="itemQuantitiesInTransaction">Item quantities in transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.PreCalculateDiscountApplications(System.Decimal[])">
            <summary>
            Pre-calculates discount applications.
            </summary>
            <param name="remainingQuantities">Remaining quantities.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase.PurgeSeedsAndSort(System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Purge seeds and sort.
            </summary>
            <param name="itemGroupIndexSet">Item group index set.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet">
            <summary>
            Represents an array of bits that allows performing logical operations and optimized methods of testing for equality and finding the number of non-zero bits.
            This class is similar to the BitArray class, except that it can be tested for equality with another BitSet and with zero, and can track the first non-zero bit.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.UnknownBit">
            <summary>
            Indicates that the next non-zero bit is unknown or does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.bitValues">
            <summary>
            Static array of bit values for each bit position in a long, used for fast checking of whether or not a bit is set.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet"/> class.
            </summary>
            <param name="size">The number of bits in the BitSet.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.#ctor(System.UInt32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet"/> class with the specified initial value.
            </summary>
            <param name="size">The number of bits in the BitSet.</param>
            <param name="initialValue">The value to set each initial bit to.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet"/> class with the specified initial values.
            </summary>
            <param name="initialValues">The initial values.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet"/> class as a copy of the specified BitSet.
            </summary>
            <param name="initialValue">The BitSet to copy for this BitSet.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.Length">
            <summary>
            Gets the length of the BitSet.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.Item(System.Int32)">
            <summary>
            Gets or sets the bit value at the specified position.
            </summary>
            <param name="x">The position of the bit.</param>
            <returns>True if the bit is set, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.Equals(System.Object)">
            <summary>
            Overrides object.Equals() to allow comparison between two BitSet values to determine if they contain the same values.
            </summary>
            <param name="obj">The object to compare with this object.</param>
            <returns>True if the object is also a BitSet and contains the same values, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.GetHashCode">
            <summary>
            Overrides object.GetHashCode() to provide a hash code based on the contents of the BitSet such that two equal BitSets will have the same hash code value.
            The implementation of this method performs an exclusive-OR on the values of the internal array, converted down to an integer to be returned.
            </summary>
            <returns>The hash code value.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.GetNumberOfNonzeroBits">
            <summary>
            Gets the number of non-zero bits in the BitSet.  This method also finds the first non-zero bit for subsequent calls to GetFirstNonZeroBit().
            This method takes exactly 64 * ceil(size / 64.0) comparisons for the first run, and is O(1) for any subsequent calls.
            </summary>
            <returns>The number of non-zero bits.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.GetFirstNonZeroBit">
            <summary>
            Gets the position of the first non-zero bit in the BitSet.  This method calls GetNumberOfNonzeroBits() internally if it has not already been called.
            </summary>
            <returns>The first non-zero bit, or UnknownBit if none exists.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.GetNextNonZeroBit(System.Int32)">
            <summary>
            Gets the next non-zero bit in the BitSet, starting at the specified index.
            </summary>
            <param name="startIndex">The starting index in the BitSet to check.</param>
            <returns>The index value of the next non-zero bit, or UnknownBit if none exists.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.IsZero">
            <summary>
            Determines if the BitSet value is zero.  If the number of non-zero bits is known from GetNumberOfNonzeroBits(), it checks that value
            to see if it is zero.  Otherwise, it examines each of the values in the internal array to determine if they are all zero, leading to a best
            case of O(1) if GetNumberOfNonzeroBits() has been called, and a worst-case of O(ceil(size / 64.0)) if it has not been called.
            </summary>
            <returns>True if all bits in the BitSet are zero, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.And(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet)">
            <summary>
            Performs a logical "AND" between two BitSet values, and produces a new BitSet containing the result.
            </summary>
            <param name="value">The BitSet to perform the operation on along with this BitSet.</param>
            <returns>The BitSet resulting from the logical operation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.Or(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet)">
            <summary>
            Performs a logical "OR" between two BitSet values, and produces a new BitSet containing the result.
            </summary>
            <param name="value">The BitSet to perform the operation on along with this BitSet.</param>
            <returns>The BitSet resulting from the logical operation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.Xor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet)">
            <summary>
            Performs a logical "XOR" (exclusive OR) between two BitSet values, and produces a new BitSet containing the result.
            </summary>
            <param name="value">The BitSet to perform the operation on along with this BitSet.</param>
            <returns>The BitSet resulting from the logical operation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet.Not">
            <summary>
            Performs a logical "NOT" (bitwise complement) on the BitSet, and produces a new BitSet containing the result.
            </summary>
            <returns>The BitSet resulting from the logical operation.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DepthFirstBestDealAlgorithm">
            <summary>
            Depth first best deal algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DepthFirstBestDealAlgorithm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DepthFirstBestDealAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DepthFirstBestDealAlgorithm.CalculateBestDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication[],System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculates the best path for application of the available discounts.
            </summary>
            <param name="discountableItemGroups">The discountable items on the transaction.</param>
            <param name="bestDiscountPath">The current best discount path.</param>
            <param name="possibleDiscountApplications">The set of possible discount applications.</param>
            <param name="remainingQuantities">The remaining quantities of each item in the discountableItemGroups parameter.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="priceContext">Price context.</param>
            <returns>true if finished, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DepthFirstBestDealAlgorithm.GetRemainingApplicationsForNonCompoundedDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication,System.Int32,System.Decimal[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet@,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet[])">
            <summary>
            Gets the remaining possible applications after using a non-compounding discount.
            </summary>
            <param name="possibleDiscountApplications">The possible discount applications.</param>
            <param name="newAppliedDiscountApplication">The newly applied discount application.</param>
            <param name="nextIndex">The next index in the possible applications to consider.</param>
            <param name="remainingQuantities">The remaining quantities of items.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="remainingApplications">The remaining applications that are possible.</param>
            <param name="availableItemDiscounts">The discounts that are available for each discountable item group.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DepthFirstBestDealAlgorithm.GetRemainingApplicationsForCompoundedDiscount(System.Collections.Generic.Stack{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication[],System.Int32,System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BitSet@)">
            <summary>
            Gets the remaining possible applications after using a compounding discount.
            </summary>
            <param name="appliedDiscountsStack">The currently applied discounts in this path.</param>
            <param name="possibleDiscountApplications">The possible discount applications.</param>
            <param name="nextIndex">The next index in the possible applications to consider.</param>
            <param name="remainingQuantitiesForCompound">The remaining quantities for compound.</param>
            <param name="remainingApplications">The remaining applications that are possible.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger">
            <summary>
            Discount applications and multiples purge, using dynamic programming.
            </summary>
            <remarks>
            We could merge it with dynamic programming algorithm as they share basic logic.
            By separating them, we could have optimization specifically for the purge, without
            compromising the clarity of dynamic programming algorithm for discount.
            As examples for purge,
            1. We don't use cache (dynamic programming memorization) here, as it's mostly a waste of space.
            2. We strive to get a dominating deal, but we don't need details of the dominated deal, hence we can simplify it a lot.
            For discounts with quantity control, we can use unrestricted (unbounded) discount applications to purge dominated others, but we can not use restricted (bounded) discount applications to purge others.
            To make it work, we need to filter out restricted discount applications.
            </remarks>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.totalQuantityToItemQuantitiesToUnboundedDiscountApplicationLookup">
            <summary>
            The lookup up by quantity tier is formulated during the purge of discount applications. It will be re-used during the purge of discount application multiples.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger" /> class.
            </summary>
            <param name="maxIterativeCount">Max iterative count.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.NumberOfIterativeCalls">
            <summary>Gets the number of iterations.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.IsInterrupted">
            <summary>Gets a value indicating whether it has been interrupted.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.ConstructTotalQuantityToItemQuantitiesToDiscountApplicationLookupAndReduceSeedBySameItemQuantities(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},System.Collections.Generic.SortedDictionary{System.Decimal,System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication}},System.Collections.Generic.SortedDictionary{System.Decimal,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication}})">
            <summary>
            Builds up all discount applications by discount application total quantity.
            And reduces dominated discount applications of the same item quantities.
            </summary>
            <param name="applications">Discount applications.</param>
            <param name="totalQuantityToItemQuantitiesToUnboundedDiscountApplicationLookup">Total quantity to item quantities to unbounded discount application lookup, to be filled.</param>
            <param name="totalQuantityToBoundedDiscountApplicationsLookup">Total quantity to bounded discount applications lookup, to be filled.</param>
            <remarks>We will apply dynamic programming to purge dominated discount applications tier by tier (of same total quantity) later.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.Purge(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.Dictionary{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.ItemQuantitiesKey,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication})">
            <summary>
            Purges dominated discount applications.
            </summary>
            <param name="discountApplicationsToPurge">Discount applications to purge.</param>
            <param name="itemGroupIndexSet">Item group index set.</param>
            <param name="allItemQuantitiesToUnboundedDiscountApplicationLookup">All item quantities to unbounded discount application lookup.</param>
            <param name="allBoundedDiscountApplications">All bounded discount applications.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeMultiples(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Purges multiples.
            </summary>
            <param name="multiplesToPurge">Multiples to purge.</param>
            <param name="itemGroupIndexSet">Item group index set.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.GetBetterDeal(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication,System.Collections.Generic.Dictionary{System.Guid,System.Int32},System.Decimal)">
            <summary>
            Gets a better deal than pre-defined discount amount.
            </summary>
            <param name="indexOfDiscountApplicationMultiple">Index of discount application multiple.</param>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <param name="discountApplicationToIgnore">Discount application to ignore.</param>
            <param name="discountApplicationToSeedMultipleIndexLookup">Discount application to see multiple index lookup.</param>
            <param name="discountAmountToCompare">Pre-defined discount amount to compare against.</param>
            <returns>Discount deal.</returns>
            <remarks>Please ensure indexOfDiscountApplicationMultiple and itemQuantitiesAvailable are possible, as we won't check itemQuantitiesAvailable to speed up the algorithm.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState">
            <summary>
            Purge dynamic programming state
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState"/> class.
            </summary>
            <param name="currentIndexOfDiscountApplicationMultiple">The current index of discount application multiple.</param>
            <param name="itemQuantities">The item quantities.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState"/> class.
            </summary>
            <param name="currentIndexOfDiscountApplicationMultiple">The current index of discount application multiple.</param>
            <param name="itemQuantities">The item quantities.</param>
            <param name="parent">The parent.</param>
            <param name="realizedMultiple">The realized multiple.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.DealResult">
            <summary>
            Deal result
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.DealResult.Dominating">
            <summary>
            The dominating
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.DealResult.Useless">
            <summary>
            The useless
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.UselessState">
            <summary>
            Gets the state of the useless.
            </summary>
            <value>
            The state of the useless.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.RealizedMultiple">
            <summary>
            Gets the realized multiple.
            </summary>
            <value>
            The realized multiple.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.CurrentIndexOfDiscountApplicationMultiple">
            <summary>
            Gets the current index of discount application multiple.
            </summary>
            <value>
            The current index of discount application multiple.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.ItemQuantities">
            <summary>
            Gets the item quantities.
            </summary>
            <value>
            The item quantities.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.RealizedDiscountAmountAccumulated">
            <summary>
            Gets the realized discount amount accumulated.
            </summary>
            <value>
            The realized discount amount accumulated.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.DealIncludingMultiple">
            <summary>
            Gets or sets the deal including multiple.
            </summary>
            <value>
            The deal including multiple.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.DealExcludingMultiple">
            <summary>
            Gets or sets the deal excluding multiple.
            </summary>
            <value>
            The deal excluding multiple.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.Deal">
            <summary>
            Gets or sets the deal.
            </summary>
            <value>
            The deal.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.FinishedChildrenEvaluation">
            <summary>
            Gets a value indicating whether [finished children evaluation].
            </summary>
            <value>
              <c>true</c> if [finished children evaluation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.GotDominatingDeal">
            <summary>
            Gets a value indicating whether [got dominating deal].
            </summary>
            <value>
              <c>true</c> if [got dominating deal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.ConstructRoot(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Constructs the root.
            </summary>
            <param name="firstIndexOfDiscountApplicationMultiple">The first index of discount application multiple.</param>
            <param name="itemQuantities">The item quantities.</param>
            <returns>Purge dynamic programming state.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationPurger.PurgeDynamicProgrammingState.ReleaseDetailsAfterFinishingEvaluation">
            <summary>
            Releases the details after finishing evaluation.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState">
            <summary>
            Class representing the state of the discount application process at a particular node of the possible discounts calculation tree.
            This class is used to store state information on the stack when the code proceeds down to the next level during the depth-first search of the tree
            so that it can be restored when the code pops back up to the level where this node occurred.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState.RemainingApplications">
            <summary>
            Gets or sets the remaining eligible discount applications at this node.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState.RemainingQuantities">
            <summary>
            Gets or sets the remaining line item quantities on the transaction at this node.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState.RemainingQuantitiesForCompound">
            <summary>
            Gets or sets the remaining line item quantities for compound on the transaction at this node.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState.AppliedDiscountApplication">
            <summary>
            Gets or sets the counter value of which of the remaining applications we are processing at this node.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState.Value">
            <summary>
            Gets or sets the value of the discounts applied up to this node.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountApplicationState.NumberOfTimesApplied">
            <summary>
            Gets or sets the number of times this discount was applied to these lines.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey">
            <summary>Dynamic programming best deal key.</summary>
            <remarks>Used in discount deal cache lookup.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey" /> class.
            </summary>
            <param name="indexOfDiscountApplicationMultiple">Index of discount application multiple in dynamic algorithm (recursive or iterative).</param>
            <param name="itemQuantities">Item quantities.</param>
            <remarks>For speed, it takes <see cref="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.ItemQuantities" /> as is. It's immutable in the class.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.IndexOfDiscountApplicationMultiple">
            <summary>Gets the index of discount application multiple in the sorted list.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.ItemQuantities">
            <summary>Gets the item quantities.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.TotalCount">
            <summary>Gets the total count.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.TotalQuantity">
            <summary>Gets the total quantity.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.Equals(System.Object)">
            <summary>
            Checks whether the two are equals.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if they're equal.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.GetHashCode">
            <summary>Gets the hash code.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingBestDealKey.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal">
            <summary>
            Discount deal for dynamic programming.
            </summary>
            <remarks>Leaving out unit tests as it's trivial.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal" /> class.
            </summary>
            <param name="discountApplicationMultiple">Discount application multiple.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.UselessDeal">
            <summary>Gets the useless deal, i.e. not best deal and which can be ignored.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.DiscountApplicationMultiples">
            <summary>Gets the discount application multiples for this deal.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.TotalValue">
            <summary>Gets the total value.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.CanMakeBestDeal">
            <summary>Gets a value indicating whether it can make best deal.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.PickBetterDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal)">
            <summary>
            Picks a better deal.
            </summary>
            <param name="left">Left deal.</param>
            <param name="right">Right deal.</param>
            <returns>The better deal.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.Copy">
            <summary>
            Makes a copy of itself.
            </summary>
            <returns>The copied deal.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal.AddDiscountApplicationMultiple(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple)">
            <summary>
            Adds a discount application multiple.
            </summary>
            <param name="multiple">Discount application multiple.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm">
            <summary>
            Top down recursive dynamic programming, implemented in iterative way.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm" /> class.
            </summary>
            <param name="alternative">Experiment only: a flag indicating whether to go alternative. </param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.NumberOfIterations">
            <summary>Gets the number of iterations.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.NumberOfCached">
            <summary>Gets the cache count.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.GetBestDeal(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{System.Int32},System.Decimal[])">
            <summary>
            The core of each algorithm: given item quantities, gets the best deal.
            </summary>
            <param name="seeds">Seeds of discount applications.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="remainingQuantities">Remaining item quantities.</param>
            <returns>Best deal in list of discount application multiples.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.Initialize(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.BaseDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes for the algorithm.
            </summary>
            <param name="seeds">Seeds of discount applications.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="appliedCompoundedDiscounts">Applied compounded discounts.</param>
            <param name="priceContext">Price context.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.Cleanup">
            <summary>Cleans up.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.GetBestDeal(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets the best deal iteratively.
            </summary>
            <param name="indexOfMultiple">Index of discount application multiple.</param>
            <param name="itemQuantitiesInTransaction">Item quantities available.</param>
            <returns>Discount deal.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingIterativeAlgorithm.WorkOnDealIncludingMultiple(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState)">
            <summary>
            Works on the deal including the multiple by setting DynamicProgrammingState.DealIncludingMultiple.
            </summary>
            <param name="workingState">Working dynamic programming state.</param>
            <returns>New working dynamic programming state. It could be the original, or the child of the passing in state.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState">
            <summary>
            Dynamic programming state for iterative approach.
            We use top-down recursive dynamic programming conceptually to figure out best discount.
            Due to recursive depth limit, we're implementing it as iterative loop.
            Dynamic programming state here is to maintain the recursive state in the iterative loop.
            Essentially, it's a binary tree, each node (state) has 3 links: Parent, DealIncludingMultiple and DealExcludingMultiple.
            In addition, each node (state) holds data related to the node (state).
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState" /> class.
            </summary>
            <param name="currentIndexOfDiscountApplicationMultiple">Current index of discount application multiple in the sorted list.</param>
            <param name="itemQuantities">Item quantities.</param>
            <param name="parent">Parent state.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState" /> class.
            </summary>
            <param name="currentIndexOfDiscountApplicationMultiple">Current index of discount application multiple in the sorted list.</param>
            <param name="itemQuantities">Item quantities.</param>
            <param name="parent">Parent state.</param>
            <param name="realizedMultiple">Realized discount application multiple.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState" /> class.
            </summary>
            <param name="currentIndexOfDiscountApplicationMultiple">Current index of discount application multiple in the sorted list.</param>
            <param name="itemQuantities">Item quantities.</param>
            <param name="parent">Parent state.</param>
            <param name="realizedMultiple">Realized discount application multiple.</param>
            <param name="deal">The deal.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.UselessState">
            <summary>Gets the useless state, i.e. it won't produce the best deal.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.RealizedMultiple">
            <summary>Gets the realized discount application multiple.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.CurrentIndexOfDiscountApplicationMultiple">
            <summary>Gets or sets the current index of discount application multiple in the sorted list.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.ItemQuantities">
            <summary>Gets the item quantities.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.RealizedDiscountAmountAccumulated">
            <summary>Gets the accumulated realized discount amount.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.DealIncludingMultiple">
            <summary>Gets or sets the child deal including the multiple.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.DealExcludingMultiple">
            <summary>Gets or sets the child deal excluding the multiple.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.Parent">
            <summary>Gets the parent.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.Deal">
            <summary>Gets the deal.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.QuantityControlLookupByOfferId">
            <summary>Gets the quantity control lookup by offer Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.BestDealKey">
            <summary>Gets the best deal key.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.FinishedChildrenEvaluation">
            <summary>Gets a value indicating whether it has finished children evaluation.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.ConstructRoot(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Constructs the root of the dynamics programming state.
            </summary>
            <param name="firstIndexOfDiscountApplicationMultiple">First index of discount application multiple in the sorted list.</param>
            <param name="itemQuantities">Item quantities.</param>
            <returns>Root of the dynamics programming state.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.PickBetterDeal">
            <summary>
            Picks the better deal from deal including the multiple and deal excluding the multiple.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.AddRealizedMultipleToDeal">
            <summary>
            Adds realized discount application multiple to the deal.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.SetDealWithoutExhaustiveEvaluation(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingDeal)">
            <summary>
            Sets deal without exhaustive evaluation.
            </summary>
            <param name="deal">The deal.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.ReleaseDetailsAfterFinishingEvaluation">
            <summary>
            Releases details after finishing evaluation of the state and its children, so its children can be garbage collected.
            </summary>
            <remarks>Performance enhancement only.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DynamicProgrammingState.CanApplyWithQuantityControl(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple)">
            <summary>
            Determines whether this instance [can apply with quantity control] the specified multiple.
            </summary>
            <param name="multiple">The multiple.</param>
            <returns>
              <c>true</c> if this instance [can apply with quantity control] the specified multiple; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator">
            <summary>Static potential calculator.</summary>
            <remarks>By static, it simply looks up item discount, and multiples by quantity, as opposed to dynamic or linear calculation where it takes into account item discount quantity as well.</remarks>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator.potentialsLookup">
            <summary>
            Representing 2d sparse matrix of item-group-index x multiple-index, with value the best possible per-unit item potential.
            0. Assumption: fixed ordering of discount application multiples.
            1. lookup by item group index
            2. For each item group index, a list of increasing per-unit item potential with multiple index. See method BuildItemUnitPotentials.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator.#ctor(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplicationMultiple},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator" /> class.
            </summary>
            <param name="multiples">Discount application binary multiples.</param>
            <param name="itemGroupIndexSet">Item group index set.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator.CalculatePotential(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Calculate (static) potential given the multiple index, and available item quantities.
            </summary>
            <param name="indexOfMultiple">Multiple index in a multiple list of fixed ordering.</param>
            <param name="itemQuantitiesAvailable">Item quantities available.</param>
            <returns>Best potential.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator.GetMaxPotential(System.Collections.Generic.Dictionary{System.Int32,System.Decimal})">
            <summary>
            Gets max (full) potential.
            </summary>
            <param name="itemQuantities">Item quantities.</param>
            <returns>Maximum potential.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.StaticPotentialCalculator.MultipleIndexAndPotential.ToString">
            <summary>Gets the string representation.</summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LoyaltyDiscountCalculator">
            <summary>
            This class is used to find and populate manual loyalty discount on a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LoyaltyDiscountCalculator.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LoyaltyDiscountCalculator"/> class.
            </summary>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LoyaltyDiscountCalculator.CalculateLoyaltyManualDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates distribution of manual loyalty discounts across the transaction.
            Should be called only after other discounts are calculated.
            </summary>
            <param name="transaction">Transaction to calculate manual loyalty discounts on.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LoyaltyDiscountCalculator.AddLoyaltyDiscAmountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Decimal)">
            <summary>
            This method will distribute the amountToDiscount across all the sale items in the transaction
                proportionally except for the line item with the largest amount.  The remainder will be distributed
                to the line item with the largest amount to ensure the amount to discount is exactly applied.
            This method currently works when the redeem loyalty points button is applied.
            </summary>
            <param name="transaction">The transaction receiving loyalty discount lines.</param>
            <param name="amountToDiscount">The amount to discount the transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy">
            <summary>
            Base Price application strategy.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy"/> class.
            </summary>
            <param name="priceEvents">The price events.</param>
            <param name="priceContext">The price context.</param>
            <param name="salesLine">The sales line.</param>
            <param name="priceLine">The price line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy.GetPriceField">
            <summary>
            Gets the value from the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" />.
            </summary>
            <returns>
            The price.
            </returns>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy.OnPostPriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed after price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy.OnPrePriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed before price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy.SetPriceField(System.Decimal)">
            <summary>
            Sets the price on the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" />.
            </summary>
            <param name="price">The price to be set.</param>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.BasePriceApplicationStrategy.CreateOrUpdatePriceLines">
            <summary>
            If the price didn't change, the existing price line is returned.
            If the built-in <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator"/> created a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine"/> and one event handler changed the price, the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine"/> will be updated.
            If <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator"/> didn't find a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine"/>, then a new one is created with the price generated by the event handlers.
            </summary>
            <returns>A list of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine"/>.</returns>
            <remarks>This API will always return a list with just one single item, because there can only be one base price per <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine"/>.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy">
            <summary>
            Price adjustment application strategy.
            </summary>
            <remarks>
            In adherence with the philosophy that price adjustments should only lower the price,
            anything price adjustment related which increases the price is ignored.
            As such, a price adjustment which raises the price will have no effect and will not
            appear as a member of SalesLine.PriceLines.
            A PreApplyPriceAdjustments event or a PostApplyPriceAdjustments event which raises the
            price will have no effect, and no subsequent PriceLine will be created or included in
            SalesLine.PriceLines.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy"/> class.
            </summary>
            <param name="priceEvents">The price events.</param>
            <param name="priceContext">The price context.</param>
            <param name="salesLine">The sales line.</param>
            <param name="priceLines">The price lines.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy.GetPriceField">
            <summary>
            Gets the value from the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" />.
            </summary>
            <returns>
            The price.
            </returns>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy.OnPostPriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed after price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy.OnPrePriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed before price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy.SetPriceField(System.Decimal)">
            <summary>
            Sets the price on the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" />.
            </summary>
            <param name="price">The price to be set.</param>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceAdjustmentPriceApplicationStrategy.CreateOrUpdatePriceLines">
            <summary>
            If the price didn't change, the existing price lines are returned.
            If the built-in <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator"/> created one or more <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine"/> and one event handler lowered the price,
            all the lines created by the built-in calculator will be ignored and a new one will be created with the price generated by the event handlers.
            If <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator"/> didn't find a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine"/>, then a new one is created with the price generated by the event handlers.
            If a price adjustment event raised the price, the adjustment is ignored. Existing price lines are returned.
            </summary>
            <returns>A list of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine"/>, or null if price adjustment raised the price.</returns>
            <remarks>This API will return a list with just one single item if the price was lowered by one of the event handlers, or the original list calculated by the built-in calculator if the price was unchanged or increased by the event handlers.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1">
            <summary>
            This class is base class for Price Application.
            </summary>
            <typeparam name="T">A subtype of <c>PriceLine</c>.</typeparam>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.PriceEvents">
            <summary>
            The price events
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine">
            <summary>
            The sales line
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.PriceContext">
            <summary>
            The price context
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1" /> class.
            </summary>
            <param name="priceEvents">An instance of <c>PriceEvents</c>.</param>
            <param name="priceContext">The Price context.</param>
            <param name="salesLine">The Sales line currently in context.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SystemCalculatedPrice">
            <summary>
            Gets or sets the price calculated by the built-in Price Calculators.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.ApplyPrice">
            <summary>
            Apply the price, while firing the registered events handlers and keeping the integrity of the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" /> PriceLines.
            </summary>
            <returns>A list of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceLine"/> that were applied.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.OnPrePriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed before price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.OnPostPriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed after price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.GetPriceField">
            <summary>
            Gets the value from the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine"/>.
            </summary>
            <returns>The price.</returns>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SetPriceField(System.Decimal)">
            <summary>
            Sets the price on the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine"/>.
            </summary>
            <param name="price">The price to be set.</param>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.CreateOrUpdatePriceLines">
            <summary>
            Creates or updates the related <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceLine"/>.
            </summary>
            <returns>A list of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceLine"/>.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy">
            <summary>
            Trade Agreement price application strategy.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy"/> class.
            </summary>
            <param name="priceEvents">The price events.</param>
            <param name="priceContext">The price context.</param>
            <param name="salesLine">The sales line.</param>
            <param name="priceLine">The price line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy.GetPriceField">
            <summary>
            Gets the value from the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" />.
            </summary>
            <returns>
            The price.
            </returns>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy.OnPostPriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed after price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy.OnPrePriceApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Invokes the events registered to be executed before price application.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy.SetPriceField(System.Decimal)">
            <summary>
            Sets the price on the correct price field on the <see cref="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1.SalesLine" />.
            </summary>
            <param name="price">The price to be set.</param>
            <remarks>
            Depending on the implementation the field can be either <code>BasePrice</code>, <code>AgreementPrice</code> or <code>AdjustmentPrice</code>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.TradeAgreementPriceApplicationStrategy.CreateOrUpdatePriceLines">
            <summary>
            If the price didn't change, the existing price line is returned.
            If the built-in <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator"/> created a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine"/> and one event handler changed the price, the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine"/> will be updated.
            If <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator"/> didn't find a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine"/>, then a new one is created with the price generated by the event handlers.
            </summary>
            <returns>A list of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine"/>.</returns>
            <remarks>This API will always return a list with just one single item, because there can only be one trade agreement price per <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine"/>.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext">
            <summary>
            Represents the overall settings and configuration to use when calculating prices for set of lines.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ChannelPriceGroups">
            <summary>
            Gets the collection of channel price groups to search by.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.AllPriceGroupsExceptCatalogsForDiscount">
            <summary>
            Gets the collection of all price groups except catalogs to search by.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.AllPriceGroupsExceptCatalogsForPrice">
            <summary>
            Gets the collection of all price groups except catalogs to search by.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CatalogPriceGroups">
            <summary>
            Gets the collection of catalog price groups to search by.
            </summary>
            <remarks>
            For catalog specific discounts, we need to ensure discounted items are in the catalogs.
            Hence, given discount price groups, we need to figure out whether an item is qualified if the discount is catalog only.
            More details in PriceContextHelper in price engine.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.AffiliationPriceGroups">
            <summary>
            Gets the collection of affiliation and loyalty price groups to search by.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.PriceGroupIdToPriorityDictionary">
            <summary>Gets the translation between price group identifiers and priorities.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CustomerAccount">
            <summary>Gets the customer account number for customer-specific prices. Optional.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CustomerPriceGroup">
            <summary>Gets the customer price group Id for customer-specific prices. Optional.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ActiveDate">
            <summary>Gets the date and time on which to calculate the prices.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CurrencyCode">
            <summary>Gets the currency code to search by when pricing. Usually the channel's currency.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CompanyCurrencyCode">
            <summary>Gets the company currency code.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.PriceParameters">
            <summary>Gets the configuration of which trade agreement combinations are allowed.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.PriceCalculationMode">
            <summary>Gets the price calculation mode for the lines being calculated.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CalculateSimpleDiscountOnly">
            <summary>Gets a value indicating whether to calculate simple discounts only.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.DiscountCompoundBehavior">
            <summary>Gets the discount compound behavior.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CurrencyAndRoundingHelper">
            <summary>Gets the currency and rounding helper.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CalculateForNewSalesLinesOnly">
            <summary>Gets a value indicating whether to calculate for new sales lines only.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.NewSalesLineIdSet">
            <summary>Gets the new sales line id set.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.MaxBestDealAlgorithmStepCount">
            <summary>Gets the max best deal step count for the lines being calculated.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.HoldTogetherForDiscountRounding">
            <summary>Gets a value indicating whether to hold together (no split) for discount rounding.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.DistributeMixAndMatchLeastExpensive">
            <summary>Gets a value indicating whether to distribute mix and match least expensive discounts on qualifying items.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ItemCache">
            <summary>Gets the item identifier to item object cache.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ManuallyApplyDiscountsToReturnProduct">
            <summary>Gets a value indicating whether manually apply discounts to return product.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.AllowPriceAdjustmentsToIncreasePrice">
            <summary>Gets a value indicating whether to allow price adjustment to increase price.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.TransactionTotaling">
            <summary>Gets the transaction totaling helper.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ManualDiscountMode">
            <summary>
            Gets or sets the manual discount mode.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.DiscountConcurrencyControlModel">
            <summary>Gets or sets the discount concurrency control model.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.DiscountAlgorithmMode">
            <summary>Gets or sets the discount algorithm mode for the lines being calculated.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.LineDiscountCalculationType">
            <summary>Gets or sets the line discount calculation type.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CustomerLinePriceGroup">
            <summary>Gets or sets the customer line discount price group Id for customer-specific prices. Optional.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CustomerMultipleLinePriceGroup">
            <summary>Gets or sets the customer multiple line discount price group Id for customer-specific prices. Optional.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CustomerTotalPriceGroup">
            <summary>Gets or sets the customer multiple line discount price group Id for customer-specific prices. Optional.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.PriceGroupIdsToRecordIdsDictionary">
            <summary>Gets the translation between price group identifiers and record ids.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.RecordIdsToPriceGroupIdsDictionary">
            <summary>Gets the translation between record ids and price group identifiers.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ApplyDiscountsToPriceKeyedIn">
            <summary>
            Gets or sets a value indicating whether apply discounts to price keyed in.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ApplyDiscountsToPriceOverrides">
            <summary>
            Gets or sets a value indicating whether apply discounts to price overrides.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.EnableExtensionValidation">
            <summary>Gets or sets a value indicating whether to enable extension validation.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ValidationErrors">
            <summary>Gets validation errors.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.PricingEngineDiagnosticsObject">
            <summary>
            Gets the pricing engine diagnostics object.
            </summary>
            <remarks>This object is used to capture analytics data during pricing engine execution. This is not involved in the calculation logic.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.DiscountTotalingData">
            <summary>Gets discount totaling data.</summary>
            <remarks>
            In general, price context holds common data, such as configuration, price groups, item data, etc.
            Unfortunately, we need totaling in multiple places beyond retail discounts, for example, when we calculate total manual discount and loyalty discount.
            For totaling, we need additional data beyond what is on SalesLine and DiscountLine. It's a small hack.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.ExceedsMaxBestDealAlgorithmStepCount(System.Int32)">
            <summary>
            Checks whether the step count exceeds max best deal algorithm step count.
            </summary>
            <param name="stepCount">Step count.</param>
            <returns>true if exceeded, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.AddValidationError(System.String)">
            <summary>
            Adds validation error.
            </summary>
            <param name="error">Validation error.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext.CanCalculateRetailAndTradeAgreementDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Verify whether should calculate discount for sales line.
            </summary>
            <param name="salesLine">The current sales line</param>
            <returns>true if can calculate discount, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper">
            <summary>
            Price context builder.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.ComputeDiscountAmountForPercentageOff(System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Computes discount value for percentage off.
            </summary>
            <param name="originalPrice">Original price.</param>
            <param name="discountedPrice">Discounted price.</param>
            <param name="percentageOff">Percentage off.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount value.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetSmallestNonNegativeAmount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Decimal)">
            <summary>
            Get smallest non negative amount.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="amount">Reference amount.</param>
            <returns>Smallest non negative amount.</returns>
            <remarks>If the amount is zero, or less than the smallest amount, then it would return zero.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.ValidateCondition(System.Boolean,System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Validates the condition. If it is false, it will log the validation error.
            </summary>
            <param name="condition">Condition to validate.</param>
            <param name="errorMessage">Error message.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.CreatePriceContext(Microsoft.Dynamics.Commerce.Runtime.RequestContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,System.DateTimeOffset,System.String,System.String,System.String,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingCalculationMode,System.Boolean,System.Boolean,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class.
            </summary>
            <param name="requestContext">Request context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Current transaction.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="activeDate">Active date.</param>
            <param name="customerId">Customer Id.</param>
            <param name="customerPriceGroup">Customer price group.</param>
            <param name="customerLinePriceGroup">Customer line discount price group.</param>
            <param name="customerMultipleLinePriceGroup">Customer multiple line discount price group.</param>
            <param name="customerTotalPriceGroup">Customer total discount price group.</param>
            <param name="priceCalculationMode">Price calculation mode.</param>
            <param name="calculateSimpleDiscountOnly">A value indicating whether to calculate simple discount only.</param>
            <param name="calculateForNewSalesLinesOnly">A flag indicating whether to calculate for new sales lines only.</param>
            <param name="newSalesLineIdSet">New sales line id set.</param>
            <returns>A new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.CreatePriceContext(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.Int64},System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.AffiliationLoyaltyTier},System.String,System.String,System.String,System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class for price or discount calculation.
            </summary>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="itemIds">Item Ids.</param>
            <param name="catalogIds">Catalog identifiers.</param>
            <param name="affiliationLoyaltyTiers">Affiliation or loyalty tier identifiers.</param>
            <param name="customerId">Customer Id.</param>
            <param name="customerPriceGroup">Customer price group.</param>
            <param name="customerLinePriceGroup">Customer line discount price group.</param>
            <param name="customerMultipleLinePriceGroup">Customer multiple line discount price group.</param>
            <param name="customerTotalPriceGroup">Customer total discount price group.</param>
            <param name="currencyCode">Currency code.</param>
            <param name="activeDate">Active date.</param>
            <returns>A new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.CreatePriceContext(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,Microsoft.Dynamics.Commerce.Runtime.DataModel.Customer,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.String,System.DateTimeOffset)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class for price or discount calculation.
            </summary>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="customer">The customer.</param>
            <param name="transaction">Sales transaction.</param>
            <param name="currencyCode">Currency code.</param>
            <param name="activeDate">Active date.</param>
            <returns>A new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext"/> class.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetAllPriceGroupsForDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get all price groups from price context.
            </summary>
            <param name="priceContext">Price context.</param>
            <returns>All price groups.</returns>
            <remarks>We could have made it an C# extension. Leave it here for all price context logic.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetItem(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.String)">
            <summary>
            Get item by item identifier.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="itemId">Item identifier.</param>
            <returns>The item.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.IsDiscountAllowed(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.String)">
            <summary>
            Check whether the discount is allowed for the item.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="itemId">Item identifier.</param>
            <returns>True if  the discount is allowed for the item, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.IsManualDiscountAllowed(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.String)">
            <summary>
            Check whether the manual discount is allowed for the item.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="itemId">Item identifier.</param>
            <returns>True if the manual discount is allowed for the item, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetAllPriceGroupIdsForDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get all price group identifiers from price context.
            </summary>
            <param name="priceContext">Price context.</param>
            <returns>All price groups.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetAllPriceGroupsForPrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get all price groups for price from price context.
            </summary>
            <param name="priceContext">Price context.</param>
            <returns>All price groups for price.</returns>
            <remarks>We could have made it an C# extension. Leave it here for all price context logic.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetApplicablePriceGroupsForDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.ISet{System.Int64})">
            <summary>
            Get all applicable discount price groups from price context.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="itemCatalogIds">Item catalog identifiers.</param>
            <returns>All applicable discount price groups.</returns>
            <remarks>We could have made it an C# extension. Leave it here for all price context logic.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetApplicablePriceGroupsForPrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.ISet{System.Int64})">
            <summary>
            Get all applicable price price groups from price context.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="itemCatalogIds">Item catalog identifiers.</param>
            <returns>All applicable price price groups.</returns>
            <remarks>We could have made it an C# extension. Leave it here for all price context logic.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.IsApplicableForDiscount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.Int64})">
            <summary>
            Check whether it is applicable for retail discount.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="discountPriceGroups">Discount price groups.</param>
            <param name="itemCatalogIds">Item catalog identifiers.</param>
            <returns>True if it is applicable.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.IsApplicableForPrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.Int64})">
            <summary>
            Check whether it is applicable for price.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="pricePriceGroups">Price price groups.</param>
            <param name="itemCatalogIds">Item catalog identifiers.</param>
            <returns>True if it is applicable.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetCatalogIds(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Get catalog identifiers.
            </summary>
            <param name="transaction">Current transaction.</param>
            <returns>Set of catalog Ids.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetCatalogIds(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Get catalog identifiers.
            </summary>
            <param name="salesLines">List of sales lines.</param>
            <returns>Set of catalog Ids.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetItemIds(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Get item identifiers.
            </summary>
            <param name="transaction">Current transaction.</param>
            <returns>Set of item Ids.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetItemIdsForDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get item identifiers for discounts.
            </summary>
            <param name="transaction">Current transaction.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Set of item Ids.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetItemIds(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Get item identifiers.
            </summary>
            <param name="salesLines">List of sales lines.</param>
            <returns>Set of item Ids.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetAffiliationLoyalTierIds(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Get list of affiliation or loyalty tier identifiers.
            </summary>
            <param name="transaction">Current transaction.</param>
            <returns>List of affiliation or loyalty tier identifiers.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetRetailDiscountPriceGroupDictionaryFilteredByTransaction(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.String})">
            <summary>
            Get offer identifier to retail discount price groups dictionary, filter by transaction price groups.
            </summary>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="offerIds">Offer identifiers.</param>
            <param name="transactionPriceGroups">Price groups from transaction.</param>
            <returns>A dictionary of offer identifier to retail discount price groups map filtered by price groups from transaction.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.MatchCalculationMode(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType)">
            <summary>
            Check whether discount type matches the discount calculation mode in price context.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="discountType">Discount type.</param>
            <returns>True if discount type matches the discount calculation mode.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.AddChannelPriceGroups(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceGroup})">
            <summary>
            Add channel price groups.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="priceGroups">Price groups.</param>
            <remarks>This is private. Exposed as internal for test.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetDiscountBaseAmountIgnorePriority(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Gets discount base amount, ignoring priority.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="salesLine">Sales line.</param>
            <returns>Discount base amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.AreAmountEqualWithAllowance(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Decimal,System.Decimal)">
            <summary>
            Checks whether two amounts are equal with allowance.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="leftAmount">Left amount.</param>
            <param name="rightAmount">Right amount.</param>
            <returns>true if equal; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.InitializeAndCachePriceGroupSets(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes and caches <c>AllPriceGroupsExceptCatalogsForDiscount</c> and <c>AllPriceGroupsExceptCatalogsForPrice</c>
            so that they can later be used by <c>GetAllPriceGroupsExceptCatalogsForPrice </c> and <c>GetAllPriceGroupsExceptCatalogsForDiscount </c> without having to recompute them.
            </summary>
            <param name="priceContext">The price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContextHelper.GetItemIdsForDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Get item identifiers for discounts.
            </summary>
            <param name="transaction">Current transaction.</param>
            <returns>Set of item Ids.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PostPriceRoundingEventArgs">
            <summary>
            This class is used to pass arguments to Post-Price Rounding Event handlers.
            </summary>
            <remarks>
            While processing this event, it safe to change properties on the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine"/> that is passed as context.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PostPriceRoundingEventArgs.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PostPriceRoundingEventArgs" /> class.
            </summary>
            <param name="priceContext">The Price Context.</param>
            <param name="salesLine">The <c>SalesLine</c> that is being changed.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PrePriceRoundingEventArgs">
            <summary>
            This class is used to pass arguments to Pre-Price Rounding Event handlers.
            </summary>
            <remarks>
            While processing this event, it safe to change properties on the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine"/> that is passed as context.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PrePriceRoundingEventArgs.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PrePriceRoundingEventArgs" /> class.
            </summary>
            <param name="priceContext">The Price Context.</param>
            <param name="salesLine">The <c>SalesLine</c> that is being changed.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PrePriceRoundingEventArgs.SkipStandardRounding">
            <summary>
            Gets or sets a value indicating whether to perform standard rounding or not.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs">
            <summary>
            This class is used to pass arguments to Price Application Event handlers.
            </summary>
            <remarks>
            Even though a <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine"/> is passed as context of the event, actual changes to price should be done through the <see cref="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs.Price"/> property.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs" /> class.
            </summary>
            <param name="priceContext">The Price Context.</param>
            <param name="salesLine">The <c>SalesLine</c> that is being changed.</param>
            <param name="price">The price currently calculated.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs.Price">
            <summary>
            Gets or sets the price.
            </summary>
            <remarks>
            The value in this field will be copied to a price field on the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine"/> when the event finishes executing.
            The exact field to which the data will be copied depends on the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceApplication.PriceApplicationStrategy`1"/> being used.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs.PriceHasChanged">
            <summary>
            Gets a value indicating whether the price was changed during event processing or not.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEventArgs">
            <summary>
            This class as base class for Price Events.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEventArgs.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEventArgs" /> class.
            </summary>
            <param name="priceContext">The Price Context.</param>
            <param name="salesLine">The <c>SalesLine</c> that is being changed.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEventArgs.PriceContext">
            <summary>
            Gets the Price Context.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEventArgs.SalesLine">
            <summary>
            Gets the sales line.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents">
            <summary>
            This class provides the infrastructure to handle Price Events.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents" /> class.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PreApplyBasePrice">
            <summary>
            This method is executed before Base Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PostApplyBasePrice">
            <summary>
            This method is executed after the Base Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PreApplyTradeAgreementPrice">
            <summary>
            This method is executed before Trade Agreement Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PostApplyTradeAgreementPrice">
            <summary>
            This method is executed after Trade Agreement Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PreApplyPriceAdjustments">
            <summary>
            This method is executed before Price Adjustment Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PostApplyPriceAdjustments">
            <summary>
            This method is executed after Price Adjustment Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PrePriceRoundingAdjustments">
            <summary>
            This method is executed after Price Adjustment Price is applied.
            </summary>
        </member>
        <member name="E:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.PostPriceRoundingAdjustments">
            <summary>
            This method is executed after Price Adjustment Price is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPreApplyBasePrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Fires the <c>PreApplyBasePrice</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPostApplyBasePrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Fires the <c>PostApplyBasePrice</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPreApplyTradeAgreementPrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Fires the <c>PreApplyTradeAgreementPrice</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPostApplyTradeAgreementPrice(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Fires the <c>PostApplyTradeAgreementPrice</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPreApplyPriceAdjustments(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Fires the <c>PreApplyPriceAdjustments</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPostApplyPriceAdjustments(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceApplicationEventArgs)">
            <summary>
            Fires the <c>PostApplyPriceAdjustments</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPrePriceRounding(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PrePriceRoundingEventArgs)">
            <summary>
            Fires the <c>PrePriceRoundingAdjustments</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PriceEvents.OnPostPriceRounding(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.Events.PostPriceRoundingEventArgs)">
            <summary>
            Fires the <c>PostPriceRoundingAdjustments</c> event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceLineResolver">
            <summary>
            This class handles calculating the actual prices for each item line based on the price lines for each item line Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceLineResolver.ResolveAndApplyPriceLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceLine}},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            For the given item lines calculate and set their prices based on the set
             of price lines provided (keyed by item line Id).
            </summary>
            <param name="salesLines">Item lines to have their prices set.</param>
            <param name="priceLines">Set of price lines used to set the item line prices.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceLineResolver.SetPriceOnSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal)">
            <summary>
            Set the price or original price depending on if price is overridden or keyed-in.
            </summary>
            <param name="line">Sales line to set price on.</param>
            <param name="priceToSet">Price to set.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator">
            <summary>
            This class finds all base prices for items and creates a base price price line
             for each item line, keyed by item line line Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IPricingCalculator#CalculatePriceLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Implements the IPricingCalculator interface to calculate item base prices.
            </summary>
            <param name="salesLines">The item lines which need prices.</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <param name="pricingDataManager">Instance of pricing data manager to access pricing data.</param>
            <returns>Sets of possible price lines keyed by item line Id.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BasePriceCalculator.GetUnitQuantityOfMeasure(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Gets the unit quantity of measure.
            </summary>
            <param name="salesLine">The sales line.</param>
            <returns>Unit quantity of mesaure.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CalculatedPrices">
            <summary>
            Calculation prices, indexed by sales line Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CalculatedPrices.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CalculatedPrices" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CalculatedPrices.AddPriceLine(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceLine)">
            <summary>
            Add price line.
            </summary>
            <param name="salesLineId">Sales line Id.</param>
            <param name="price">The price line.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.CalculatedPrices.TryFindPrice(System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceLine@)">
            <summary>
            Try find price.
            </summary>
            <param name="salesLineId">Sales line Id.</param>
            <param name="price">The price.</param>
            <returns>true if found; otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingCalculator">
            <summary>
            This interface defines a method which will calculate prices for all given
             sales lines and return the price lines keyed by sales line Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingCalculator.CalculatePriceLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            This method will calculate the prices for all given item lines
             and return the price lines for each item line, keyed by the item line Id.
            </summary>
            <param name="salesLines">The item lines which need prices.</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <param name="pricingDataManager">Instance of pricing data manager to access pricing data.</param>
            <returns>Sets of possible price lines keyed by item line Id.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator">
            <summary>
            This class finds all possible price adjustment lines for items and creates a set
             of price adjustment price lines for each item line, keyed by item line line Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IPricingCalculator#CalculatePriceLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Implements the IPricingCalculator interface to calculate item price adjustment prices.
            </summary>
            <param name="salesLines">The item lines which need prices.</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <param name="pricingDataManager">Instance of pricing data manager to access pricing data.</param>
            <returns>Sets of possible price lines keyed by item line Id.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PriceAdjustmentsToPriceLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustment})">
            <summary>
            Prices the adjustments to price lines.
            </summary>
            <param name="priceAdjustments">The price adjustments.</param>
            <returns>Price adjustment price lines.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.CalculatePromotionPrice(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine},System.Decimal,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine}@,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Given a set of promotion lines, tentative item price, and item, calculate the price after promotions are applied.
            </summary>
            <param name="adjustmentLines">List of possible adjustments and methods active for this item.</param>
            <param name="price">Price of the item before the promotion, derived from trade agreement or base item price.</param>
            <param name="appliedPriceLines">List, to be populated, of price adjustments which were applied.</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <returns>
            Unrounded price after applying all promotions.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.FindConcurrentPromoAmount(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice},System.Decimal,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine}@,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Find the total promotion discount amount taken off the item price.
            </summary>
            <param name="promoPrices">List of promotion prices to consider.</param>
            <param name="price">Tentative price of the item before promotions are applied.</param>
            <param name="appliedPriceLines">List of already applied prices (base price and trade agreement).</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <returns>The final promotion amount to remove from given price.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.CombinePromotionPrices(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice},System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Given a list of promotion prices, crunch them down into a single discounted amount.
            </summary>
            <param name="promoPrices">Prices to crunch.</param>
            <param name="price">Tentative item price before promotions.</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <returns>Gives the overall discounted amount from collection of adjustments for given price.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice">
            <summary>
            Struct to hold related fields for defining a promotion price. These are
             processed by the promotion concurrency code.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.PromoId">
            <summary>
            Offer Id of the promotion, used to sort compounded promos.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.AmountOff">
            <summary>
            Amount off given by the promotion.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.PercentOff">
            <summary>
            Percent off given by the promotion.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.Concurrency">
            <summary>
            Concurrency setting of the promotion.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.IsCompoundable">
            <summary>
            Whether the current promotion can be compounded. If this was derived from an offer price,
              it can not be compounded, but the best can be chosen before compounding more amounts and percent.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.AdjustmentLine">
            <summary>
            A link to the <c>PriceAdjustmentPriceLine</c> that generated this <c>PromoPrice</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice.#ctor(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAdjustmentCalculator.PromoPrice"/> struct.
            </summary>
            <param name="adjustmentLine">The adjustment line.</param>
            <param name="price">The current price (before the adjustments).</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator">
            <summary>
            This class finds all possible price trade agreement lines for items and creates a set
             of price trade agreement price lines for each item line, keyed by item line line Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.CalculatePrices(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Calculate prices.
            </summary>
            <param name="salesLines">Sales lines.</param>
            <param name="priceContext">Price context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <returns>Prices result.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.Microsoft#Dynamics#Commerce#Runtime#Services#PricingEngine#IPricingCalculator#CalculatePriceLines(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Implements the IPricingCalculator interface to calculate item price trade agreement prices.
            </summary>
            <param name="salesLines">The item lines which need prices.</param>
            <param name="priceContext">The configuration of the overall pricing context for the calculation.</param>
            <param name="pricingDataManager">Instance of pricing data manager to access pricing data.</param>
            <returns>Sets of possible price lines keyed by item line Id.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.GetPriceResultOfActiveTradeAgreement(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement}},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters,System.String,System.String,System.String,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductVariant,Microsoft.Dynamics.Commerce.Runtime.DataModel.UnitOfMeasureConversion,System.Decimal,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.DateTimeOffset,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            Get struct PriceResult from active trade agreement.
            Struct PriceResult contains India MaxRetailPrice. Currently there is a field �Max. retail price� in the form price/discount agreement journal
            (Navigation path: Main Menu > Sales and marketing > Journal > price/discount agreement journal).
            The field will be visible only when the logged on company is an India company. And it is optional.
            User can use this field to specify different MRP values on different sites and warehouses for the same item. And when the trade agreement applies to a transaction,
            the MRP value should flow to the MRP field of the transaction as the default value.
            So current change is when fetching the superset of trade agreements which could apply to all of these items and customer for the given date,
            also takes field MAXIMUMRETAILPRICE_IN through the stored procedures GETALLDISCOUNTTRADEAGREEMENTS/ GETALLTRADEAGREEMENTS/ GETTRADEAGREEMENTS.
            Then return the whole struct PriceResult  rather than PriceResult.Price.
            </summary>
            <param name="tradeAgreementRules">The trade agreement rules.</param>
            <param name="priceParameters">The price parameters.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="itemId">The item Id.</param>
            <param name="defaultSalesUnit">The default sales unit.</param>
            <param name="salesUnit">The sales unit.</param>
            <param name="variantLine">The variant line.</param>
            <param name="unitOfMeasureConversion">The UnitOfMeasure Conversion.</param>
            <param name="quantity">The quantity.</param>
            <param name="customerId">The customer Id.</param>
            <param name="customerPriceGroup">The customer price group.</param>
            <param name="channelPriceGroupIds">The channel price group Ids.</param>
            <param name="priceContext">Price context.</param>
            <param name="activeDate">The active date.</param>
            <param name="variants">The variants.</param>
            <returns>The PriceResult of active trade agreement.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.ApplyPriceTradeAgreements(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement}},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.DateTimeOffset,System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            This function takes arguments (customer, item, currency, etc.) related to price (trade) agreement
            as well as the set of currently enabled trade agreement types. It returns the best trade agreement
            price for the given constraints.
            As in AX, the method searches for a price on the given item which has been given to a
            customer, price group, or anyone (in given precedence order). If a price is found and marked as
            SearchAgain=False, the search will terminate. Otherwise, search for lowest price will continue.
            To recap, the logic is that three searches are done for customer, price group, and all, each bracket
            will return the lowest price it has for the constraints. If it has SearchAgain=True, then the search
            for lowest price continues to the next bracket.
            </summary>
            <param name="tradeAgreementRules">Trade agreements applicable to each item, keyed by item relation (i.e. item Id).</param>
            <param name="args">Arguments for price agreement search.</param>
            <param name="priceParameters">Set of enabled price agreement types.</param>
            <param name="priceContext">Price context.</param>
            <param name="activeDate">Date to use for querying trade agreement rules.</param>
            <param name="variants">The variants.</param>
            <returns>
            Most applicable price for the given price agreement constraints.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.AgreementSortMethod(Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement,Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement)">
            <summary>
            Sort the agreements in ascending order by QuantityAmountFrom then RecordId then FromDate.
            </summary>
            <param name="left">Left side of the comparison.</param>
            <param name="right">Right side of the comparison.</param>
            <returns>Returns -1 if left is less, 0 if equal, 1 if left is more.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.GetBestPriceAgreement(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement},System.Boolean@)">
            <summary>
            This function searches a list of trade agreements (assumed to be sorted with lowest prices first).
              It calculates the price for each trade agreement, returning the lowest amount, and optionally stopping
              early if it encounters a trade agreement with SearchAgain=False.
            </summary>
            <param name="tradeAgreements">List of price agreements, sorted by Amount ascending.</param>
            <param name="searchAgain">Out parameter indicating whether SearchAgain=False was hit.</param>
            <returns>Best price agreement price for the given list of trade agreements.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.ValidRelation(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode,System.String)">
            <summary>
            True if there is a valid relation between the item code and relation.
            </summary>
            <param name="itemCode">The item code to validate against (item/item group/all).</param>
            <param name="relation">The relation to validate.</param>
            <returns>True if the relation is compatible with the item code.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.ValidRelation(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountAccountCode,System.String)">
            <summary>
            True if there is a valid relation between the account code and relation.
            </summary>
            <param name="accountCode">The customer account code to validate against (customer/customer group/all).</param>
            <param name="relation">The relation to validate.</param>
            <returns>True if the relation is compatible with the account code.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.ConstructItemUnitGroupKey(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine)">
            <summary>
            Constructs the item unit group key from a sales line.
            </summary>
            <param name="salesLine">salesLine</param>
            <returns>Group key.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.TradeAgreementComparer">
            <summary>
            This class sorts the trade agreement based on sorting method used.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.TradeAgreementComparer.Compare(Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement,Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement)">
            <summary>
            Sort the agreements in ascending order by rank then QuantityAmountFrom then RecordId then FromDate.
            Higher rank refers to more specific variant.
            </summary>
            <param name="left">Left side of the comparison.</param>
            <param name="right">Right side of the comparison.</param>
            <returns>Returns -1 if left is less, 0 if equal, 1 if left is more.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.TradeAgreementComparer.SortTradeAgreement">
            <summary>
            Sort trade agreements.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TradeAgreementCalculator.TradeAgreementComparer.CalculateRank(Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement,Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductVariant)">
            <summary>
            Calculates the rank of trade agreement based on matching dimensions.
            </summary>
            <param name="tradeAgreement">Trade agreement.</param>
            <param name="variant">Product variant.</param>
            <returns>The rank.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding">
            <summary>
            Discount compounding interface for concurrency behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding.IsCompoundingOrderUnitPriceAmountOffPercentOff">
            <summary>Gets a value indicating whether compounding order is unit (deal) price, amount off, percentage off.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding.IsCompoundable(Microsoft.Dynamics.Commerce.Runtime.DataModel.ConcurrencyMode)">
            <summary>
            Checks if a concurrency mode is compoundable.
            </summary>
            <param name="concurrencyMode">Concurrency mode.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding.CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Checks if a discount can compound on top of another discount.
            </summary>
            <param name="discount1">The first discount.</param>
            <param name="discount2">The second discount.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding.CanCompound(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase,System.Int32)">
            <summary>
            Checks if a discount can compound with another discount with certain priority, assuming both are non-thresholds, or both are thresholds.
            </summary>
            <param name="discount">The discount.</param>
            <param name="priorityNumber">Priority number.</param>
            <returns>true if compoundable; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IConcurrencyCompounding.CanCompoundForPriorities(System.Int32,System.Int32)">
            <summary>
            Checks whether the priorities can compound, assuming two discounts are either non-threshold discounts or threshold discounts.
            </summary>
            <param name="priority1">Priority 1.</param>
            <param name="priority2">Priority 2.</param>
            <returns>true if compoundable; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations">
            <summary>
            Interface for currency operations: rounding and currency conversion.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations.Round(System.Decimal)">
            <summary>
            Round an amount.
            </summary>
            <param name="amountToRound">Amount to round.</param>
            <returns>Rounded amount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations.ConvertCurrency(System.String,System.String,System.Decimal)">
            <summary>
            Convert amount from one currency to another.
            </summary>
            <param name="fromCurrencyCode">From currency code.</param>
            <param name="toCurrencyCode">To currency code.</param>
            <param name="amountToConvert">Amount to convert.</param>
            <returns>Converted amount in new currency.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountApplyStandalone">
            <summary>
            Optional discount interface for determining whether a discount can be applied standalone even in case of overlapping.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountApplyStandalone.CanApplyStandalone(System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines whether the discount can be applied standalone, i.e. not competing with other discounts.
            </summary>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <returns>true if it can be applied standalone, otherwise false.</returns>
            <remarks>Used only in pricing zone concurrency control model.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountCompoundOrdering">
            <summary>
            Interface for ordering compoundable discounts.
            </summary>
            <remarks>
            Implement this for a discount type having multiple discount methods.
            Example: simple discount (a.k.a. offer discount) has 2 line definitions: %-off for a category, and $-off for a product
            For the discount, the effective discount method is $-off ($-off > %-off).
            For a discount application of a product in the category, it is %-off.
            Used in pricing zone concurrency control model when compounding multiple discounts: we process compoundable discounts
            in following order: offer/unit/deal price, amount off and percentage off.
            Not used in the concurrency control model of compete within priority and compound across.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountCompoundOrdering.GetEffectiveDiscountMethodForOrdering(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication)">
            <summary>
            Gets the effective discount method for ordering for a specific discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <returns>Effective discount method for ordering.</returns>
            <remarks>
            Each discount has a default effective discount method. For some, we can fine-tune it for a specific discount application.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/04/04/dynamics-retail-discount-concept-effective-discount-method-for-compound-ordering/">Dynamics Retail Discount Concept: Effective Discount Method for Compound Ordering</see>.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountForBestDeal">
            <summary>
            Interface for discount participating in knapsack best deal algorithm.
            </summary>
            <remarks>
            First, <see href="https://blogs.msdn.microsoft.com/retaillife/2017/02/01/dynamics-retail-discount-concurrency-pricing-zone/">knapsack best deal algorithm</see>
            must have a backup plan: <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/24/retail-discount-knapsack-marginal-value-ranking-algorithm-i/">marginal value ranking algorithm</see>.
            A discount type implementing this interface needs to inherit from <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase"/> class as well.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/02/01/dynamics-retail-discount-concurrency-pricing-zone/">Dynamics Retail discount price zone</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountForBestDeal.GetDiscountApplicationMultiplesNonOverlappedWithBestDeal(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Gets non-overlapped best-deal discount application multiples that can be applied right away.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount application.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Hash set of overlapped item group indices, compounded only.</param>
            <returns>Non-overlapped discount application multiples that can be applied right away.</returns>
            <remarks>
            Knapsack problem can be expensive. We have to think of ways of applying discounts without getting into knapsack problem in the first place.
            In many cases, especially when a discount is not overlapped with other discounts, and when it is not overlapped internally, we can apply it right way, to avoid the expensive calculation later.
            Upon receiving the discount application multiples, the discount algorithm (both concurrency control models) will apply them right away
            by calling DiscountBase.CreateAppliedDiscountApplication.
            Please be aware that compound may make it complicated.
            itemsWithOverlappingDiscountsCompoundedOnly is only applicable when discount concurrency control is to best price and compound within priority.
            When it is to best price within priority, the set is empty.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountForBestDeal.GetPossibleBasicDiscountApplications(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Boolean@)">
            <summary>
            Gets all of the possible applications of this discount to the specified transaction and line items.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="priceContext">The pricing context to use.</param>
            <param name="appliedDiscounts">Applied discount applications.</param>
            <param name="isInterrupted">A flag indicating whether it's interrupted for too many discount applications.</param>
            <returns>Basic discount applications.</returns>
            <remarks>
            The <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">basic discount applications</see> are the building blocks for any knapsack best deal algorithm.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountForBestDeal.PreCalculateDiscountApplication(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.Dictionary{System.Int32,System.Decimal},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Pre-calculates discount application.
            </summary>
            <param name="discountApplication">Discount application.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="itemGroupIndexToDiscountedPriceLookup">Item group index to discounted price lookup.</param>
            <param name="priceContext">Price Context.</param>
            <remarks>
            Knapsack best deal algorithm will call this at the beginning of calculation.
            itemGroupIndexToBestDealPriceLookup is only applicable when when discount concurrency control is to best price and compound within priority.
            If we have multiple compounded discounts, we process them in the order of deal/unit price, amount off, percentage off.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountLimitControl">
            <summary>
            Interface for discount limit control.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountLimitControl.NeedLimitControl">
            <summary>Gets a value indicating whether it needs limit control.</summary>
            <remarks>For example, if the quantity in the transaction is within quantity control limit, then it does not need quantity limit control.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountLimitControl.ApplyWithLimitControl(System.Object,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,System.Int32)">
            <summary>
            Apply with limit control.
            </summary>
            <param name="existingLimitControl">Existing limit control.</param>
            <param name="discountApplication">Discount application.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>Updated limit control.</returns>
            <remarks>
            For discount application and multiplier, see <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountLimitControl.CanApplyWithLimitControl(System.Object,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication,System.Int32)">
            <summary>
            Checks if we can apply the discount application.
            </summary>
            <param name="existingLimitControl">Existing limit control.</param>
            <param name="discountApplication">Discount application.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>true if we can apply the discount application; false otherwise.</returns>
            <remarks>
            For discount application and multiplier, see <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/20/dynamics-retail-discount-concepts-discount-application-i/">Dynamics Retail discount concept: discount application</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountLimitControl.KeepTrackOfApplied(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication})">
            <summary>
            Keeps track of already applied.
            </summary>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPackage">
            <summary>
            Discount package for new discount type.
            </summary>
            <remarks>
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/05/05/dynamics-retail-discount-extensibility-multiple-isvs/">discount package for extensibility</see>.
            </remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPackage.DiscountOfferType">
            <summary>
            Gets the discount offer type.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPackage.CreateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.PeriodicDiscount)">
            <summary>
            Creates the discount.
            </summary>
            <param name="discountAndLine">Discount and line data.</param>
            <returns>The discount.</returns>
            <remarks>Please maintain 1-1 mapping between enumeration discount type and the actual discount type.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPackage.LoadDiscountDetails(System.Collections.Generic.Dictionary{System.String,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Loads discount details.
            </summary>
            <param name="offerIdToDiscountMap">Offer Id to discount lookup.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <param name="transaction">Sales transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPerItemReduce">
            <summary>
            Interface for discounts which we may reduce competition per item.
            </summary>
            <remarks>Optional interface for discount that implements IDiscountForBestDeal.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPerItemReduce.IsItemLikelyEvaluatedWithOtherItems(System.Int32)">
            <summary>
            Determines if the item is likely evaluated with other items.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <returns>true if it's likely evaluated with other items; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPerItemReduce.GetSingleItemNonOverlappedDiscountResult(System.Int32,System.Decimal,System.Decimal,System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get single item non-overlapped discount result.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="originalPrice">Original price.</param>
            <param name="price">Item price.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <returns>Single item non-overlapped discount result.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPostBestDeal">
            <summary>
            Interface for discount not participating in knapsack best deal algorithm.
            It will be processed after knapsack best deal competition within each priority.
            </summary>
            <remarks>For example, <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/13/retail-discount-design-mix-and-match-discount-ii/">least expensive favor retailer</see>.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountThreshold">
            <summary>
            Interface for <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/23/retail-discount-design-threshold-discount-i/">threshold discount</see>.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTotaling">
            <summary>
            Discount totaling.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTotaling.TotalSalesLine(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Totals sales line for discount.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="transactionBeginDateTime">Transaction begin data time.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTotaling.CompareAndRemoveDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Compares retail discounts and trade agreement discounts and remove unwanted.
            </summary>
            <param name="salesLine">Sales line.</param>
            <param name="transactionBeginDateTime">Transaction begin data time.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTreatedAsSimple">
            <summary>
            Interface for discounts that can be treated as simple discounts.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTreatedAsSimple.CanBeTreatedAsSimpleDiscount">
            <summary>Gets a value indicating whether or not it can be treated as simple discount.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTreatedAsSimple.ConstructOneItemDiscountApplicationForSimpleDiscount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountApplication},System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Constructs one item discount application for simple discount.
            </summary>
            <param name="discountApplications">Discount application list to hold the new discount applications.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="quantity">Item quantity.</param>
            <param name="priceContext">Price context.</param>
            <remarks>
            Note 1: only for simple discount.
            Note 2: used in special optimization with one-line-group mix and match and discount offer overlap.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountUsingMarginalValueRanking">
            <summary>
            Interface for discount participating in <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/24/retail-discount-knapsack-marginal-value-ranking-algorithm-i/">marginal value ranking algorithm</see>.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountUsingMarginalValueRanking.GetDiscountDealEstimate(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.HashSet{System.Int32},System.Collections.Generic.HashSet{System.Int32},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount deal estimate.
            </summary>
            <param name="discountableItemGroups">The valid sales line items on the transaction to consider.</param>
            <param name="remainingQuantities">The remaining quantities of each of the sales lines to consider.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="itemsWithOverlappingDiscounts">Items with overlapping discounts.</param>
            <param name="itemsWithOverlappingDiscountsCompoundedOnly">Items with overlapping discounts, compounded only.</param>
            <param name="priceContext">Price Context.</param>
            <returns>Discount deal estimate.</returns>
            <remarks>
            <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/24/retail-discount-knapsack-marginal-value-ranking-algorithm-i/">The deal estimate renders the marginal value for items with overlapping discounts.</see>
            itemsWithOverlappingDiscountsCompoundedOnly is only applicable when discount concurrency control is to best price and compound within priority.
            When it is to best price within priority, the set is empty.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountUsingMarginalValueRanking.GetDiscountApplicationMultiples(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[],System.Decimal[],System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Get discount application multiples.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
            <param name="remainingQuantities">Remaining quantities.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="priceContext">Price context.</param>
            <returns>A collection of discount application multiples.</returns>
            <remarks>
            Upon receiving the discount application multiples, the discount algorithm (both concurrency control models) will apply them right away
            by calling DiscountBase.CreateAppliedDiscountApplication.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriceTradeAgreementCalculator">
            <summary>
            Price trade agreement calculator.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriceTradeAgreementCalculator.CalculatePrices(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor)">
            <summary>
            Calculate prices.
            </summary>
            <param name="salesLines">Sales lines.</param>
            <param name="priceContext">Price context.</param>
            <param name="pricingDataManager">Pricing data manager.</param>
            <returns>Prices result.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor">
            <summary>
            Interface for accessing pricing data.
            </summary>
            <remarks>Both channel and AX have their own implementations. AX can't implement an interface with generics, so we have to resort to System.Object.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetChannelPriceConfiguration">
            <summary>
            Gets the channel price configuration.
            </summary>
            <returns>Channel price configuration.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetChannelPriceGroups">
            <summary>
            Gets the channel price groups.
            </summary>
            <returns>
            A collection of channel price groups of type ReadOnlyCollection&lt;PriceGroup&gt;.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetPriceParameters">
            <summary>
            Retrieves PriceParameters from the database. This indicates which types of
            trade agreements are active for various combinations of customer and item types.
            </summary>
            <returns>The first (and only) row in PriceParameters in the database.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetItems(System.Object)">
            <summary>
            Gets the items using the specified item identifiers.
            </summary>
            <param name="itemIds">The collection of item identifiers.</param>
            <returns>The collection of items of type ReadOnlyCollection&lt;Item&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.ReadDiscountTradeAgreements(System.Object,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings)">
            <summary>
            Fetch the superset of discount trade agreements which could apply to all of these items and customer for the given dates.
            </summary>
            <param name="itemIds">The item Ids to fetch for agreements for.</param>
            <param name="customerAccount">Optional. Customer account number to search by.</param>
            <param name="minActiveDate">The earliest inclusive active date to search by. Must be less than or equal to maxActiveDate.</param>
            <param name="maxActiveDate">The latest inclusive active date to search by. Must be greater than or equal to minActiveDate.</param>
            <param name="currencyCode">Currency code to filter by.</param>
            <param name="settings">The query result settings.</param>
            <returns>Collection of trade agreements which may be applied to the given items of type ReadOnlyCollection&lt;TradeAgreement&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.ReadPriceTradeAgreements(System.Object,System.Object,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings)">
            <summary>
            Fetch the superset of trade agreements which could apply to all of these items and customer for the given date.
            </summary>
            <param name="itemIds">The item Ids to fetch for agreements for.</param>
            <param name="priceGroups">The price groups (probably channel) to query by.</param>
            <param name="customerAccount">Optional. Customer account number to search by.</param>
            <param name="minActiveDate">The earliest inclusive active date to search by. Must be less than or equal to maxActiveDate.</param>
            <param name="maxActiveDate">The latest inclusive active date to search by. Must be greater than or equal to minActiveDate.</param>
            <param name="currencyCode">Currency code to filter by.</param>
            <param name="settings">The query result settings.</param>
            <returns>Collection of trade agreements which may be applied to the given items of type ReadOnlyCollection&lt;TradeAgreement&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.ReadPriceAdjustments(System.Object,System.Object,System.DateTimeOffset,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings)">
            <summary>
            Fetch all price adjustments for the given items, striped by item Id and dimension Id.
            </summary>
            <param name="items">The set of items to search by. Set of pairs of item Id and variant dimension Id. Ignores the unit.</param>
            <param name="priceGroups">Set of price groups to search by.</param>
            <param name="minActiveDate">The earliest inclusive active date to search by. Must be less than or equal to maxActiveDate.</param>
            <param name="maxActiveDate">The latest inclusive active date to search by. Must be greater than or equal to minActiveDate.</param>
            <param name="settings">The query result settings.</param>
            <returns>Collection of price adjustments striped by item Id and variant dimension Id (if any) of type ReadOnlyCollection&lt;PriceAdjustment&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.ReadRetailDiscounts(System.Object,System.Object,System.DateTimeOffset,System.DateTimeOffset,System.String,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings)">
            <summary>
            Fetch all retail discounts for the given items, striped by item Id and dimension Id.
            </summary>
            <param name="items">The set of items to search by. Set of pairs of item Id and variant dimension Id. Ignores the unit.</param>
            <param name="priceGroups">Set of price groups to search by.</param>
            <param name="minActiveDate">The earliest inclusive active date to search by. Must be less than or equal to maxActiveDate.</param>
            <param name="maxActiveDate">The latest inclusive active date to search by. Must be greater than or equal to minActiveDate.</param>
            <param name="currencyCode">Currency code to filter by.</param>
            <param name="settings">The query result settings.</param>
            <returns>Collection of price adjustments striped by item Id and variant dimension Id (if any) of type ReadOnlyCollection&lt;PeriodicDiscount&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetVariantDimensionsByInventDimensionIds(System.Object)">
            <summary>
            Get the variant dimensions populated for the given dimension Ids. This is lightweight and
             only returns the dimension Ids, not translations.
            </summary>
            <param name="inventoryDimensionIds">The dimension Ids which need dimension values fetched.</param>
            <returns>Collection of dimension values of type ReadOnlyCollection&lt;ProductVariant&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetThresholdTiersByOfferIds(System.Object)">
            <summary>
            Get all the threshold tiers associated with the given offers.
            </summary>
            <param name="offerIds">Offer Ids to fetch tiers by.</param>
            <returns>Collection of tiers (if any) associated with the given offer IdsCollection of dimension values of type ReadOnlyCollection&lt;ThresholdDiscountTier&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetMultipleBuyDiscountLinesByOfferIds(System.Object)">
            <summary>
            Get all the multi buy discount lines associated with the given offers.
            </summary>
            <param name="offerIds">Offer Ids to fetch discount lines by.</param>
            <returns>Collection of multi buy discount lines associated with the given offer Ids of type ReadOnlyCollection&lt;QuantityDiscountLevel&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetMixAndMatchLineGroupsByOfferIds(System.Object)">
            <summary>
            Get all the mix and match line groups associated with the given offers.
            </summary>
            <param name="offerIds">Offer Ids to fetch mix and match line groups by.</param>
            <returns>Collection of mix and match line groups associated with the given offer Ids of type ReadOnlyCollection&lt;MixAndMatchLineGroup&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetCustomerPriceGroup(System.String)">
            <summary>
            Gets the customer price group.
            </summary>
            <param name="customerPriceGroupId">Customer price group Id.</param>
            <returns>Customer price group.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetCatalogPriceGroups(System.Object)">
            <summary>
            Gets the catalog price groups.
            </summary>
            <param name="catalogIds">Catalog recId's.</param>
            <returns>
            A collection of catalog price groups of type ReadOnlyCollection&lt;CatalogPriceGroup&gt;.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetAffiliationPriceGroups(System.Object)">
            <summary>
            Gets the affiliation price groups.
            </summary>
            <param name="affiliationLoyaltyTiers">A collection of affiliation Id or loyalty tier Id.</param>
            <returns>
            A collection of affiliation price groups of type ReadOnlyCollection&lt;PriceGroup&gt;.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetRetailDiscountPriceGroups(System.Object)">
            <summary>
            Gets retail discount price groups.
            </summary>
            <param name="offerIds">Offer identifiers.</param>
            <returns>
            A collection of retail discount price groups of type ReadOnlyCollection&lt;RetailDiscountPriceGroup&gt;.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetAllRetailDiscounts">
            <summary>
            Get all of the discounts configured in the system.
            </summary>
            <returns>The collection of discounts of type ReadOnlyCollection&lt;RetailDiscount&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetRetailCategoryMembersForItems(System.Object)">
            <summary>
            Get the category membership information for the product or variant identifiers passed in.
            </summary>
            <param name="productOrVariantIds">A set of product or variant identifiers.</param>
            <returns>The collection of mappings between the product or variant identifier and the category identifier of type ReadOnlyCollection&lt;RetailCategoryMember&gt;.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor.GetVariants(System.Object)">
            <summary>
            Gets the variants for the specified collection of item variant inventory dimension identifiers.
            </summary>
            <param name="itemVariants">The collection of item variant inventory dimension.</param>
            <returns>The variant with specified columns populated. Null if variant not found of type ReadOnlyCollection&lt;ProductVariant&gt;.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV2">
            <summary>
            Interface for accessing pricing data.
            </summary>
            <remarks>Both channel and AX have their own implementations. AX can't implement an interface with generics, so we have to resort to System.Object.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV2.ReadTenderDiscounts(System.Object,System.Object,System.DateTimeOffset,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.DataModel.QueryResultSettings)">
            <summary>
            Fetch all tender discounts for the given items, by item Id and dimension Id.
            </summary>
            <param name="items">The set of items to search by. Set of pairs of item Id and variant dimension Id. Ignores the unit.</param>
            <param name="priceGroups">Set of price groups to search by.</param>
            <param name="minActiveDate">The earliest inclusive active date to search by. Must be less than or equal to maxActiveDate.</param>
            <param name="maxActiveDate">The latest inclusive active date to search by. Must be greater than or equal to minActiveDate.</param>
            <param name="settings">The query result settings.</param>
            <returns>Collection of tender discounts by item Id and dimension Id</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV3">
            <summary>
            Interface for accessing pricing data.
            </summary>
            <remarks>Both channel and AX have their own implementations. AX can't implement an interface with generics, so we have to resort to System.Object.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV3.GetTaxExemptPercentage(System.String,System.String,System.Decimal)">
            <summary>
            Get the percent value of all exempt taxes.
            </summary>
            <param name="salesTaxGroupId">The sales tax group assigned to the taxable item.</param>
            <param name="itemTaxGroupId">The item tax group assigned to the taxable item.</param>
            <param name="taxBase">The tax base of the taxable item. This is used when a tax code has intervals configured for different price ranges.</param>
            <returns>The percent value of all exempt taxes.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingTransactionTotalingHelper">
            <summary>
            Interface for calculate transaction totals.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingTransactionTotalingHelper.CalculateTransactionTotals(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculate transaction total amount.
            </summary>
            <param name="transaction">Transaction to calculate.</param>
            <returns>The transaction totals.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriorityDiscountBaseAmountCalculator">
            <summary>
            Interface for priority <see href="https://blogs.msdn.microsoft.com/retaillife/2017/02/25/dynamics-retail-discount-extensibility-discount-base-amount/">discount base amount</see> calculator.
            </summary>
            <remarks>
            If you customize this, chances are you will have to customize the grouping
            for <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/29/dynamics-retail-discount-concepts-discountable-item-group/">discountable item group</see>, as all sales lines in the same discountable
            item group share the same discount base amount(s).
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriorityDiscountBaseAmountCalculator.ShouldOverrideDiscountBaseAmountForThresholds">
            <summary>
            If the base amount from this caculator needs to be used for threshold, returns true.
            </summary>
            <returns>return true to use base amount for threshold calculation.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriorityDiscountBaseAmountCalculator.GetDiscountBaseAmount(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Gets the discount base amount.
            </summary>
            <param name="discountItemGroup">Discountable item group.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount base amount.</returns>
            <remarks>This is for initial discount base amount override, before discount calculation.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriorityDiscountBaseAmountCalculator.CalculatePriorityDiscountBaseAmount(System.Int32,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup,System.Int32,System.Collections.Generic.IReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.AppliedDiscountApplication},System.Collections.Generic.IReadOnlyCollection{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.PriorityDiscountBaseAmount},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculates priority discount base amount.
            </summary>
            <param name="currentPriority">Current priority.</param>
            <param name="discountItemGroup">Discountable item group.</param>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="appliedDiscountApplications">Applied discount applications.</param>
            <param name="existingPriorityDiscountBaseAmounts">Existing priority discount base amounts.</param>
            <param name="priceContext">Price context.</param>
            <returns>Discount base amount after the priority.</returns>
            <remarks>
            Supported only for <see href="https://blogs.msdn.microsoft.com/retaillife/2017/01/08/retail-discount-concurrency-control-compete-within-priority-and-compound-across/">concurrency model of compete within priority and compound across</see>.
            This is to override discount base amount after the current priority for the remaining compoundable discounts.
            </remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics">
            <summary>
            Discount algorithm diagnostics.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics" /> class.
            </summary>
            <param name="discountableItemGroups">Discountable item groups.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics.Discounts">
            <summary>Gets the discounts.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics.Items">
            <summary>Gets the items.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics.OverlappedDiscountGroups">
            <summary>Gets the overlapped discount groups.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics.ExtensionLookup">
            <summary>Gets the extension lookup.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics.ToString">
            <summary>
            To string representation.
            </summary>
            <returns>String representation of the discount algorithm details.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics">
            <summary>Discount diagnostics.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics" /> class.
            </summary>
            <param name="discount">The discount.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.OfferId">
            <summary>Gets the offer Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.OfferType">
            <summary>Gets the offer type.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.ConcurrencyMode">
            <summary>Gets the concurrency mode.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.Priority">
            <summary>Gets the offer type.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.DiscountMethod">
            <summary>Gets the mix and match discount method.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.NumberOfLeastExpensiveLines">
            <summary>Gets the mix and match number of expensive lines.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.ItemGroupIndexSet">
            <summary>Gets the item group index set.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.FavorRetailer">
            <summary>Gets a value indicating whether to favor retailer.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.LineGroups">
            <summary>Gets the line groups.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.ToString">
            <summary>
            To string representation.
            </summary>
            <returns>String representation of the discount.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountDiagnostics.ConvertFromDiscount(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountBase})">
            <summary>
            Converts from discount.
            </summary>
            <param name="discounts">The discounts.</param>
            <returns>Discount diagnostics.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetBasicDiscountApplicationsInstrument">
            <summary>
            Get basic discount applications instrument.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetBasicDiscountApplicationsInstrument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetBasicDiscountApplicationsInstrument"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetBasicDiscountApplicationsInstrument.DiscountApplicationsFlat">
            <summary>
            Gets or sets the discount applications flat.
            </summary>
            <value>
            The discount applications flat.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetBasicDiscountApplicationsInstrument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesBestDealInstrument">
            <summary>
            Get discount application multiples best deal instrument.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesBestDealInstrument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesBestDealInstrument"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesBestDealInstrument.MultiplesFlat">
            <summary>
            Gets or sets the multiples flat.
            </summary>
            <value>
            The multiples flat.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesBestDealInstrument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesInstrument">
            <summary>
            Get discount application multiples instrument.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesInstrument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesInstrument"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesInstrument.MultiplesFlat">
            <summary>
            Gets or sets the multiples flat.
            </summary>
            <value>
            The multiples flat.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountApplicationMultiplesInstrument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountDealEstimateInstrument">
            <summary>
            Get discount deal estimate instrument.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountDealEstimateInstrument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountDealEstimateInstrument"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountDealEstimateInstrument.DealDetails">
            <summary>
            Gets or sets the deal details.
            </summary>
            <value>
            The deal details.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.GetDiscountDealEstimateInstrument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics">
            <summary>Overlapped discount diagnostics.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.OverlappedDiscountsBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics" /> class.
            </summary>
            <param name="overlappedDiscounts">Overlapped discounts.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics.OfferIdSet">
            <summary>Gets the offer Id set.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics.CoveredItemGroupIndexSet">
            <summary>Gets the offer Id set.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics.FinishedExhausiveAlgorithm">
            <summary>Gets a value indicating whether it has finished exhaustive algorithm.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics.AppliedMarginalValueAlgorithm">
            <summary>Gets a value indicating whether it has applied marginal value algorithm.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.OverlappedDiscountGroupDiagnostics.ToString">
            <summary>
            To string representation.
            </summary>
            <returns>String representation of the discount.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingCalculationInstrument">
            <summary>
            Logs the performance of pricing events.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingCalculationInstrument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingCalculationInstrument" /> class.
            </summary>
            <param name="message">Message associated with timed event.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingCalculationInstrument.ResultCount">
            <summary>
            Gets or sets the result count.
            </summary>
            <value>
            The result count.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingCalculationInstrument.Dispose">
            <summary>
            Stop timed event and logs on telemetry.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingDatabaseInstrument">
            <summary>
            Pricing database instrument.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingDatabaseInstrument.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingDatabaseInstrument"/> class.
            </summary>
            <param name="accessorName">Name of the accessor.</param>
            <param name="itemCount">The item count.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingDatabaseInstrument.ResultCount">
            <summary>
            Gets or sets the result count.
            </summary>
            <value>
            The result count.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingDatabaseInstrument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics">
            <summary>Pricing item diagnostics.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.#ctor(System.Int32,System.String,System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics" /> class.
            </summary>
            <param name="itemGroupIndex">Item group index.</param>
            <param name="itemId">Item Id.</param>
            <param name="price">The price.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.ItemGroupIndex">
            <summary>Gets the item group index.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.ItemId">
            <summary>Gets the item Id.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.Quantity">
            <summary>Gets the quantity.</summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.Price">
            <summary>Gets the price.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.ToString">
            <summary>
            To string representation.
            </summary>
            <returns>String representation of the item.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.PricingItemDiagnostics.ConvertToItemDiagnosticsList(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup[])">
            <summary>
            Converts to item diagnostics list.
            </summary>
            <param name="discountableItemGroups">The discountable item groups.</param>
            <returns>Items diagnostic list.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.RetailDiscountAlgorithmInstrument">
            <summary>
            Retail discount algorithm instrument.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.RetailDiscountAlgorithmInstrument.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.DiscountAlgorithmDiagnostics)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.RetailDiscountAlgorithmInstrument"/> class.
            </summary>
            <param name="diagnostics">The diagnostics.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.RetailDiscountAlgorithmInstrument.Diagnostics">
            <summary>
            Gets the diagnostics.
            </summary>
            <value>
            The diagnostics.
            </value>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingDiagnostics.RetailDiscountAlgorithmInstrument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject">
            <summary>
            Analytics object to hold diagnostic information generated during pricing and discount calculation.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.DiscountsConsidered">
            <summary>
            Gets or sets discounts considered during discount calculation.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.TradeAgreementsConsidered">
            <summary>
            Gets or sets trade agreements considered for pricing calculation.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.PriceAdjustmentsConsidered">
            <summary>
            Gets or sets price adjustments considered.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.TenderDiscountsConsidered">
            <summary>
            Gets or sets discounts considered during discount calculation.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.DiscountAlgorithmDiagnostics">
            <summary>
            Gets discount algorithm diagnostics.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.AddDiscountsConsidered(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds discounts considered to the existing list.
            </summary>
            <param name="discountConsidered">A list of <c>string</c>.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.AddPriceAdjustmentsConsidered(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds price adjustments considered to the existing list.
            </summary>
            <param name="priceAdjustmentConsidered">A list of <c>string</c>.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.AddTradeAgreementsConsidered(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement})">
            <summary>
            Adds trade agreements considered to the existing list.
            </summary>
            <param name="tradeAgreementConsidered">A list of <c>TradeAgreement</c>.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.AddTenderDiscountsConsidered(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds tender discounts considered to the existing list.
            </summary>
            <param name="discountConsidered">A list of <c>string</c>.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject.ToString">
            <summary>
            To string.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine">
            <summary>
            Contains logic for calculating retail prices.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.SetCollectDiagnostics(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.Boolean)">
            <summary>
            Sets Collect diagnostics flag on sales transaction.
            </summary>
            <param name="salesTransaction">An instance of <c>SalesTransaction</c>.</param>
            <param name="collectDiagnosticsData">Collect if true; false otherwise.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.GetCollectDiagnostics(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Gets Collect diagnostics flag on sales transaction.
            </summary>
            <param name="salesTransaction">An instance of <c>SalesTransaction</c>.</param>
            <returns>true if set; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.SetPricingEngineDiagnosticsObject(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineDiagnosticsObject)">
            <summary>
            Sets pricing engine diagnostics object on sales transaction.
            </summary>
            <param name="salesTransaction">An instance of <c>SalesTransaction</c>.</param>
            <param name="diagnosticsObject">An instance of <c>PricingEngineDiagnosticsObject</c>.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.GetPricingEngineDiagnosticsObject(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Gets pricing engine diagnostics object on sales transaction.
            </summary>
            <param name="salesTransaction">An instance of <c>SalesTransaction</c>.</param>
            <returns>An instance of <c>PricingEngineDiagnosticsObject</c>.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.CalculatePricesForTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,System.String,System.String,System.DateTimeOffset)">
            <summary>
            This method will calculate the prices for the whole sales transaction.
            </summary>
            <param name="salesTransaction">Sales transaction.</param>
            <param name="pricingDataManager">Provides access to the pricing data to the pricing calculation.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="customerPriceGroup">Customer price group.</param>
            <param name="currencyCode">Current code.</param>
            <param name="activeDate">Active date time offset for price.</param>
            <remarks>Parallel processing has been disabled, but we leave parameter here for backward compatibility.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.CalculatePricesForTransaction(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            This method will calculate the prices for each of the given item lines within the given price context.
            </summary>
            <param name="transaction">Sales transaction.</param>
            <param name="pricingDataManager">Provides access to the pricing data to the pricing calculation.</param>
            <param name="priceContext">The configuration of the overall context for the pricing calculation. This includes channel info, currency, customer, etc.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.CalculateDiscountsForLines(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,System.String,System.String,System.String,System.String,System.Boolean,Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountCalculationMode,System.DateTimeOffset)">
            <summary>
            Calculates all of the discount lines for the transactions.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="currencyCode">Currency code to filter discounts by.</param>
            <param name="lineDiscountGroup">Optional. Line discount group Id for the customer.</param>
            <param name="multilineDiscountGroup">Optional. Multiline discount group Id for the customer.</param>
            <param name="totalDiscountGroup">Optional. Total discount group Id for the customer.</param>
            <param name="shouldTotalLines">True if discount lines should be totaled for each line. False if they should be left as raw discount lines.</param>
            <param name="calculationMode">Pricing calculation mode.</param>
            <param name="activeDate">Optional. Active, channel date/time to apply discount for.</param>
            <remarks>Each sales line will have a collection of DiscountLines and a net discount total in DiscountAmount property (if totaling is enabled).</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.CalculateDiscountsForLines(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTimeOffset,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingTransactionTotalingHelper)">
            <summary>
            Calculates all of the discount lines for the transactions.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="currencyCode">Currency code to filter discounts by.</param>
            <param name="lineDiscountGroup">Optional. Line discount group Id for the customer.</param>
            <param name="multilineDiscountGroup">Optional. Multiline discount group Id for the customer.</param>
            <param name="totalDiscountGroup">Optional. Total discount group Id for the customer.</param>
            <param name="shouldTotalLines">True if discount lines should be totaled for each line. False if they should be left as raw discount lines.</param>
            <param name="calculateSimpleDiscountOnly">A value indicating whether to calculate for simple discounts only.</param>
            <param name="activeDate">Optional. Active, channel date/time to apply discount for.</param>
            <param name="transactionTotaling">Transaction totalling to calculate tender discounts.</param>
            <remarks>Each sales line will have a collection of DiscountLines and a net discount total in DiscountAmount property (if totaling is enabled).</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.CalculateDiscountsForLines(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTimeOffset)">
            <summary>
            Calculates all of the discount lines for the transactions.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="currencyCode">Currency code to filter discounts by.</param>
            <param name="lineDiscountGroup">Optional. Line discount group Id for the customer.</param>
            <param name="multilineDiscountGroup">Optional. Multiline discount group Id for the customer.</param>
            <param name="totalDiscountGroup">Optional. Total discount group Id for the customer.</param>
            <param name="shouldTotalLines">True if discount lines should be totaled for each line. False if they should be left as raw discount lines.</param>
            <param name="calculateSimpleDiscountOnly">A value indicating whether to calculate for simple discounts only.</param>
            <param name="activeDate">Optional. Active, channel date/time to apply discount for.</param>
            <remarks>Each sales line will have a collection of DiscountLines and a net discount total in DiscountAmount property (if totaling is enabled).</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.CalculateDiscountsForLines(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Calculates all of the discount lines for the transactions.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="priceContext">Price context.</param>
            <remarks>Each sales line will have a collection of DiscountLines and a net discount total in DiscountAmount property (if totaling is enabled).</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.GetAllPeriodicDiscountsForLines(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.ICurrencyOperations,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.String,System.DateTimeOffset)">
            <summary>
            Gets all of the periodic discount lines for the items in the transaction.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="currencyAndRoundingHelper">Currency and rounding helper.</param>
            <param name="transaction">The sales transaction.</param>
            <param name="currencyCode">Currency code to filter discounts by.</param>
            <param name="activeDate">Active date in channel date time to apply discount for.</param>
            <remarks>Each sales line will have a collection of periodic discount lines.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.GetMinAndMaxActiveDates(System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},System.DateTimeOffset)">
            <summary>
            Gets minimum and maximum dates from set of sales lines or default date/time.
            </summary>
            <param name="salesLines">Lines to read date range from.</param>
            <param name="defaultDate">Date to fall back to if lines are missing dates.</param>
            <returns>Truncated min and max date suitable for querying price rules.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.PopulateProductIds(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Populates the product ids.
            </summary>
            <param name="pricingDataManager">The pricing data manager.</param>
            <param name="priceContext">The price context.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.PopulateProductIds(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessor,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine})">
            <summary>
            For all sales lines on the transaction, retrieve the product rec id if it's not already set.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="priceContext">Price context.</param>
            <param name="salesLines">Sales lines.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.GetPricingCalculators">
            <summary>
            Builds the set of pricing calculators to use to find price lines.
            </summary>
            <returns>Set of pricing calculators.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngine.ReducePriceByExemptSalesTax(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV3,System.Collections.Generic.IEnumerable{Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine},Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Reduces the price on the sales line by the amount of exempted sales tax.
            </summary>
            <param name="pricingDataManager">Provides data access to the calculation.</param>
            <param name="salesLinesToCalculate">The sales lines whose prices should be reduced by the exempt tax amount.</param>
            <param name="priceContext">The configuration of the overall context for the pricing calculation. This includes channel info, currency, customer, etc.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionContext">
            <summary>
            This class represents the Pricing Engine Extension Context.
            </summary>
            <remarks>
            Usage of this class is highly advised so that proper clean up is executed when price/discount calculation is over.
            </remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionContext.Dispose">
            <summary>
            Clean up the Extension Repository.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository">
            <summary>
            Pricing engine extension repository.
            </summary>
            <remarks>All are thread static.</remarks>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.DiscountPackages">
            <summary>Gets discount packages.</summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.CleanupPricingEngineExtensions">
            <summary>
            Cleans up pricing engine.
            </summary>
            <remarks>For test only.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterPriceTradeAgreementCalculator(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriceTradeAgreementCalculator)">
            <summary>
            Registers the price trade agreement calculator.
            </summary>
            <param name="priceTradeAgreementCalculator">Price trade agreement calculator.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetPriceTradeAgreementCalculator">
            <summary>
            Gets the price trade agreement calculator.
            </summary>
            <returns>Price trade agreement calculator.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterDiscountPackage(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountPackage)">
            <summary>
            Registers new discount package.
            </summary>
            <param name="discountPackage">Retail discount store.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetRetailDiscountPackage(Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType)">
            <summary>
            Gets the discount package.
            </summary>
            <param name="discountOfferType">Discount offer type.</param>
            <returns>Discount package.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterDiscountableItemGroupKeyConstructor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountableItemGroupKeyConstructor)">
            <summary>
            Registers the discountable item group key constructor.
            </summary>
            <param name="groupKeyConstructor">Discountable item group key constructor.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetDiscountableItemGroupKeyConstructor">
            <summary>
            Gets the discountable item group key constructor.
            </summary>
            <returns>Discountable item group key constructor.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterPriorityDiscountBaseAmountCalculator(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPriorityDiscountBaseAmountCalculator)">
            <summary>
            Registers the priority discount base amount calculator.
            </summary>
            <param name="priorityDiscountBaseAmountCalculator">Priority discount base amount calculator.</param>
            <remarks>If you register this, please review whether you need to register discountable item group key constructor.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetPriorityDiscountBaseAmountCalculator">
            <summary>
            Gets the priority discount base amount calculator.
            </summary>
            <returns>Priority discount base amount calculator.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetPriceEvents">
            <summary>
            Gets the price trade agreement calculator.
            </summary>
            <returns>Price trade agreement calculator.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterDiscountTotaling(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IDiscountTotaling)">
            <summary>
            Registers discount totaling.
            </summary>
            <param name="discountTotaling">Discount totaling.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetDiscountTotaling">
            <summary>
            Gets the instance of discount totaling.
            </summary>
            <returns>The instance of discount totaling.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterRetailDiscountCalculator(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountCalculatorBase)">
            <summary>
            Registers retail discount calculator.
            </summary>
            <param name="retailDiscountCalculator">Instance of pricing engine.</param>
            <remarks>If you want to plug your own retail discount calculator, this is the one. You may ignore the rest in the extension repository if you do not need them.</remarks>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetRetailDiscountCalculator">
            <summary>
            Gets the instance of retail discount calculator.
            </summary>
            <returns>The instance of retail discount calculator.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterAlgorithm(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.BestDealAlgorithmBase)">
            <summary>
            Registers the best deal discount algorithm.
            </summary>
            <param name="algorithm">Discount algorithm.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.GetAlgorithm">
            <summary>
            Gets the best deal discount algorithm.
            </summary>
            <returns>Discount algorithm.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterPricingEngineInternalExtensionsForCompeteWithinPriorityCompoundAcross">
            <summary>
            Initializes pricing engine for concurrency model: complete within priority and compound across.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.RegisterPricingEngineInternalExtensionsForPricingZone">
            <summary>
            Initializes pricing engine for concurrency model: complete within priority and compound across. In addition, compound off of original price.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PricingEngineExtensionRepository.CleanupPricingEngineInternalExtensions">
            <summary>
            Cleans up pricing engine internal extensions.
            </summary>
            <remarks>For test only.</remarks>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod">
            <summary>
            This indicates the method used to calculate the discount. Except for Least Expensive or Line-specific, these will define how
            a numeric discount value (defined elsewhere) is to be interpreted. E.g. if this is DiscountPercent, the value represents a
            percent off, if this is DealPrice, the value represents the price of the discounted item.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod.DealPrice">
            <summary>
            Discount value is a price for the discounted item.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod.DiscountPercent">
            <summary>
            Discount value is a percent off the item's price.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod.DiscountAmount">
            <summary>
            Discount value is an amount off the item's price.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod.LeastExpensive">
            <summary>
            Discount amount off should be the price of the least expensive item on the discount.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MixAndMatchDiscountMethod.LineSpecific">
            <summary>
            The discount method is deferred to the discount line defined for each item.
            </summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.EffectiveDiscountMethodForOrdering">
            <summary>Effective discount method for ordering.</summary>
            <remarks>
            Used only in concurrency control model: best price and compound within priority and no compound across.
            When we have multiple compounded discounts of the same priority, we order them by deal or unit price, amount off and percentage off,
            and apply one after another.
            See <see href="https://blogs.msdn.microsoft.com/retaillife/2017/04/04/dynamics-retail-discount-concept-effective-discount-method-for-compound-ordering/">Dynamics Retail Discount Concept: Effective Discount Method for Compound Ordering</see>.
            </remarks>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.EffectiveDiscountMethodForOrdering.DealPriceOrUnitPrice">
            <summary>Deal price or unit price.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.EffectiveDiscountMethodForOrdering.AmountOff">
            <summary>Amount off.</summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.EffectiveDiscountMethodForOrdering.PercentageOff">
            <summary>Percentage off.</summary>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator">
            <summary>
            This class applies tender discounts on a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.IPricingDataAccessorV2)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator"/> class.
            </summary>
            <param name="priceContext">Price context.</param>
            <param name="pricingDataManager">The data manager.</param>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator.DiscountableItemDiscounts">
            <summary>
            Gets or sets list of <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.TenderDiscount"/> by <see cref="T:Microsoft.Dynamics.Commerce.Runtime.DataModel.TenderType"/> and discountable item index
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator.CalculateDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates distribution of manual loyalty discounts across the transaction.
            Should be called only after other discounts are calculated.
            </summary>
            <param name="transaction">Transaction to calculate manual loyalty discounts on.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator.InitializeDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Initializes the internal variables that hold all of the possible discounts.
            </summary>
            <param name="transaction">The sales transaction to initialize discounts for.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator.InitDiscountableItemDiscounts(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Define applicable discounts for each <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountData.DiscountableItemGroup"/>.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TenderDiscountCalculator.ApplyDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            This method applies tender discounts across sale items in the transaction
            </summary>
            <param name="transaction">The transaction receiving loyalty discount lines.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LineDiscountCalculator">
            <summary>
            This class is used to find and populate line discount trade agreement discounts on a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LineDiscountCalculator.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LineDiscountCalculator"/> class with given configurations.
            </summary>
            <param name="discountParameters">Configuration dictating which trade agreement discount combinations are active.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LineDiscountCalculator.CalculateLineManualDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates manual line discount sent from cashier.
            Should be called only after other discounts are calculated.
            </summary>
            <param name="transaction">Transaction to calculate manual total discounts on.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LineDiscountCalculator.CalcLineDiscount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            The calculation of a customer line discount.
            </summary>
            <param name="tradeAgreements">Trade agreement collection to calculate on. If null, uses the pricing data manager to find agreements.</param>
            <param name="transaction">The sales transaction which needs line discounts..</param>
            <returns>
            The sales transaction.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.LineDiscountCalculator.AddLineDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLine)">
            <summary>
            Calculate the manual line discount.
            </summary>
            <param name="saleItem">The sale item that contains the discount lines.</param>
            <param name="lineDiscountItem">The line discount amount to discount the transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MultilineDiscountCalculator">
            <summary>
            This class is used to find and populate multiline trade agreement discounts on a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MultilineDiscountCalculator.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MultilineDiscountCalculator"/> class with given configurations.
            </summary>
            <param name="discountParameters">Configuration dictating which trade agreement discount combinations are active.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MultilineDiscountCalculator.CalcMultiLineDiscount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            The calculation of a customer multiline discount.
            </summary>
            <remarks>
            Calculation of multiline discount is done as follows:
              1. Create working table for calculation.
              2. Populate working table with total quantities for all the multiline groups encountered on the sales lines.
              3. For all rows (and therefore multiline groups) found, search for trade agreements in the database.
                 a. The search is first for customer-specific, then customer multiline discount group, then all customers.
                 b. The search stops when a trade agreement is encountered with "Find next" unmarked.
                 c. If nothing is found for the store currency the search is attempted again with the company accounting currency.
              4. All found agreements are summed in the working table and applied to each sales line which matches the multiline groups.
              5. If there are sales lines which weren't discounted with a multiline discount.
                 a. Find their total quantity and search for any multiline trade agreements marked for "All items".
                 b. If any agreements were found apply them to any lines that weren't already discounted with a multiline discount.
            </remarks>
            <param name="tradeAgreements">Trade agreement collection to calculate on. If null, uses the pricing data manager to find agreements.</param>
            <param name="transaction">The sales transaction which needs multiline discounts attached.</param>
            <returns>
            The sales transaction.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MultilineDiscountCalculator.ApplyMultilineDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Apply the given multiline discount row to the given sales line if discount amounts have been specified.
            </summary>
            <param name="salesLine">The sales line which will receive the discount.</param>
            <param name="percent1">Percentage one.</param>
            <param name="percent2">Percentage two.</param>
            <param name="discountAmount">Discount amount.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.MultilineDiscountCalculator.GetMultiLineDiscountLine(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement},Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode,Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,System.String,System.Decimal,System.Decimal@,System.Decimal@,System.Decimal@)">
            <summary>
            Find and total all multiline discount trade agreements that match the given relations and quantity.
            </summary>
            <param name="tradeAgreements">Trade agreement collection to calculate on.</param>
            <param name="itemCode">The item code to search by (item group or all).</param>
            <param name="retailTransaction">The transaction context with Id and customer Id.</param>
            <param name="priceGroup">Multiline price group.</param>
            <param name="salesQuantity">Aggregated quantity for multiline price group.</param>
            <param name="percent1">Percentage one.</param>
            <param name="percent2">Percentage two.</param>
            <param name="discountAmount">Discount amount.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator">
            <summary>
            This class is used to find and populate total discount trade agreement discounts and manual total discounts on a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator.#ctor(Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.DiscountParameters,Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator"/> class with given configurations.
            </summary>
            <param name="discountParameters">Configuration dictating which trade agreement discount combinations are active.</param>
            <param name="priceContext">Price context.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator.CalculateTotalManualDiscount(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Calculates distribution of manual total discounts across the transaction.
            Should be called only after other discounts are calculated.
            </summary>
            <param name="transaction">Transaction to calculate manual total discounts on.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator.CalcTotalCustomerDiscount(System.Collections.Generic.List{Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreement},Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            The calculation of the total customer discount.
            </summary>
            <param name="tradeAgreements">Trade agreement collection to calculate on. If null, uses the pricing data manager to find agreements.</param>
            <param name="retailTransaction">The retail transaction which needs total discounts.</param>
            <returns>
            The retail transaction.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator.GetCustomerDiscountItem(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine,Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerDiscountType,Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLineType)">
            <summary>
            Retrieves a customer discount item of the indicated type if it exists and creates one if not.
            </summary>
            <param name="salesLine">The sales line from which to find customer discount lines.</param>
            <param name="customerDiscountType">The customer discount type.</param>
            <param name="lineDiscountType">The line discount type.</param>
            <returns>
            The discount line.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator.AddTotalDiscPctLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction)">
            <summary>
            Adds total discount lines to the item lines.
            </summary>
            <param name="transaction">The transaction receiving total discount lines.</param>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.TotalDiscountCalculator.AddTotalDiscAmountLines(Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction,Microsoft.Dynamics.Commerce.Runtime.DataModel.DiscountLineType,System.Decimal)">
            <summary>
            This method will distribute the amountToDiscount across all the sale items in the transaction
              proportionally except for the line item with the largest amount.  The remainder will be distributed
              to the line item with the largest amount to ensure the amount to discount is exactly applied.
            This method currently works for either the customer discount or when the total discount button is applied.
            </summary>
            <param name="transaction">The transaction receiving total discount lines.</param>
            <param name="discountType">Whether this discount is for a customer or for the total discount item.</param>
            <param name="amountToDiscount">The amount to discount the transaction.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs">
            <summary>
            Arguments for a Price Agreement lookup operation and methods for reading.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.CustomerId">
            <summary>
            The optional customer account number to consider.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.PriceGroups">
            <summary>
            The price group Ids to search by.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.CurrencyCode">
            <summary>
            The currency code to filter by.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.Quantity">
            <summary>
            The quantity of the item or total cost to consider.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.ItemId">
            <summary>
            The item Id to find a price for.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.UnitOfMeasure">
            <summary>
            The sales unit of measure of the item. Used to search by unit.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.Dimensions">
            <summary>
            Optional parameter which specifies the product variant dimensions to consider for price search.
            </summary>
        </member>
        <member name="P:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.IsVariant">
            <summary>
            Gets a value indicating whether the item is a variant.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.GetItemRelation(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode)">
            <summary>
            Gets price agreement 'item relation' based on arguments and given item relation code.
            </summary>
            <param name="itemCode">Item relation code (item/group/all).</param>
            <returns>
            Returns item if 'item' relation code given, otherwise empty string.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.GetAccountRelations(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountAccountCode)">
            <summary>
            Gets price agreement 'account relations' based on arguments and given account relation code.
            </summary>
            <param name="accountCode">Account relation code (customer/price group/all).</param>
            <returns>
            Returns customer if 'customer' code given, price groups if 'group' code given, otherwise empty.
            </returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs.GetUnitId(Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceDiscountItemCode)">
            <summary>
            Gets price agreement unit of measure based on arguments and given item relation code.
            </summary>
            <param name="itemCode">Item relation code (item/group/all).</param>
            <returns>
            Return unit of measure id if 'item' code specified, otherwise empty.
            </returns>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult">
            <summary>
            Result from a price lookup.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult.Price">
            <summary>
            Price value.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult.CustPriceGroup">
            <summary>
            Customer Price Group.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult.MaximumRetailPriceIndia">
            <summary>
            Maximum retail price.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult.TradeAgreementRecordId">
            <summary>
            Trade agreement record Id.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult.#ctor(System.Decimal,System.Int64,System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceResult"/> struct.
            </summary>
            <param name="price">Price of the result.</param>
            <param name="tradeAgreementRecordId">Trade agreement record Id.</param>
            <param name="maximumRetailPriceIndia">Maximum retail price.</param>
            <param name="custPriceGroup">Customer price group.</param>
        </member>
        <member name="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs">
            <summary>
            Arguments for a Retail price lookup operation.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.CustomerId">
            <summary>
            The optional customer account number to consider.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.PriceGroups">
            <summary>
            The price group Ids to search by.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.CurrencyCode">
            <summary>
            The currency code to filter by.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.Quantity">
            <summary>
            The quantity of the item or total cost to consider.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.ItemId">
            <summary>
            The item Id to find a price for.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.Barcode">
            <summary>
            The barcode for this line. Deprecated.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.DefaultSalesUnitOfMeasure">
            <summary>
            The default sales unit of measure.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.SalesUOM">
            <summary>
            The sales unit of measure of the item. Used to search by unit.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.QuantityOnDefaultSOM">
            <summary>
            The quantity of the item or total cost to consider in default quantity.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.UnitOfMeasureConversion">
            <summary>
            The class which manages unit conversion for this item.
            </summary>
        </member>
        <member name="F:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.Dimensions">
            <summary>
            Optional parameter which specifies the product variant dimensions to consider for price search.
            </summary>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.ArgreementArgsForSale">
            <summary>
            Convert to <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs"/> using the Sale UOM.
            </summary>
            <returns>Sales price agreement arguments.</returns>
        </member>
        <member name="M:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.RetailPriceArgs.AgreementArgsForDefaultSales">
            <summary>
            Convert to <see cref="T:Microsoft.Dynamics.Commerce.Runtime.Services.PricingEngine.PriceAgreementArgs"/> using the Inventory UOM.
            </summary>
            <returns>The inventory price agreement arguments.</returns>
        </member>
    </members>
</doc>
